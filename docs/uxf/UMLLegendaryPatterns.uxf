<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.1">
  <zoom_level>1</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>489</x>
      <y>313</y>
      <w>32</w>
      <h>41</h>
    </coordinates>
    <panel_attributes>legendary.Classes::LegendaryClass
--
-className: String
-superClassName: String
-interfaces: List&lt;String&gt;
-methods: Map&lt;String, IMethod&gt;
-fields: List&lt;IField&gt;
-isInterface: boolean
--
+LegendaryClass(): ctor
+setClassName(String className): void
+setSuper(String superClassName): void
+setInterfaces(List&lt;String&gt; interfaces): void
+addMethod(IMethod method): void
+addField(IField field): void
+getClassName(): String
+getSuperName(): String
+getInterfaces(): List&lt;String&gt;
+getMethods(): Map&lt;String, IMethod&gt;
+getFields(): List&lt;IField&gt;
+setIsInterface(boolean isInterface): void
+isInterface(): boolean
+accept(IVisitor v): void
+getMethodObjects(): List&lt;IMethod&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>352</x>
      <y>386</y>
      <w>64</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>legendary.Classes::LegendaryMethod
--
-methodAccess: String
-methodName: String
-parameters: List&lt;String&gt;
-methodCallStack: Queue&lt;List&lt;String&gt;&gt;
-methodReturnType: String
--
+LegendaryMethod(): ctor
+setAccess(String accessType): void
+setMethodName(String methodName): void
+setParameters(List&lt;String&gt; parameters): void
+setReturnType(String returnType): void
+getAccess(): String
+getMethodName(): String
+getParameters(): List&lt;String&gt;
+getReturnType(): String
+accept(IVisitor v): void
+addMethodToCallStack(String methodOwner, String className, String methodName): void
+getCallStack(): Queue&lt;List&lt;String&gt;&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>618</x>
      <y>320</y>
      <w>37</w>
      <h>29</h>
    </coordinates>
    <panel_attributes>legendary.Classes::GraphVizOutputStream
--
-builder: StringBuilder
-relationRep: Map&lt;Relations, String&gt;
--
+GraphVizOutputStream(StringBuilder builder): ctor
-write(String s): void
+previsit(IModel m): void
+visit(IModel m): void
-addArrows(IModel m): String
+postvisit(IModel m): void
+previsit(IClass c): void
+visit(IClass c): void
+postvisit(IClass c): void
+visit(IField f): void
+visit(IMethod m): void
+initialize(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>438</x>
      <y>388</y>
      <w>29</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>legendary.Classes::LegendaryField
--
-fieldAccessType: String
-fieldName: String
-fieldType: String
-baseFields: Set&lt;String&gt;
--
+LegendaryField(): ctor
+setAccess(String fieldAccessType): void
+setFieldName(String fieldName): void
+setType(String fieldType): void
+getAccess(): String
+getFieldName(): String
+getType(): String
+getBaseTypes(): Set&lt;String&gt;
+accept(IVisitor v): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>557</x>
      <y>324</y>
      <w>52</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>legendary.Classes::SDEditOutputStream
--
-model: IModel
-builder: StringBuilder
-classes: Set&lt;String&gt;
-methodCalls: List&lt;String&gt;
-depth: int
-origDepth: int
--
+SDEditOutputStream(IModel model, int depth, StringBuilder builder): ctor
+write(String s): void
+previsit(IMethod m): void
+visit(IMethod m): void
+postvisit(IMethod m): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>485</x>
      <y>285</y>
      <w>38</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>legendary.Classes::LegendaryModel
--
-classList: Set&lt;IClass&gt;
-relations: Map&lt;List&lt;String&gt;, List&lt;Relations&gt;&gt;
--
+LegendaryModel(): ctor
+getClasses(): Set&lt;IClass&gt;
+addClass(IClass c): void
+getRelations(): Map&lt;List&lt;String&gt;, List&lt;Relations&gt;&gt;
+addRelation(String c1, String c2, Relations r): void
+accept(IVisitor v): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>580</x>
      <y>294</y>
      <w>58</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>legendary.Classes::ClassParser
--
+ instance: ClassParser
- detectors: Map&lt;Pattern, IPatternDetector&gt;
- patterns: Map&lt;Pattern, Set&lt;IClass&gt;&gt;
--
-ClassParser(): ctor
+getInstance(): ClassParser
+makeSDEdit(String classname, String methodname, int depth, IModel model): void
+makeGraphViz(IModel m): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>405</x>
      <y>313</y>
      <w>33</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
legendary.Interfaces::IClass
--
--
+setClassName(String className): void
+setSuper(String superClassName): void
+setInterfaces(List&lt;String&gt; interfaces): void
+addMethod(IMethod method): void
+addField(IField field): void
+getClassName(): String
+getSuperName(): String
+getInterfaces(): List&lt;String&gt;
+getMethods(): Map&lt;String, IMethod&gt;
+getFields(): List&lt;IField&gt;
+setIsInterface(boolean isInterface): void
+isInterface(): boolean
+getMethodObjects(): List&lt;IMethod&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>591</x>
      <y>375</y>
      <w>22</w>
      <h>26</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
legendary.Interfaces::IVisitor
--
--
+previsit(IModel m): void
+visit(IModel m): void
+postvisit(IModel m): void
+previsit(IClass c): void
+visit(IClass c): void
+postvisit(IClass c): void
+previsit(IMethod m): void
+visit(IMethod m): void
+postvisit(IMethod m): void
+previsit(IField f): void
+visit(IField f): void
+postvisit(IField f): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>625</x>
      <y>376</y>
      <w>27</w>
      <h>25</h>
    </coordinates>
    <panel_attributes>/legendary.Interfaces::VisitorAdapter/
--
--
+previsit(IModel m): void
+visit(IModel m): void
+postvisit(IModel m): void
+previsit(IClass c): void
+visit(IClass c): void
+postvisit(IClass c): void
+previsit(IMethod m): void
+visit(IMethod m): void
+postvisit(IMethod m): void
+previsit(IField f): void
+visit(IField f): void
+postvisit(IField f): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>350</x>
      <y>352</y>
      <w>65</w>
      <h>23</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
legendary.Interfaces::IMethod
--
--
+setAccess(String accessType): void
+setMethodName(String methodName): void
+setParameters(List&lt;String&gt; parameters): void
+setReturnType(String returnType): void
+addMethodToCallStack(String methodOwner, String className, String methodName): void
+getAccess(): String
+getMethodName(): String
+getParameters(): List&lt;String&gt;
+getReturnType(): String
+getCallStack(): Queue&lt;List&lt;String&gt;&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>435</x>
      <y>354</y>
      <w>33</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
legendary.Interfaces::IField
--
--
+setAccess(String methodAccessType): void
+setFieldName(String methodName): void
+setType(String methodReturnType): void
+getAccess(): String
+getFieldName(): String
+getType(): String
~getBaseTypes(): Set&lt;String&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>403</x>
      <y>288</y>
      <w>39</w>
      <h>13</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
legendary.Interfaces::IModel
--
--
+getClasses(): Set&lt;IClass&gt;
+addClass(IClass c): void
+getRelations(): Map&lt;List&lt;String&gt;, List&lt;Relations&gt;&gt;
+addRelation(String c1, String c2, Relations r): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>558</x>
      <y>385</y>
      <w>24</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
legendary.Interfaces::ITraverser
--
--
+accept(IVisitor v): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>385</x>
      <y>193</y>
      <w>95</w>
      <h>25</h>
    </coordinates>
    <panel_attributes>legendary.ParsingUtil::ParsingMethodUtil
--
-returnPrimCheck: Map&lt;String, String&gt;
-usesClasses: List&lt;String&gt;
--
+ParsingMethodUtil(List&lt;String&gt; usesClasses): ctor
+typeArgumentCollections(String in): List&lt;String&gt;
-convert(List&lt;String&gt; argSet): List&lt;String&gt;
+typeCollections(String in): String
-parsePrimOut(String arg, List&lt;String&gt; argSet): void
+getPrimCheck(): Map&lt;String, String&gt;
-initialize(): void
+getCompleteCallStack(IModel model, IMethod method, int origDepth, int depth, StringBuilder sbMethods, Set&lt;String&gt; sbClasses): void
-SDEditFormatMethod(List&lt;String&gt; methodDetails): String
-SDEditFormatClass(IClass c): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>487</x>
      <y>199</y>
      <w>28</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>legendary.ParsingUtil::ParsingFieldUtil
--
+primCodes: Map&lt;String, String&gt;
--
+getBaseFields(String in): Set&lt;String&gt;
+typeCollections(String in): String
-replacePrims(String s): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>339</x>
      <y>212</y>
      <w>31</w>
      <h>7</h>
    </coordinates>
    <panel_attributes>legendary.ParsingUtil::GeneralUtil
--
--
+getClassesFromDir(File dir): List&lt;String&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>246</x>
      <y>311</y>
      <w>74</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>legendary.asm::ClassMethodVisitor
--
-usesClasses: List&lt;String&gt;
-legendaryClass: IClass
-legendaryModel: IModel
-util: ParsingMethodUtil
--
+ClassMethodVisitor(int api): ctor
+ClassMethodVisitor(int api, ClassVisitor decorated, IClass legendaryClass, IModel legendaryModel): ctor
+visitMethod(int access, String name, String desc, String signature, String[] exceptions): MethodVisitor
~addAccessLevel(int access, IMethod method): void
~addReturnType(String desc, IMethod method): void
~addArguments(String desc, IMethod method): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>221</x>
      <y>343</y>
      <w>101</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>legendary.asm::LegendaryClassMethodVisitor
--
~legendaryClass: IClass
~legendaryModel: IModel
~legendaryMethod: IMethod
--
+LegendaryClassMethodVisitor(int api, MethodVisitor decorated, IClass legendaryClass, IModel legendaryModel, IMethod legendaryMethod): ctor
+visitMethodInsn(int opcode, String owner, String name, String desc, boolean itf): void
+visitFieldInsn(int opcode, String owner, String name, String desc): void
+visitTypeInsn(int opcode, String type): void
+visitVarInsn(int opcode, int var): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>250</x>
      <y>371</y>
      <w>72</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>legendary.asm::ClassFieldVisitor
--
-legendaryClass: IClass
-legendaryModel: IModel
--
+ClassFieldVisitor(int api): ctor
+ClassFieldVisitor(int api, ClassVisitor decorated, IClass legendaryClass, IModel legendaryModel): ctor
+visitField(int access, String name, String desc, String signature, Object value): FieldVisitor
~addAccessLevel(int access, IField field): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>246</x>
      <y>286</y>
      <w>73</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>legendary.asm::ClassDeclarationVisitor
--
-legendaryClass: IClass
-legendaryModel: IModel
--
+ClassDeclarationVisitor(int api, IClass legendaryClass, IModel legendaryModel): ctor
+visit(int version, int access, String name, String signature, String superName, String[] interfaces): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>230</x>
      <y>263</y>
      <w>90</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>legendary.asm::DesignParser
--
+packageName = "legendary": String
+directories = { "/Users/SamPastoriza/Documents/Programming/Java Development/LegendaryPatterns/src/legendary" }: String[]
--
+main(String[] args): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>380</x>
      <y>374</y>
      <w>3</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>441</x>
      <y>293</y>
      <w>46</w>
      <h>3</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;440.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>452</x>
      <y>371</y>
      <w>3</w>
      <h>19</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>235</x>
      <y>272</y>
      <w>21</w>
      <h>41</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>190.0;390.0;80.0;240.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>276</x>
      <y>272</y>
      <w>3</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;140.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>319</x>
      <y>266</y>
      <w>96</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>940.0;220.0;940.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>217</x>
      <y>272</y>
      <w>35</w>
      <h>106</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>330.0;1040.0;10.0;930.0;10.0;660.0;140.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>319</x>
      <y>217</y>
      <w>73</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>710.0;10.0;710.0;260.0;160.0;260.0;160.0;980.0;10.0;980.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>273</x>
      <y>331</y>
      <w>3</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;120.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>506</x>
      <y>353</y>
      <w>54</w>
      <h>37</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>520.0;350.0;10.0;350.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>415</x>
      <y>387</y>
      <w>145</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>1430.0;10.0;920.0;10.0;920.0;310.0;10.0;310.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>522</x>
      <y>299</y>
      <w>38</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>360.0;890.0;30.0;890.0;30.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>466</x>
      <y>387</y>
      <w>94</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>920.0;10.0;410.0;10.0;410.0;250.0;10.0;250.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>522</x>
      <y>294</y>
      <w>85</w>
      <h>83</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>830.0;810.0;830.0;670.0;110.0;670.0;110.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>584</x>
      <y>308</y>
      <w>3</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;160.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>626</x>
      <y>308</y>
      <w>3</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;120.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>593</x>
      <y>347</y>
      <w>45</w>
      <h>31</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>430.0;290.0;430.0;80.0;10.0;80.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>635</x>
      <y>348</y>
      <w>3</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;280.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>434</x>
      <y>251</y>
      <w>172</w>
      <h>46</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;370.0;10.0;10.0;1700.0;10.0;1700.0;440.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>415</x>
      <y>217</y>
      <w>3</w>
      <h>73</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;710.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>275</x>
      <y>214</y>
      <w>66</w>
      <h>51</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>640.0;10.0;130.0;10.0;10.0;490.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>466</x>
      <y>210</y>
      <w>27</w>
      <h>196</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>250.0;10.0;160.0;480.0;160.0;1940.0;10.0;1940.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>437</x>
      <y>328</y>
      <w>54</w>
      <h>3</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;520.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>699</x>
      <y>329</y>
      <w>29</w>
      <h>9</h>
    </coordinates>
    <panel_attributes>legendary.detectors::SingletonDetector
--
--
+detect(IModel m): Set&lt;IClass&gt;
+getCandidates(IModel m): Set&lt;IClass&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>699</x>
      <y>296</y>
      <w>28</w>
      <h>11</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
legendary.Interfaces::IPatternDetector
--
--
+detect(IModel m): Set&lt;IClass&gt;
+getCandidates(IModel m): Set&lt;IClass&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>712</x>
      <y>306</y>
      <w>3</w>
      <h>25</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;230.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>612</x>
      <y>286</y>
      <w>92</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>900.0;100.0;900.0;20.0;10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>426</x>
      <y>243</y>
      <w>292</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;450.0;10.0;10.0;2900.0;10.0;2900.0;530.0</additional_attributes>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>214</x>
      <y>257</y>
      <w>126</w>
      <h>146</h>
    </coordinates>
    <panel_attributes>ASM Visitors</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>327</x>
      <y>186</y>
      <w>196</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>Utility</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>347</x>
      <y>272</y>
      <w>181</w>
      <h>155</h>
    </coordinates>
    <panel_attributes>Model Framework</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>422</x>
      <y>300</y>
      <w>3</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;130.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>386</x>
      <y>340</y>
      <w>21</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;120.0;190.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>437</x>
      <y>340</y>
      <w>8</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>60.0;140.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>542</x>
      <y>364</y>
      <w>119</w>
      <h>46</h>
    </coordinates>
    <panel_attributes>Visitor Framework</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>543</x>
      <y>281</y>
      <w>127</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>Analysis Framework</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>689</x>
      <y>291</y>
      <w>55</w>
      <h>53</h>
    </coordinates>
    <panel_attributes>Pattern framework</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
