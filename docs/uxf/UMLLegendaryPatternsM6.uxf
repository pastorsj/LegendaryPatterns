<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.1">
  <zoom_level>5</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>190</x>
      <y>505</y>
      <w>365</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>legendary.asm::ClassMethodVisitor
--
-usesClasses: List&lt;String&gt;
-legendaryClass: IClass
-legendaryModel: IModel
--
+ClassMethodVisitor(int api): ctor
+ClassMethodVisitor(int api, ClassVisitor decorated, IClass legendaryClass, IModel legendaryModel): ctor
+visitMethod(int access, String name, String desc, String signature, String[] exceptions): MethodVisitor
-addAccessLevel(int access, IMethod method): void
-addReturnType(String desc, IMethod method): void
-addArguments(String desc, IMethod method): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>135</x>
      <y>635</y>
      <w>500</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>legendary.asm::LegendaryClassMethodVisitor
--
~legendaryClass: IClass
~legendaryModel: IModel
~legendaryMethod: IMethod
--
+LegendaryClassMethodVisitor(int api, MethodVisitor decorated, IClass legendaryClass, IModel legendaryModel, IMethod legendaryMethod): ctor
+visitMethodInsn(int opcode, String owner, String name, String desc, boolean itf): void
+visitFieldInsn(int opcode, String owner, String name, String desc): void
+visitTypeInsn(int opcode, String type): void
+visitVarInsn(int opcode, int var): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>190</x>
      <y>760</y>
      <w>355</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>legendary.asm::ClassFieldVisitor
--
-legendaryClass: IClass
-legendaryModel: IModel
--
+ClassFieldVisitor(int api): ctor
+ClassFieldVisitor(int api, ClassVisitor decorated, IClass legendaryClass, IModel legendaryModel): ctor
+visitField(int access, String name, String desc, String signature, Object value): FieldVisitor
~addAccessLevel(int access, IField field): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>225</x>
      <y>285</y>
      <w>300</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>legendary.asm::DesignParser
--
+packageName = "legendary": String
+directories = { //	"C:/Users/Jason/Documents/374/Lab5-1-Solution/src/problem" };
"C:/Users/Jason/Documents/GitHub/LegendaryPatterns/src/legendary" }: String[]
+classesSeen = new ArrayList&lt;String&gt;(): ArrayList&lt;String&gt;
--
+main(String[] args): void
+executeASM(String className, IModel legendaryModel, boolean drawable): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>200</x>
      <y>415</y>
      <w>360</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>legendary.asm::ClassDeclarationVisitor
--
-legendaryClass: IClass
-legendaryModel: IModel
--
+ClassDeclarationVisitor(int api, IClass legendaryClass, IModel legendaryModel): ctor
+visit(int version, int access, String name, String signature, String superName, String[] interfaces): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1565</x>
      <y>690</y>
      <w>215</w>
      <h>260</h>
    </coordinates>
    <panel_attributes>legendary.Classes::LegendaryClass
--
-className: String
-superClassName: String
-interfaces: List&lt;String&gt;
-methods: Map&lt;String, Map&lt;List&lt;String&gt;, IMethod&gt;&gt;
-fields: List&lt;IField&gt;
-isInterface: boolean
-creationOrder: int
-drawable: boolean
-count: int
--
+LegendaryClass(): ctor
+setClassName(String className): void
+setSuper(String superClassName): void
+setInterfaces(List&lt;String&gt; interfaces): void
+addMethod(IMethod method): void
+addField(IField field): void
+getClassName(): String
+getSuperName(): String
+getInterfaces(): List&lt;String&gt;
+getMethods(): Map&lt;String, Map&lt;List&lt;String&gt;, IMethod&gt;&gt;
+getFields(): List&lt;IField&gt;
+setIsInterface(boolean isInterface): void
+isInterface(): boolean
+accept(IVisitor v): void
+getMethodObjects(): List&lt;IMethod&gt;
+getCreationOrder(): int
+setDrawable(boolean drawable): void
+isDrawable(): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2670</x>
      <y>1645</y>
      <w>400</w>
      <h>205</h>
    </coordinates>
    <panel_attributes>legendary.Classes::GraphVizOutputStream
--
-builder: StringBuilder
-visitor: IVisitor
-relationRep: Map&lt;Relations, String&gt;
-patterns: Map&lt;IClass, Set&lt;IPattern&gt;&gt;
--
+GraphVizOutputStream(StringBuilder builder, Map&lt;Class&lt;? extends IPattern&gt;, Set&lt;IClass&gt;&gt; map, IModel m): ctor
-initializeVisitors(): void
-invertPatternMap(Map&lt;Class&lt;? extends IPattern&gt;, Set&lt;IClass&gt;&gt; in): Map&lt;IClass, Set&lt;IPattern&gt;&gt;
-write(String s): void
-previsitModel(): void
-visitModel(): void
-addArrows(IModel m): String
-postvisitModel(): void
-previsitClass(): void
-visitClass(): void
-addPatternTags(IClass c): void
-postvisitClass(): void
-patternColor(IClass c): String
-visitField(): void
+visit(IMethod m): void
-visitMethod(): void
+initialize(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1255</x>
      <y>1145</y>
      <w>395</w>
      <h>175</h>
    </coordinates>
    <panel_attributes>legendary.Classes::LegendaryMethod
--
-methodAccess: String
-methodName: String
-parameters: List&lt;String&gt;
-methodCallStack: Queue&lt;List&lt;List&lt;String&gt;&gt;&gt;
-methodReturnType: String
--
+LegendaryMethod(): ctor
+setAccess(String accessType): void
+setMethodName(String methodName): void
+setParameters(List&lt;String&gt; parameters): void
+setReturnType(String returnType): void
+getAccess(): String
+getMethodName(): String
+getParameters(): List&lt;String&gt;
+getReturnType(): String
+accept(IVisitor v): void
+addMethodToCallStack(String methodOwner, String className, String methodName, List&lt;String&gt; params): void
+getCallStack(): Queue&lt;List&lt;List&lt;String&gt;&gt;&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1545</x>
      <y>485</y>
      <w>270</w>
      <h>165</h>
    </coordinates>
    <panel_attributes>legendary.Classes::LegendaryModel
--
-classList: Set&lt;IClass&gt;
-relGraph: Map&lt;IClass, Map&lt;Relations, Set&lt;IClass&gt;&gt;&gt;
-relations: Map&lt;List&lt;String&gt;, List&lt;Relations&gt;&gt;
-patterns: Map&lt;IPattern, Set&lt;IClass&gt;&gt;
--
+LegendaryModel(): ctor
+getClasses(): Set&lt;IClass&gt;
+addClass(IClass c): void
+getRelations(): Map&lt;List&lt;String&gt;, List&lt;Relations&gt;&gt;
+addPattern(IPattern pat, Set&lt;IClass&gt; classes): void
+getPatterns(): Map&lt;IPattern, Set&lt;IClass&gt;&gt;
+convertToGraph(): void
+removeDupArrows(Map&lt;IClass, Map&lt;Relations, Set&lt;IClass&gt;&gt;&gt; temp): void
+getRelGraph(): Map&lt;IClass, Map&lt;Relations, Set&lt;IClass&gt;&gt;&gt;
+addRelation(String c1, String c2, Relations r): void
+accept(IVisitor v): void
+containsClass(String i): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>890</x>
      <y>1145</y>
      <w>145</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>legendary.Classes::LegendaryField
--
-fieldAccessType: String
-fieldName: String
-fieldType: String
-baseFields: Set&lt;String&gt;
--
+LegendaryField(): ctor
+setAccess(String fieldAccessType): void
+setFieldName(String fieldName): void
+setType(String fieldType): void
+getAccess(): String
+getFieldName(): String
+getType(): String
+getBaseTypes(): Set&lt;String&gt;
+accept(IVisitor v): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2280</x>
      <y>1660</y>
      <w>260</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>legendary.Classes::SDEditOutputStream
--
-visitor: IVisitor
-model: IModel
-builder: StringBuilder
-classes: Set&lt;String&gt;
-methodCalls: List&lt;String&gt;
-depth: int
-origDepth: int
--
+SDEditOutputStream(IModel model, int depth, StringBuilder builder): ctor
-initializeVisitors(): void
+write(String s): void
+previsitMethod(): void
+visitMethod(): void
+postvisitMethod(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2440</x>
      <y>1450</y>
      <w>365</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>legendary.Classes::ClassParser
&lt;&lt;Singleton&gt;&gt;
--
-instance: ClassParser
-detect: IPatternDetector
--
-ClassParser(): ctor
+getInstance(): ClassParser
+addDetector(IPatternDetector detect): void
+makeSDEdit(String classname, String methodname, int depth, IModel model, StringBuilder builder): void
+makeGraphViz(IModel m, StringBuilder builder): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1890</x>
      <y>875</y>
      <w>235</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>legendary.detectors::AdapterDetector
--
-detector: IPatternDetector
--
+AdapterDetector(): ctor
+AdapterDetector(IPatternDetector detector): ctor
+detect(IModel m): Map&lt;Class&lt;? extends IPattern&gt;, Set&lt;IClass&gt;&gt;
+getCandidates(IModel m): Set&lt;Set&lt;IClass&gt;&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1890</x>
      <y>990</y>
      <w>235</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>legendary.detectors::DecoratorDetector
--
-detect: IPatternDetector
--
+DecoratorDetector(): ctor
+DecoratorDetector(IPatternDetector detect): ctor
+detect(IModel m): Map&lt;Class&lt;? extends IPattern&gt;, Set&lt;IClass&gt;&gt;
+getCandidates(IModel m): Set&lt;Set&lt;IClass&gt;&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1895</x>
      <y>750</y>
      <w>235</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>legendary.detectors::SingletonDetector
--
-next: IPatternDetector
--
+SingletonDetector(): ctor
+SingletonDetector(IPatternDetector next): ctor
+detect(IModel m): Map&lt;Class&lt;? extends IPattern&gt;, Set&lt;IClass&gt;&gt;
+getCandidates(IModel m): Set&lt;Set&lt;IClass&gt;&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1040</x>
      <y>705</y>
      <w>215</w>
      <h>175</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
legendary.Interfaces::IClass
--
--
+setClassName(String className): void
+setSuper(String superClassName): void
+setInterfaces(List&lt;String&gt; interfaces): void
+addMethod(IMethod method): void
+addField(IField field): void
+getClassName(): String
+getSuperName(): String
+getInterfaces(): List&lt;String&gt;
+getMethods(): Map&lt;String, Map&lt;List&lt;String&gt;, IMethod&gt;&gt;
+getFields(): List&lt;IField&gt;
+setIsInterface(boolean isInterface): void
+isInterface(): boolean
+getMethodObjects(): List&lt;IMethod&gt;
+getCreationOrder(): int
+setDrawable(boolean drawable): void
+isDrawable(): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1115</x>
      <y>950</y>
      <w>395</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
legendary.Interfaces::IMethod
--
--
+setAccess(String accessType): void
+setMethodName(String methodName): void
+setParameters(List&lt;String&gt; parameters): void
+setReturnType(String returnType): void
+getAccess(): String
+getMethodName(): String
+getParameters(): List&lt;String&gt;
+getReturnType(): String
+getCallStack(): Queue&lt;List&lt;List&lt;String&gt;&gt;&gt;
+addMethodToCallStack(String methodOwner, String className, String methodName, List&lt;String&gt; params): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1020</x>
      <y>530</y>
      <w>285</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
legendary.Interfaces::IModel
--
--
+getClasses(): Set&lt;IClass&gt;
+addClass(IClass c): void
+getRelations(): Map&lt;List&lt;String&gt;, List&lt;Relations&gt;&gt;
+addRelation(String c1, String c2, Relations r): void
+convertToGraph(): void
+getRelGraph(): Map&lt;IClass, Map&lt;Relations, Set&lt;IClass&gt;&gt;&gt;
+removeDupArrows(Map&lt;IClass, Map&lt;Relations, Set&lt;IClass&gt;&gt;&gt; tempMap): void
+containsClass(String i): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>885</x>
      <y>960</y>
      <w>160</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
legendary.Interfaces::IField
--
--
+setAccess(String methodAccessType): void
+setFieldName(String methodName): void
+setType(String methodReturnType): void
+getAccess(): String
+getFieldName(): String
+getType(): String
~getBaseTypes(): Set&lt;String&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2520</x>
      <y>635</y>
      <w>105</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
legendary.Interfaces::IPattern
--
--
+tag(): String
+color(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1900</x>
      <y>630</y>
      <w>235</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
legendary.Interfaces::IPatternDetector
--
--
+detect(IModel m): Map&lt;Class&lt;? extends IPattern&gt;, Set&lt;IClass&gt;&gt;
+getCandidates(IModel m): Set&lt;Set&lt;IClass&gt;&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1175</x>
      <y>45</y>
      <w>240</w>
      <h>115</h>
    </coordinates>
    <panel_attributes>legendary.ParsingUtil::GeneralUtil
--
+primCodes: Map&lt;String, String&gt;
--
+typeArgumentCollections(String in): List&lt;String&gt;
-convert(List&lt;String&gt; argSet): List&lt;String&gt;
+typeMethodCollections(String in, List&lt;String&gt; usesClasses): String
-parsePrimOut(String arg, List&lt;String&gt; argSet): void
+getBaseFields(String in): Set&lt;String&gt;
+typeFieldCollections(String in): String
+getClassesFromDir(File dir): List&lt;String&gt;
+writeAndExecGraphViz(StringBuilder builder): void
+writeAndExecSDEdit(StringBuilder builder): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1565</x>
      <y>1775</y>
      <w>240</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>legendary.visitor::VisitorAdapter
&lt;&lt;Adapter&gt;&gt;
--
+keyToVisitMethodMap: Map&lt;LookupKey, IVisitMethod&gt;
--
+VisitorAdapter(): ctor
+preVisit(ITraverser t): void
+visit(ITraverser t): void
+postVisit(ITraverser t): void
-doVisit(VisitType vType, ITraverser t): void
+addVisit(VisitType visitType, Class&lt;?&gt; clazz, IVisitMethod m): void
+getMap(): Map&lt;LookupKey, IVisitMethod&gt;
+removeVisit(VisitType visitType, Class&lt;?&gt; clazz): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1275</x>
      <y>1480</y>
      <w>240</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
legendary.visitor::IVisitor
&lt;&lt;Target&gt;&gt;
--
--
+preVisit(ITraverser t): void
+visit(ITraverser t): void
+postVisit(ITraverser t): void
+addVisit(VisitType visitType, Class&lt;?&gt; clazz, IVisitMethod m): void
+removeVisit(VisitType visitType, Class&lt;?&gt; clazz): void
+getMap(): Map&lt;LookupKey, IVisitMethod&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1595</x>
      <y>1630</y>
      <w>195</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>legendary.visitor::LookupKey
&lt;&lt;Adaptee&gt;&gt;
--
~visitType: VisitType
~clazz: Class&lt;?&gt;
--
+LookupKey(VisitType visitType, Class&lt;?&gt; clazz): ctor
+hashCode(): int
+equals(Object obj): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1630</x>
      <y>1495</y>
      <w>105</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
legendary.visitor::ITraverser
--
--
+accept(IVisitor v): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1840</x>
      <y>1495</y>
      <w>110</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
legendary.visitor::IVisitMethod
&lt;&lt;Adaptee&gt;&gt;
--
--
+execute(ITraverser t): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>1880</x>
      <y>585</y>
      <w>1075</w>
      <h>730</h>
    </coordinates>
    <panel_attributes>PatternDetectionFramework
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>785</x>
      <y>460</y>
      <w>1065</w>
      <h>880</h>
    </coordinates>
    <panel_attributes>Model/Class/Method/Field Framework</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>0</x>
      <y>265</y>
      <w>735</w>
      <h>600</h>
    </coordinates>
    <panel_attributes>Class Analysis Framework</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>1215</x>
      <y>1390</y>
      <w>825</w>
      <h>550</h>
    </coordinates>
    <panel_attributes>Visitor Framework</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>2205</x>
      <y>1385</y>
      <w>945</w>
      <h>510</h>
    </coordinates>
    <panel_attributes>Visitor Analysis Framework</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1300</x>
      <y>580</y>
      <w>255</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;490.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1250</x>
      <y>790</y>
      <w>325</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;630.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>960</x>
      <y>1050</y>
      <w>15</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;190.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1325</x>
      <y>1065</y>
      <w>15</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2020</x>
      <y>680</y>
      <w>15</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2120</x>
      <y>660</y>
      <w>45</w>
      <h>265</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>30.0;10.0;70.0;10.0;70.0;510.0;10.0;510.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2120</x>
      <y>660</y>
      <w>45</w>
      <h>380</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>30.0;10.0;70.0;10.0;70.0;740.0;10.0;740.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2025</x>
      <y>600</y>
      <w>565</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>1110.0;70.0;1110.0;10.0;10.0;20.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1175</x>
      <y>330</y>
      <w>865</w>
      <h>310</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;400.0;10.0;10.0;1710.0;10.0;1710.0;600.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1675</x>
      <y>410</y>
      <w>900</w>
      <h>235</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>1780.0;450.0;1780.0;10.0;10.0;10.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>380</x>
      <y>360</y>
      <w>15</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;110.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>115</x>
      <y>320</y>
      <w>120</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>150.0;460.0;10.0;460.0;10.0;10.0;220.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>70</x>
      <y>320</y>
      <w>165</w>
      <h>495</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>240.0;970.0;10.0;970.0;10.0;10.0;310.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>155</x>
      <y>565</y>
      <w>45</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;140.0;10.0;10.0;70.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>520</x>
      <y>320</y>
      <w>650</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>1280.0;420.0;1280.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1800</x>
      <y>1535</y>
      <w>135</w>
      <h>305</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;adapts&gt;&gt;</panel_attributes>
    <additional_attributes>190.0;10.0;190.0;590.0;10.0;590.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1390</x>
      <y>1565</y>
      <w>185</w>
      <h>270</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;520.0;350.0;520.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>955</x>
      <y>1280</y>
      <w>745</w>
      <h>225</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>1470.0;430.0;1470.0;180.0;10.0;180.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1645</x>
      <y>1230</y>
      <w>55</w>
      <h>275</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>90.0;530.0;90.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1685</x>
      <y>945</y>
      <w>15</w>
      <h>560</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;1100.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1685</x>
      <y>645</y>
      <w>120</w>
      <h>860</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;1700.0;10.0;880.0;220.0;880.0;220.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>1110</x>
      <y>0</y>
      <w>395</w>
      <h>205</h>
    </coordinates>
    <panel_attributes>General Utility Framework</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1860</x>
      <y>655</y>
      <w>780</w>
      <h>805</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>80.0;10.0;10.0;10.0;10.0;1380.0;1540.0;1380.0;1540.0;1590.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2800</x>
      <y>1470</y>
      <w>50</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;90.0;80.0;90.0;80.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2440</x>
      <y>1535</y>
      <w>95</w>
      <h>135</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;250.0;170.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2705</x>
      <y>1535</y>
      <w>125</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>230.0;220.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1290</x>
      <y>445</y>
      <w>1720</w>
      <h>1015</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;580.0;10.0;10.0;3420.0;20.0;3420.0;1800.0;2730.0;1800.0;2730.0;2010.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1690</x>
      <y>1695</y>
      <w>45</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
&lt;&lt;adapts&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1510</x>
      <y>1515</y>
      <w>340</w>
      <h>85</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>660.0;10.0;590.0;10.0;590.0;150.0;140.0;150.0;140.0;60.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1890</x>
      <y>1105</y>
      <w>240</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>legendary.detectors::CompositeDetector
--
-detector: IPatternDetector
--
+CompositeDetector(): ctor
+CompositeDetector(IPatternDetector detector): ctor
+detect(IModel m): Map&lt;Class&lt;? extends IPattern&gt;, Set&lt;IClass&gt;&gt;
+getCandidates(IModel m): Set&lt;Set&lt;IClass&gt;&gt;
-getAllSupers(IModel m, IClass c): Set&lt;IClass&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2125</x>
      <y>660</y>
      <w>40</w>
      <h>500</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>20.0;10.0;60.0;10.0;60.0;980.0;10.0;980.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2340</x>
      <y>755</y>
      <w>135</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>legendary.patterns::SingletonPattern
--
--
+tag(): String
+color(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2190</x>
      <y>995</y>
      <w>160</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>/legendary.patterns::AbstractAdapterPattern/
--
--
+color(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2495</x>
      <y>985</y>
      <w>170</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>/legendary.patterns::AbstractCompositePattern/
--
--
+color(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2735</x>
      <y>785</y>
      <w>170</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>/legendary.patterns::AbstractDecoratorPattern/
--
--
+color(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2200</x>
      <y>1085</y>
      <w>135</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>legendary.patterns::AdapteePattern
--
--
+tag(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2200</x>
      <y>1140</y>
      <w>130</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>legendary.patterns::AdapterPattern
--
--
+tag(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2190</x>
      <y>1205</y>
      <w>155</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>legendary.patterns::AdapterTargetPattern
--
--
+tag(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2490</x>
      <y>1065</y>
      <w>180</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>legendary.patterns::CompositeComponentPattern
--
--
+tag(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2500</x>
      <y>1130</y>
      <w>155</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>legendary.patterns::CompositeLeafPattern
--
--
+tag(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2505</x>
      <y>1200</y>
      <w>140</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>legendary.patterns::CompositePattern
--
--
+tag(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2730</x>
      <y>865</y>
      <w>180</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>legendary.patterns::DecoratorComponentPattern
--
--
+tag(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2755</x>
      <y>925</y>
      <w>140</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>legendary.patterns::DecoratorPattern
--
--
+tag(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>2320</x>
      <y>720</y>
      <w>170</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>Singleton Pattern</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>2180</x>
      <y>975</y>
      <w>205</w>
      <h>285</h>
    </coordinates>
    <panel_attributes>Adapter Pattern</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>2715</x>
      <y>765</y>
      <w>230</w>
      <h>205</h>
    </coordinates>
    <panel_attributes>Decorator Pattern</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>2475</x>
      <y>965</y>
      <w>225</w>
      <h>295</h>
    </coordinates>
    <panel_attributes>Composite Pattern</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2660</x>
      <y>1000</y>
      <w>40</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0;60.0;170.0;20.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2650</x>
      <y>1000</y>
      <w>50</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>30.0;10.0;80.0;10.0;80.0;300.0;10.0;300.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2640</x>
      <y>1000</y>
      <w>60</w>
      <h>225</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>50.0;10.0;100.0;10.0;100.0;430.0;10.0;430.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2590</x>
      <y>685</y>
      <w>15</w>
      <h>310</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;600.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2470</x>
      <y>685</y>
      <w>135</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>250.0;10.0;250.0;180.0;10.0;180.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2325</x>
      <y>1015</y>
      <w>55</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>50.0;10.0;90.0;10.0;90.0;280.0;10.0;280.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2330</x>
      <y>1015</y>
      <w>50</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>40.0;10.0;80.0;10.0;80.0;170.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2340</x>
      <y>1015</y>
      <w>40</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>20.0;10.0;60.0;10.0;60.0;420.0;10.0;420.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2265</x>
      <y>685</y>
      <w>340</w>
      <h>320</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>660.0;10.0;660.0;410.0;10.0;410.0;10.0;620.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2900</x>
      <y>795</y>
      <w>50</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0;80.0;170.0;20.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2890</x>
      <y>795</y>
      <w>60</w>
      <h>155</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>30.0;10.0;100.0;10.0;100.0;290.0;10.0;290.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2590</x>
      <y>685</y>
      <w>155</w>
      <h>125</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;230.0;290.0;230.0</additional_attributes>
  </element>
</diagram>
