digraph G{
	node [shape = "record"]
legendaryClassesRelations [
	label = "{legendary.Classes::Relations|
	+ _EXTENDS: Relations_\l
	+ _IMPLEMENTS: Relations_\l
	+ _USES: Relations_\l
	+ _ASSOCIATES: Relations_\l
	+ _REV_EXTENDS: Relations_\l
	+ _REV_IMPLEMENTS: Relations_\l
	+ _REV_USES: Relations_\l
	+ _REV_ASSOCIATES: Relations_\l
	- _ENUMVALUES: Relations[]_\l
	|
	+ _valueOf(String) : Relations_\l
	+ _values() : Relations_\l
	}"
	]
javaawteventContainerListener [
	label = "{\<\<interface\>\>\njava.awt.event::ContainerListener\n\<\<decorator\>\>|
	|
	+ componentAdded(ContainerEvent) : void\l
	+ componentRemoved(ContainerEvent) : void\l
	}"
	style = "filled"
fillcolor = "green"]
javaawtdndDragGestureListener [
	label = "{\<\<interface\>\>\njava.awt.dnd::DragGestureListener\n\<\<decorator\>\>|
	|
	+ dragGestureRecognized(DragGestureEvent) : void\l
	}"
	style = "filled"
fillcolor = "green"]
javautilEventListener [
	label = "{\<\<interface\>\>\njava.util::EventListener\n\<\<component, decorator\>\>|
	|
	}"
	style = "filled"
fillcolor = "green"]
legendarypatternsCompositeComponentPattern [
	label = "{legendary.patterns::CompositeComponentPattern|
	|
	+ tag() : String\l
	}"
	]
legendarydetectorsCompositeDetector [
	label = "{legendary.detectors::CompositeDetector\n\<\<decorator\>\>|
	|
	- getAllSupers(IModel, IClass) : Set\<IClass\>\l
	+ getPatternName() : String\l
	+ getCandidates(IModel) : Set\<Set\<IClass\>\>\l
	+ detect(IModel) : Map\<Class\<IPattern\>Set\<IClass\>\>\l
	}"
	style = "filled"
fillcolor = "green"]
javalangIterable [
	label = "{\<\<interface\>\>\njava.lang::Iterable\n\<\<decorator, component\>\>|
	|
	+ iterator() : Iterator\<\>\l
	+ spliterator() : Spliterator\<\>\l
	+ forEach(Consumer\<\>) : void\l
	}"
	style = "filled"
fillcolor = "green"]
legendaryInterfacesIModel [
	label = "{\<\<interface\>\>\nlegendary.Interfaces::IModel|
	|
	+ convertToGraph() : void\l
	+ getRelGraph() : Map\<IClass, Map\<Relations, Set\<IClass\>\>\>\l
	+ removeDupArrows(Map\<IClass, Map\<Relations, Set\<IClass\>\>\>) : void\l
	+ getRelations() : Map\<List\<String\>List\<Relations\>\>\l
	+ addRelation(String, String, Relations) : void\l
	+ containsClass(String) : boolean\l
	+ getClasses() : Set\<IClass\>\l
	+ addClass(IClass) : void\l
	}"
	]
legendaryDisplayScreenCheckBoxModel [
	label = "{legendary.DisplayScreen::CheckBoxModel\n\<\<adaptee\>\>|
	- model: TreeModel\l
	- root: DefaultMutableTreeNode\l
	- patternInformation: Map\<IPatternDetector, Map\<IClass, Set\<IClass\>\>\>\l
	|
	+ getModel() : TreeModel\l
	+ regen() : void\l
	- initializeCheckBoxPatternArrays() : void\l
	- getPatternInformation() : Map\<IPatternDetector, Map\<IClass, Set\<IClass\>\>\>\l
	}"
	style = "filled"
fillcolor = "red"]
legendaryvisitorIVisitor [
	label = "{\<\<interface\>\>\nlegendary.visitor::IVisitor|
	|
	+ postVisit(ITraverser) : void\l
	+ preVisit(ITraverser) : void\l
	+ addVisit(VisitType, Class\<\>, IVisitMethod) : void\l
	+ removeVisit(VisitType, Class\<\>) : void\l
	+ visit(ITraverser) : void\l
	+ getMap() : Map\<LookupKey, IVisitMethod\>\l
	}"
	]
legendaryDisplayScreenPatternDisplay [
	label = "{legendary.DisplayScreen::PatternDisplay\n\<\<Singleton\>\>|
	- _instance: PatternDisplay_\l
	- pane: JScrollPane\l
	- label: JLabel\l
	- icon: ImageProxy\l
	|
	+ update() : void\l
	+ _getInstance() : PatternDisplay_\l
	+ loadImage() : void\l
	}"
	color = blue]
legendarypatternsSingletonPattern [
	label = "{legendary.patterns::SingletonPattern|
	|
	+ color() : String\l
	+ tag() : String\l
	+ tagArrow(Set\<IPattern\>, Set\<IPattern\>) : String\l
	}"
	]
legendarydetectorsAbstractPatternDetector [
	label = "{legendary.detectors::AbstractPatternDetector\n\<\<decorator\>\>|
	# detector: IPatternDetector\l
	# keyMap: Map\<IClass, Set\<IClass\>\>\l
	|
	+ getKeyMap() : Map\<IClass, Set\<IClass\>\>\l
	+ getDecorated() : IPatternDetector\l
	+ addDetector(IPatternDetector) : void\l
	}"
	style = "filled"
fillcolor = "green"]
javautilCollection [
	label = "{\<\<interface\>\>\njava.util::Collection\n\<\<decorator, component\>\>|
	|
	+ add(, ) : boolean\l
	+ spliterator() : Spliterator\<\>\l
	+ containsAll(Collection\<\>) : boolean\l
	+ isEmpty() : boolean\l
	+ clear() : void\l
	+ remove(Object) : boolean\l
	+ removeIf(Predicate\<\>) : boolean\l
	+ contains(Object) : boolean\l
	+ iterator() : Iterator\<\>\l
	+ removeAll(Collection\<\>) : boolean\l
	+ size() : int\l
	+ addAll(Collection\<\>) : boolean\l
	+ stream() : Stream\<\>\l
	+ hashCode() : int\l
	+ equals(Object) : boolean\l
	+ toArray(, , Object\>, , [], ) : \l
	+ toArray() : Object\l
	+ parallelStream() : Stream\<\>\l
	+ retainAll(Collection\<\>) : boolean\l
	}"
	style = "filled"
fillcolor = "green"]
javalangComparable [
	label = "{\<\<interface\>\>\njava.lang::Comparable\n\<\<component, decorator\>\>|
	|
	+ compareTo(, ) : int\l
	}"
	style = "filled"
fillcolor = "green"]
javaawteventMouseWheelListener [
	label = "{\<\<interface\>\>\njava.awt.event::MouseWheelListener\n\<\<decorator\>\>|
	|
	+ mouseWheelMoved(MouseWheelEvent) : void\l
	}"
	style = "filled"
fillcolor = "green"]
javaxswingJFileChooser [
	label = "{javax.swing::JFileChooser\n\<\<decorator\>\>|
	- _uiClassID: String_\l
	+ _OPEN_DIALOG: int_\l
	+ _SAVE_DIALOG: int_\l
	+ _CUSTOM_DIALOG: int_\l
	+ _CANCEL_OPTION: int_\l
	+ _APPROVE_OPTION: int_\l
	+ _ERROR_OPTION: int_\l
	+ _FILES_ONLY: int_\l
	+ _DIRECTORIES_ONLY: int_\l
	+ _FILES_AND_DIRECTORIES: int_\l
	+ _CANCEL_SELECTION: String_\l
	+ _APPROVE_SELECTION: String_\l
	+ _APPROVE_BUTTON_TEXT_CHANGED_PROPERTY: String_\l
	+ _APPROVE_BUTTON_TOOL_TIP_TEXT_CHANGED_PROPERTY: String_\l
	+ _APPROVE_BUTTON_MNEMONIC_CHANGED_PROPERTY: String_\l
	+ _CONTROL_BUTTONS_ARE_SHOWN_CHANGED_PROPERTY: String_\l
	+ _DIRECTORY_CHANGED_PROPERTY: String_\l
	+ _SELECTED_FILE_CHANGED_PROPERTY: String_\l
	+ _SELECTED_FILES_CHANGED_PROPERTY: String_\l
	+ _MULTI_SELECTION_ENABLED_CHANGED_PROPERTY: String_\l
	+ _FILE_SYSTEM_VIEW_CHANGED_PROPERTY: String_\l
	+ _FILE_VIEW_CHANGED_PROPERTY: String_\l
	+ _FILE_HIDING_CHANGED_PROPERTY: String_\l
	+ _FILE_FILTER_CHANGED_PROPERTY: String_\l
	+ _FILE_SELECTION_MODE_CHANGED_PROPERTY: String_\l
	+ _ACCESSORY_CHANGED_PROPERTY: String_\l
	+ _ACCEPT_ALL_FILE_FILTER_USED_CHANGED_PROPERTY: String_\l
	+ _DIALOG_TITLE_CHANGED_PROPERTY: String_\l
	+ _DIALOG_TYPE_CHANGED_PROPERTY: String_\l
	+ _CHOOSABLE_FILE_FILTER_CHANGED_PROPERTY: String_\l
	- dialogTitle: String\l
	- approveButtonText: String\l
	- approveButtonToolTipText: String\l
	- approveButtonMnemonic: int\l
	- filters: Vector\<FileFilter\>\l
	- dialog: JDialog\l
	- dialogType: int\l
	- returnValue: int\l
	- accessory: JComponent\l
	- fileView: FileView\l
	- controlsShown: boolean\l
	- useFileHiding: boolean\l
	- _SHOW_HIDDEN_PROP: String_\l
	- showFilesListener: PropertyChangeListener\l
	- fileSelectionMode: int\l
	- multiSelectionEnabled: boolean\l
	- useAcceptAllFileFilter: boolean\l
	- dragEnabled: boolean\l
	- fileFilter: FileFilter\l
	- fileSystemView: FileSystemView\l
	- currentDirectory: File\l
	- selectedFile: File\l
	- selectedFiles: File[]\l
	# accessibleContext: AccessibleContext\l
	|
	+ showOpenDialog(Component) : int\l
	+ getAccessory() : JComponent\l
	+ getApproveButtonMnemonic() : int\l
	+ getFileSystemView() : FileSystemView\l
	+ getName(File) : String\l
	+ getTypeDescription(File) : String\l
	+ approveSelection() : void\l
	+ addChoosableFileFilter(FileFilter) : void\l
	+ showSaveDialog(Component) : int\l
	+ isDirectorySelectionEnabled() : boolean\l
	+ getApproveButtonToolTipText() : String\l
	# paramString() : String\l
	+ getDragEnabled() : boolean\l
	+ getDialogTitle() : String\l
	+ setSelectedFile(File) : void\l
	+ setFileSelectionMode(int) : void\l
	+ setCurrentDirectory(File) : void\l
	+ getFileSelectionMode() : int\l
	 _access002(JFileChooser, int) : int_\l
	- writeObject(ObjectOutputStream) : void\l
	+ addActionListener(ActionListener) : void\l
	# createDialog(Component) : JDialog\l
	+ getDialogType() : int\l
	+ setDialogTitle(String) : void\l
	+ isFileHidingEnabled() : boolean\l
	+ getSelectedFiles() : File\l
	+ accept(File) : boolean\l
	- readObject(ObjectInputStream) : void\l
	+ getCurrentDirectory() : File\l
	+ setControlButtonsAreShown(boolean) : void\l
	+ getUI() : FileChooserUI\l
	+ setApproveButtonText(String) : void\l
	+ getApproveButtonText() : String\l
	+ getFileView() : FileView\l
	+ isMultiSelectionEnabled() : boolean\l
	+ setFileHidingEnabled(boolean) : void\l
	+ setDragEnabled(boolean) : void\l
	+ isTraversable(File) : boolean\l
	+ rescanCurrentDirectory() : void\l
	+ isAcceptAllFileFilterUsed() : boolean\l
	+ updateUI() : void\l
	+ getAcceptAllFileFilter() : FileFilter\l
	+ getUIClassID() : String\l
	+ getDescription(File) : String\l
	+ resetChoosableFileFilters() : void\l
	+ showDialog(Component, String) : int\l
	+ removeActionListener(ActionListener) : void\l
	- installHierarchyListener() : void\l
	+ removeChoosableFileFilter(FileFilter) : boolean\l
	+ changeToParentDirectory() : void\l
	+ getControlButtonsAreShown() : boolean\l
	+ getChoosableFileFilters() : FileFilter\l
	+ getFileFilter() : FileFilter\l
	+ ensureFileIsVisible(File) : void\l
	+ setAccessory(JComponent) : void\l
	+ setApproveButtonMnemonic(char) : void\l
	+ setApproveButtonMnemonic(int) : void\l
	 _access102(JFileChooser, boolean) : boolean_\l
	 _access100(JFileChooser) : boolean_\l
	+ setFileSystemView(FileSystemView) : void\l
	+ setMultiSelectionEnabled(boolean) : void\l
	+ setAcceptAllFileFilterUsed(boolean) : void\l
	- installShowFilesListener() : void\l
	# fireActionPerformed(String) : void\l
	+ setFileFilter(FileFilter) : void\l
	+ getAccessibleContext() : AccessibleContext\l
	+ getIcon(File) : Icon\l
	+ setApproveButtonToolTipText(String) : void\l
	+ isFileSelectionEnabled() : boolean\l
	+ setDialogType(int) : void\l
	+ getSelectedFile() : File\l
	+ cancelSelection() : void\l
	+ setSelectedFiles(File[]) : void\l
	+ getActionListeners() : ActionListener\l
	# setup(FileSystemView) : void\l
	+ setFileView(FileView) : void\l
	}"
	style = "filled"
fillcolor = "green"]
legendaryInterfacesIModel [
	label = "{\<\<interface\>\>\nlegendary.Interfaces::IModel|
	|
	+ convertToGraph() : void\l
	+ getRelGraph() : Map\<IClass, Map\<Relations, Set\<IClass\>\>\>\l
	+ removeDupArrows(Map\<IClass, Map\<Relations, Set\<IClass\>\>\>) : void\l
	+ getRelations() : Map\<List\<String\>List\<Relations\>\>\l
	+ addRelation(String, String, Relations) : void\l
	+ containsClass(String) : boolean\l
	+ getClasses() : Set\<IClass\>\l
	+ addClass(IClass) : void\l
	}"
	]
legendaryInterfacesIClass [
	label = "{\<\<interface\>\>\nlegendary.Interfaces::IClass|
	|
	+ setInterfaces(List\<String\>) : void\l
	+ getSuperName() : String\l
	+ setIsInterface(boolean) : void\l
	+ addField(IField) : void\l
	+ getInterfaces() : List\<String\>\l
	+ setClassName(String) : void\l
	+ setSuper(String) : void\l
	+ setDrawable(boolean) : void\l
	+ getFields() : List\<IField\>\l
	+ getMethodObjects() : List\<IMethod\>\l
	+ getClassName() : String\l
	+ isDrawable() : boolean\l
	+ getMethods() : Map\<String, Map\<List\<String\>IMethod\>\>\l
	+ isInterface() : boolean\l
	+ addMethod(IMethod) : void\l
	}"
	]
legendarypatternsAbstractAdapterPattern [
	label = "{legendary.patterns::AbstractAdapterPattern|
	|
	+ color() : String\l
	+ tagArrow(Set\<IPattern\>, Set\<IPattern\>) : String\l
	}"
	]
legendarypatternsDecoratorPattern [
	label = "{legendary.patterns::DecoratorPattern|
	|
	+ tag() : String\l
	}"
	]
javaxswingtreeDefaultMutableTreeNode [
	label = "{javax.swing.tree::DefaultMutableTreeNode\n\<\<target, decorator\>\>|
	- _serialVersionUID: long_\l
	+ _EMPTY_ENUMERATION: Enumeration\<TreeNode\>_\l
	# parent: MutableTreeNode\l
	# children: Vector\l
	# userObject: Object\l
	# allowsChildren: boolean\l
	|
	+ getUserObjectPath() : Object\l
	# getPathToRoot(TreeNode, int) : TreeNode\l
	+ getNextSibling() : DefaultMutableTreeNode\l
	+ getIndex(TreeNode) : int\l
	+ isRoot() : boolean\l
	+ isLeaf() : boolean\l
	+ preorderEnumeration() : Enumeration\l
	+ children() : Enumeration\l
	+ getPath() : TreeNode\l
	+ pathFromAncestorEnumeration(TreeNode) : Enumeration\l
	+ setUserObject(Object) : void\l
	+ getSiblingCount() : int\l
	+ add(MutableTreeNode) : void\l
	+ getPreviousSibling() : DefaultMutableTreeNode\l
	+ isNodeAncestor(TreeNode) : boolean\l
	- writeObject(ObjectOutputStream) : void\l
	+ breadthFirstEnumeration() : Enumeration\l
	+ getLastChild() : TreeNode\l
	+ getFirstLeaf() : DefaultMutableTreeNode\l
	- readObject(ObjectInputStream) : void\l
	+ getChildCount() : int\l
	+ getUserObject() : Object\l
	+ removeFromParent() : void\l
	+ getNextNode() : DefaultMutableTreeNode\l
	+ getPreviousLeaf() : DefaultMutableTreeNode\l
	+ isNodeChild(TreeNode) : boolean\l
	+ getDepth() : int\l
	+ isNodeDescendant(DefaultMutableTreeNode) : boolean\l
	+ insert(MutableTreeNode, int) : void\l
	+ getLeafCount() : int\l
	+ remove(MutableTreeNode) : void\l
	+ remove(int) : void\l
	+ getChildAfter(TreeNode) : TreeNode\l
	+ getSharedAncestor(DefaultMutableTreeNode) : TreeNode\l
	+ getLastLeaf() : DefaultMutableTreeNode\l
	+ getPreviousNode() : DefaultMutableTreeNode\l
	+ getFirstChild() : TreeNode\l
	+ getNextLeaf() : DefaultMutableTreeNode\l
	+ setParent(MutableTreeNode) : void\l
	+ isNodeSibling(TreeNode) : boolean\l
	+ getRoot() : TreeNode\l
	+ depthFirstEnumeration() : Enumeration\l
	+ postorderEnumeration() : Enumeration\l
	+ getParent() : TreeNode\l
	+ isNodeRelated(DefaultMutableTreeNode) : boolean\l
	+ removeAllChildren() : void\l
	+ getChildAt(int) : TreeNode\l
	+ getLevel() : int\l
	+ setAllowsChildren(boolean) : void\l
	+ getAllowsChildren() : boolean\l
	+ clone() : Object\l
	+ getChildBefore(TreeNode) : TreeNode\l
	+ toString() : String\l
	}"
	style = "filled"
fillcolor = "red"]
javaawteventMouseMotionListener [
	label = "{\<\<interface\>\>\njava.awt.event::MouseMotionListener\n\<\<decorator\>\>|
	|
	+ mouseDragged(MouseEvent) : void\l
	+ mouseMoved(MouseEvent) : void\l
	}"
	style = "filled"
fillcolor = "green"]
legendaryInterfacesIMethod [
	label = "{\<\<interface\>\>\nlegendary.Interfaces::IMethod|
	|
	+ setParameters(List\<String\>) : void\l
	+ addMethodToCallStack(String, String, String, List\<String\>) : void\l
	+ setAccess(String) : void\l
	+ setMethodName(String) : void\l
	+ getAccess() : String\l
	+ getMethodName() : String\l
	+ getReturnType() : String\l
	+ setReturnType(String) : void\l
	+ getParameters() : List\<String\>\l
	+ getCallStack() : Queue\<List\<List\<String\>\>\>\l
	}"
	]
legendaryInterfacesIClass [
	label = "{\<\<interface\>\>\nlegendary.Interfaces::IClass|
	|
	+ setInterfaces(List\<String\>) : void\l
	+ getSuperName() : String\l
	+ setIsInterface(boolean) : void\l
	+ addField(IField) : void\l
	+ getInterfaces() : List\<String\>\l
	+ setClassName(String) : void\l
	+ setSuper(String) : void\l
	+ setDrawable(boolean) : void\l
	+ getFields() : List\<IField\>\l
	+ getMethodObjects() : List\<IMethod\>\l
	+ getClassName() : String\l
	+ isDrawable() : boolean\l
	+ getMethods() : Map\<String, Map\<List\<String\>IMethod\>\>\l
	+ isInterface() : boolean\l
	+ addMethod(IMethod) : void\l
	}"
	]
legendaryInterfacesIModel [
	label = "{\<\<interface\>\>\nlegendary.Interfaces::IModel|
	|
	+ convertToGraph() : void\l
	+ getRelGraph() : Map\<IClass, Map\<Relations, Set\<IClass\>\>\>\l
	+ removeDupArrows(Map\<IClass, Map\<Relations, Set\<IClass\>\>\>) : void\l
	+ getRelations() : Map\<List\<String\>List\<Relations\>\>\l
	+ addRelation(String, String, Relations) : void\l
	+ containsClass(String) : boolean\l
	+ getClasses() : Set\<IClass\>\l
	+ addClass(IClass) : void\l
	}"
	]
legendaryInterfacesIPattern [
	label = "{\<\<interface\>\>\nlegendary.Interfaces::IPattern|
	|
	+ color() : String\l
	+ tag() : String\l
	+ tagArrow(Set\<IPattern\>, Set\<IPattern\>) : String\l
	}"
	]
legendarypatternsAdapterPattern [
	label = "{legendary.patterns::AdapterPattern|
	|
	+ tag() : String\l
	}"
	]
legendaryvisitorVisitType [
	label = "{legendary.visitor::VisitType|
	+ _PreVisit: VisitType_\l
	+ _Visit: VisitType_\l
	+ _PostVisit: VisitType_\l
	- _ENUMVALUES: VisitType[]_\l
	|
	+ _valueOf(String) : VisitType_\l
	+ _values() : VisitType_\l
	}"
	]
legendaryInterfacesIPatternDetector [
	label = "{\<\<interface\>\>\nlegendary.Interfaces::IPatternDetector\n\<\<decorator, component\>\>|
	|
	+ getPatternName() : String\l
	+ getKeyMap() : Map\<IClass, Set\<IClass\>\>\l
	+ getCandidates(IModel) : Set\<Set\<IClass\>\>\l
	+ getDecorated() : IPatternDetector\l
	+ detect(IModel) : Map\<Class\<IPattern\>Set\<IClass\>\>\l
	+ addDetector(IPatternDetector) : void\l
	}"
	style = "filled"
fillcolor = "green"]
javaxswingIcon [
	label = "{\<\<interface\>\>\njavax.swing::Icon\n\<\<target\>\>|
	|
	+ getIconWidth() : int\l
	+ getIconHeight() : int\l
	+ paintIcon(Component, Graphics, int, int) : void\l
	}"
	style = "filled"
fillcolor = "red"]
legendaryasmClassDeclarationVisitor [
	label = "{legendary.asm::ClassDeclarationVisitor|
	- legendaryClass: IClass\l
	- legendaryModel: IModel\l
	|
	+ visit(int, int, String, String, String, String[]) : void\l
	}"
	]
legendaryDisplayScreenDisplayFrame [
	label = "{legendary.DisplayScreen::DisplayFrame|
	- patternDisplay: PatternDisplay\l
	- patternSelector: JPanel\l
	- _frame: JFrame_\l
	+ _changedFocus: boolean_\l
	+ _scrollBarAdjusted: boolean_\l
	|
	+ _stop() : void_\l
	+ createDisplay() : void\l
	}"
	]
legendaryasmLegendaryClassMethodVisitor [
	label = "{legendary.asm::LegendaryClassMethodVisitor|
	 legendaryClass: IClass\l
	 legendaryModel: IModel\l
	 legendaryMethod: IMethod\l
	|
	+ visitMethodInsn(int, String, String, String, boolean) : void\l
	}"
	]
legendaryvisitorVisitType [
	label = "{legendary.visitor::VisitType|
	+ _PreVisit: VisitType_\l
	+ _Visit: VisitType_\l
	+ _PostVisit: VisitType_\l
	- _ENUMVALUES: VisitType[]_\l
	|
	+ _valueOf(String) : VisitType_\l
	+ _values() : VisitType_\l
	}"
	]
legendaryDisplayScreenImageProxy [
	label = "{legendary.DisplayScreen::ImageProxy\n\<\<adapter\>\>|
	 imageIcon: ImageIcon\l
	 pathToImage: String\l
	 retrievalThread: Thread\l
	 retrieving: boolean\l
	+ _waitOnMe: String_\l
	+ contentPane: JPanel\l
	+ checkImage: boolean\l
	|
	+ getIconWidth() : int\l
	+ getIconHeight() : int\l
	+ clear() : void\l
	+ update() : void\l
	+ paintIcon(Component, Graphics, int, int) : void\l
	}"
	style = "filled"
fillcolor = "red"]
legendarypatternsAdapterTargetPattern [
	label = "{legendary.patterns::AdapterTargetPattern|
	|
	+ tag() : String\l
	}"
	]
javaxswingButtonModel [
	label = "{\<\<interface\>\>\njavax.swing::ButtonModel\n\<\<decorator\>\>|
	|
	+ isPressed() : boolean\l
	+ setArmed(boolean) : void\l
	+ isArmed() : boolean\l
	+ setSelected(boolean) : void\l
	+ setPressed(boolean) : void\l
	+ addActionListener(ActionListener) : void\l
	+ removeItemListener(ItemListener) : void\l
	+ setMnemonic(int) : void\l
	+ setActionCommand(String) : void\l
	+ getMnemonic() : int\l
	+ setRollover(boolean) : void\l
	+ addChangeListener(ChangeListener) : void\l
	+ setEnabled(boolean) : void\l
	+ setGroup(ButtonGroup) : void\l
	+ removeChangeListener(ChangeListener) : void\l
	+ removeActionListener(ActionListener) : void\l
	+ isEnabled() : boolean\l
	+ isSelected() : boolean\l
	+ isRollover() : boolean\l
	+ addItemListener(ItemListener) : void\l
	+ getActionCommand() : String\l
	}"
	style = "filled"
fillcolor = "green"]
legendaryDisplayScreenPatternDisplay [
	label = "{legendary.DisplayScreen::PatternDisplay|
	- _instance: PatternDisplay_\l
	- pane: JScrollPane\l
	- label: JLabel\l
	- icon: ImageProxy\l
	|
	+ update() : void\l
	+ _getInstance() : PatternDisplay_\l
	+ loadImage() : void\l
	}"
	]
legendarymainScreenLegendaryProperties [
	label = "{legendary.mainScreen::LegendaryProperties\n\<\<Singleton\>\>|
	- _instance: LegendaryProperties_\l
	- properties: Properties\l
	- propertyMap: Map\<String, String\>\l
	- detector: IPatternDetector\l
	- model: IModel\l
	- _commandMap: Map\<String, ICommand\>_\l
	- file: File\l
	|
	+ getModel() : IModel\l
	+ analyse() : void\l
	+ getDetector() : IPatternDetector\l
	+ getCurrentFilename() : String\l
	+ getFile() : File\l
	+ getOutputDirectory() : String\l
	+ getPropertyMap() : Map\<String, String\>\l
	+ readProperties() : void\l
	+ setFile(File) : void\l
	+ getDotPath() : String\l
	+ updateDetector(Class\<IPatternDetector\>) : void\l
	+ setModel(IModel) : void\l
	+ _getInstance() : LegendaryProperties_\l
	 _access0() : Map_\l
	}"
	color = blue]
legendaryInterfacesICommand [
	label = "{\<\<interface\>\>\nlegendary.Interfaces::ICommand|
	|
	+ name() : String\l
	+ execute() : void\l
	}"
	]
legendarymainScreenLegendaryProgressBar [
	label = "{legendary.mainScreen::LegendaryProgressBar\n\<\<Singleton\>\>|
	- _instance: LegendaryProgressBar_\l
	- progressBar: JProgressBar\l
	- value: int\l
	- taskInd: int\l
	- tasks: String[]\l
	|
	+ setMax(int) : void\l
	+ getProgressBar() : JProgressBar\l
	+ setValue(int) : void\l
	+ incrementBy(int) : void\l
	+ finishTask() : void\l
	+ _getInstance() : LegendaryProgressBar_\l
	+ begin(String[]) : void\l
	}"
	color = blue]
javaxswingtreeTreeNode [
	label = "{\<\<interface\>\>\njavax.swing.tree::TreeNode\n\<\<component, decorator\>\>|
	|
	+ getChildCount() : int\l
	+ getChildAt(int) : TreeNode\l
	+ getParent() : TreeNode\l
	+ getIndex(TreeNode) : int\l
	+ children() : Enumeration\l
	+ getAllowsChildren() : boolean\l
	+ isLeaf() : boolean\l
	}"
	style = "filled"
fillcolor = "green"]
legendaryvisitorIVisitMethod [
	label = "{\<\<interface\>\>\nlegendary.visitor::IVisitMethod|
	|
	+ execute(ITraverser) : void\l
	}"
	]
legendarypatternsCompositeLeafPattern [
	label = "{legendary.patterns::CompositeLeafPattern|
	|
	+ tag() : String\l
	}"
	]
legendaryClassesClassParser [
	label = "{legendary.Classes::ClassParser\n\<\<Singleton\>\>|
	- _instance: ClassParser_\l
	- detect: IPatternDetector\l
	- patMap: Map\<Class\<IPattern\>Set\<IClass\>\>\l
	- model: IModel\l
	|
	+ regenGV() : void\l
	+ getDetector() : IPatternDetector\l
	+ _getInstance() : ClassParser_\l
	+ makeSDEdit(String, String, int, IModel, StringBuilder) : void\l
	+ addDetector(IPatternDetector) : void\l
	+ makeGraphViz(IModel, StringBuilder) : void\l
	}"
	color = blue]
javaawteventHierarchyListener [
	label = "{\<\<interface\>\>\njava.awt.event::HierarchyListener\n\<\<decorator\>\>|
	|
	+ hierarchyChanged(HierarchyEvent) : void\l
	}"
	style = "filled"
fillcolor = "green"]
legendarymainScreenLegendaryProperties [
	label = "{legendary.mainScreen::LegendaryProperties|
	- _instance: LegendaryProperties_\l
	- properties: Properties\l
	- propertyMap: Map\<String, String\>\l
	- detector: IPatternDetector\l
	- model: IModel\l
	- _commandMap: Map\<String, ICommand\>_\l
	- file: File\l
	|
	+ getModel() : IModel\l
	+ analyse() : void\l
	+ getDetector() : IPatternDetector\l
	+ getCurrentFilename() : String\l
	+ getFile() : File\l
	+ getOutputDirectory() : String\l
	+ getPropertyMap() : Map\<String, String\>\l
	+ readProperties() : void\l
	+ setFile(File) : void\l
	+ getDotPath() : String\l
	+ updateDetector(Class\<IPatternDetector\>) : void\l
	+ setModel(IModel) : void\l
	+ _getInstance() : LegendaryProperties_\l
	 _access0() : Map_\l
	}"
	]
javaawtComponent [
	label = "{java.awt::Component\n\<\<decorator, component\>\>|
	- _log: PlatformLogger_\l
	- _eventLog: PlatformLogger_\l
	- _focusLog: PlatformLogger_\l
	- _mixingLog: PlatformLogger_\l
	 peer: ComponentPeer\l
	 parent: Container\l
	 appContext: AppContext\l
	 x: int\l
	 y: int\l
	 width: int\l
	 height: int\l
	 foreground: Color\l
	 background: Color\l
	 font: Font\l
	 peerFont: Font\l
	 cursor: Cursor\l
	 locale: Locale\l
	- graphicsConfig: GraphicsConfiguration\l
	 bufferStrategy: BufferStrategy\l
	 ignoreRepaint: boolean\l
	 visible: boolean\l
	 enabled: boolean\l
	- valid: boolean\l
	 dropTarget: DropTarget\l
	 popups: Vector\<PopupMenu\>\l
	- name: String\l
	- nameExplicitlySet: boolean\l
	- focusable: boolean\l
	- _FOCUS_TRAVERSABLE_UNKNOWN: int_\l
	- _FOCUS_TRAVERSABLE_DEFAULT: int_\l
	- _FOCUS_TRAVERSABLE_SET: int_\l
	- isFocusTraversableOverridden: int\l
	 focusTraversalKeys: Set\<AWTKeyStroke\>\l
	- _focusTraversalKeyPropertyNames: String[]_\l
	- focusTraversalKeysEnabled: boolean\l
	 _LOCK: Object_\l
	- acc: AccessControlContext\l
	 minSize: Dimension\l
	 minSizeSet: boolean\l
	 prefSize: Dimension\l
	 prefSizeSet: boolean\l
	 maxSize: Dimension\l
	 maxSizeSet: boolean\l
	 componentOrientation: ComponentOrientation\l
	 newEventsOnly: boolean\l
	 componentListener: ComponentListener\l
	 focusListener: FocusListener\l
	 hierarchyListener: HierarchyListener\l
	 hierarchyBoundsListener: HierarchyBoundsListener\l
	 keyListener: KeyListener\l
	 mouseListener: MouseListener\l
	 mouseMotionListener: MouseMotionListener\l
	 mouseWheelListener: MouseWheelListener\l
	 inputMethodListener: InputMethodListener\l
	 windowClosingException: RuntimeException\l
	 _actionListenerK: String_\l
	 _adjustmentListenerK: String_\l
	 _componentListenerK: String_\l
	 _containerListenerK: String_\l
	 _focusListenerK: String_\l
	 _itemListenerK: String_\l
	 _keyListenerK: String_\l
	 _mouseListenerK: String_\l
	 _mouseMotionListenerK: String_\l
	 _mouseWheelListenerK: String_\l
	 _textListenerK: String_\l
	 _ownedWindowK: String_\l
	 _windowListenerK: String_\l
	 _inputMethodListenerK: String_\l
	 _hierarchyListenerK: String_\l
	 _hierarchyBoundsListenerK: String_\l
	 _windowStateListenerK: String_\l
	 _windowFocusListenerK: String_\l
	 eventMask: long\l
	 _isInc: boolean_\l
	 _incRate: int_\l
	+ _TOP_ALIGNMENT: float_\l
	+ _CENTER_ALIGNMENT: float_\l
	+ _BOTTOM_ALIGNMENT: float_\l
	+ _LEFT_ALIGNMENT: float_\l
	+ _RIGHT_ALIGNMENT: float_\l
	- _serialVersionUID: long_\l
	- changeSupport: PropertyChangeSupport\l
	- objectLock: Object\l
	 isPacked: boolean\l
	- boundsOp: int\l
	- compoundShape: Region\l
	- mixingCutoutRegion: Region\l
	- isAddNotifyComplete: boolean\l
	 backgroundEraseDisabled: boolean\l
	 eventCache: EventQueueItem[]\l
	- coalescingEnabled: boolean\l
	- _coalesceMap: Map\<Class\<\> Boolean\>_\l
	- _coalesceEventsParams: Class[]_\l
	- _requestFocusController: RequestFocusController_\l
	- autoFocusTransferOnDisposal: boolean\l
	- componentSerializedDataVersion: int\l
	# accessibleContext: AccessibleContext\l
	 _assertionsDisabled: boolean_\l
	|
	- notifyNewBounds(boolean, boolean) : void\l
	 getFont_NoClientCode() : Font\l
	+ getLocation() : Point\l
	+ getLocation(Point) : Point\l
	+ requestFocusInWindow() : boolean\l
	 requestFocusInWindow(CausedFocusEventCause) : boolean\l
	 requestFocusInWindow(boolean, CausedFocusEventCause) : boolean\l
	# requestFocusInWindow(boolean) : boolean\l
	+ isOpaque() : boolean\l
	# processComponentEvent(ComponentEvent) : void\l
	# processEvent(AWTEvent) : void\l
	 isNonOpaqueForMixing() : boolean\l
	+ paint(Graphics) : void\l
	+ getInputMethodListeners() : InputMethodListener\l
	+ mouseDown(Event, int, int) : boolean\l
	+ getInputMethodRequests() : InputMethodRequests\l
	 mixOnValidating() : void\l
	# paramString() : String\l
	+ addHierarchyBoundsListener(HierarchyBoundsListener) : void\l
	+ getMinimumSize() : Dimension\l
	+ getAlignmentY() : float\l
	# processMouseEvent(MouseEvent) : void\l
	+ getAlignmentX() : float\l
	 getNextFocusCandidate() : Component\l
	+ dispatchEvent(AWTEvent) : void\l
	 _access400(Component) : Insets_\l
	 getBackBuffer() : Image\l
	+ reshape(int, int, int, int) : void\l
	# disableEvents(long) : void\l
	+ postEvent(Event) : boolean\l
	- readObject(ObjectInputStream) : void\l
	 createBufferStrategy(int, BufferCapabilities) : void\l
	 createBufferStrategy(int) : void\l
	+ contains(int, int) : boolean\l
	+ contains(Point) : boolean\l
	+ size() : Dimension\l
	 getContainingWindow() : Window\l
	+ enableInputMethods(boolean) : void\l
	+ mouseUp(Event, int, int) : boolean\l
	# processMouseMotionEvent(MouseEvent) : void\l
	 getParent_NoClientCode() : Container\l
	 clearCurrentFocusCycleRootOnHide() : void\l
	+ addComponentListener(ComponentListener) : void\l
	 getSiblingIndexAbove() : int\l
	+ setName(String) : void\l
	+ removeInputMethodListener(InputMethodListener) : void\l
	+ removeHierarchyListener(HierarchyListener) : void\l
	 subtractAndApplyShapeBelowMe() : void\l
	+ getFontMetrics(Font) : FontMetrics\l
	 createHierarchyEvents(int, Component, Container, long, boolean) : int\l
	+ getHeight() : int\l
	 getNormalShape() : Region\l
	+ getBaselineResizeBehavior() : ComponentBaselineResizeBehavior\l
	+ getIgnoreRepaint() : boolean\l
	+ removeMouseWheelListener(MouseWheelListener) : void\l
	 canBeFocusOwner() : boolean\l
	+ getPeer() : ComponentPeer\l
	- isRequestFocusAccepted(boolean, boolean, CausedFocusEventCause) : boolean\l
	+ applyComponentOrientation(ComponentOrientation) : void\l
	+ validate() : void\l
	 applyCurrentShape() : void\l
	 eventTypeEnabled(int) : boolean\l
	+ getParent() : Container\l
	 _access500(Class) : boolean_\l
	+ isMinimumSizeSet() : boolean\l
	 applyCompoundShape(Region) : void\l
	+ setComponentOrientation(ComponentOrientation) : void\l
	- getRecursivelyVisibleBounds() : Rectangle\l
	 autoProcessMouseWheel(MouseWheelEvent) : void\l
	+ setBounds(Rectangle) : void\l
	+ setBounds(int, int, int, int) : void\l
	 isRecursivelyVisible() : boolean\l
	 isMixingNeeded() : boolean\l
	 lightweightPaint(Graphics) : void\l
	- applyCurrentShapeBelowMe() : void\l
	 dispatchMouseWheelToAncestor(MouseWheelEvent) : boolean\l
	- getAppliedShape() : Region\l
	+ addNotify() : void\l
	+ addInputMethodListener(InputMethodListener) : void\l
	+ getFocusCycleRootAncestor() : Container\l
	+ toString() : String\l
	 invalidateParent() : void\l
	+ getName() : String\l
	 getFocusTraversalKeys_NoIDCheck(int) : Set\<AWTKeyStroke\>\l
	 areInputMethodsEnabled() : boolean\l
	+ isFocusTraversable() : boolean\l
	+ inside(int, int) : boolean\l
	# processKeyEvent(KeyEvent) : void\l
	+ getInputContext() : InputContext\l
	+ getFocusTraversalKeys(int) : Set\<AWTKeyStroke\>\l
	+ nextFocus() : void\l
	+ isCursorSet() : boolean\l
	+ getMouseWheelListeners() : MouseWheelListener\l
	+ doLayout() : void\l
	+ removeMouseMotionListener(MouseMotionListener) : void\l
	+ setVisible(boolean) : void\l
	+ add(PopupMenu) : void\l
	 constructComponentName() : String\l
	 clearMostRecentFocusOwnerOnHide() : void\l
	+ removeKeyListener(KeyListener) : void\l
	# processInputMethodEvent(InputMethodEvent) : void\l
	 getAccessibleIndexInParent() : int\l
	+ isVisible() : boolean\l
	+ setDropTarget(DropTarget) : void\l
	+ list() : void\l
	+ list(PrintWriter, int) : void\l
	+ list(PrintWriter) : void\l
	+ list(PrintStream, int) : void\l
	+ list(PrintStream) : void\l
	+ removePropertyChangeListener(String, PropertyChangeListener) : void\l
	+ removePropertyChangeListener(PropertyChangeListener) : void\l
	- _isCoalesceEventsOverriden(Class\<\>) : boolean_\l
	+ revalidate() : void\l
	+ removeNotify() : void\l
	 setAutoFocusTransferOnDisposal(boolean) : void\l
	 relocateComponent() : void\l
	 updateZOrder() : void\l
	+ gotFocus(Event, Object) : boolean\l
	 mixOnShowing() : void\l
	+ handleEvent(Event) : boolean\l
	+ isForegroundSet() : boolean\l
	+ show() : void\l
	+ show(boolean) : void\l
	+ update(Graphics) : void\l
	# processFocusEvent(FocusEvent) : void\l
	+ setMaximumSize(Dimension) : void\l
	# coalesceEvents(AWTEvent, AWTEvent) : AWTEvent\l
	+ remove(MenuComponent) : void\l
	+ imageUpdate(Image, int, int, int, int, int) : boolean\l
	+ addMouseWheelListener(MouseWheelListener) : void\l
	 printHeavyweightComponents(Graphics) : void\l
	+ checkImage(Image, ImageObserver) : int\l
	+ checkImage(Image, int, int, ImageObserver) : int\l
	 getObjectLock() : Object\l
	+ addKeyListener(KeyListener) : void\l
	+ getComponentListeners() : ComponentListener\l
	+ isMaximumSizeSet() : boolean\l
	+ addPropertyChangeListener(String, PropertyChangeListener) : void\l
	+ addPropertyChangeListener(PropertyChangeListener) : void\l
	- location_NoClientCode() : Point\l
	+ getCursor() : Cursor\l
	 adjustListeningChildrenOnParent(long, int) : void\l
	+ createImage(int, int) : Image\l
	+ createImage(ImageProducer) : Image\l
	+ mouseMove(Event, int, int) : boolean\l
	+ areFocusTraversalKeysSet(int) : boolean\l
	+ getKeyListeners() : KeyListener\l
	 checkWindowClosingException() : boolean\l
	+ layout() : void\l
	+ getBaseline(int, int) : int\l
	+ print(Graphics) : void\l
	+ getFocusListeners() : FocusListener\l
	+ resize(Dimension) : void\l
	+ resize(int, int) : void\l
	+ createVolatileImage(int, int) : VolatileImage\l
	+ createVolatileImage(int, int, ImageCapabilities) : VolatileImage\l
	+ location() : Point\l
	+ lostFocus(Event, Object) : boolean\l
	+ getDropTarget() : DropTarget\l
	+ keyDown(Event, int) : boolean\l
	+ getLocale() : Locale\l
	 subtractAndApplyShape(Region) : void\l
	+ getHierarchyBoundsListeners() : HierarchyBoundsListener\l
	 getOpaqueShape() : Region\l
	 setGraphicsConfiguration(GraphicsConfiguration) : void\l
	+ getBounds() : Rectangle\l
	+ getBounds(Rectangle) : Rectangle\l
	+ setPreferredSize(Dimension) : void\l
	+ enable() : void\l
	+ enable(boolean) : void\l
	 getCursor_NoClientCode() : Cursor\l
	+ getMousePosition() : Point\l
	 postsOldMouseEvents() : boolean\l
	+ action(Event, Object) : boolean\l
	 countHierarchyMembers() : int\l
	+ firePropertyChange(String, byte, byte) : void\l
	# firePropertyChange(String, boolean, boolean) : void\l
	+ firePropertyChange(String, short, short) : void\l
	# firePropertyChange(String, Object, Object) : void\l
	+ firePropertyChange(String, double, double) : void\l
	+ firePropertyChange(String, float, float) : void\l
	+ firePropertyChange(String, char, char) : void\l
	# firePropertyChange(String, int, int) : void\l
	+ firePropertyChange(String, long, long) : void\l
	 getAccessControlContext() : AccessControlContext\l
	 getContainer() : Container\l
	 _access002(Component, Region) : Region_\l
	+ addMouseMotionListener(MouseMotionListener) : void\l
	 getBoundsOp() : int\l
	+ setFocusable(boolean) : void\l
	+ getComponentOrientation() : ComponentOrientation\l
	+ getTreeLock() : Object\l
	+ isBackgroundSet() : boolean\l
	+ addHierarchyListener(HierarchyListener) : void\l
	- doSwingSerialization() : void\l
	+ setEnabled(boolean) : void\l
	 revalidateSynchronously() : void\l
	+ isLightweight() : boolean\l
	+ isEnabled() : boolean\l
	+ minimumSize() : Dimension\l
	 areBoundsValid() : boolean\l
	+ bounds() : Rectangle\l
	 numListening(long) : int\l
	 _isInstanceOf(Object, String) : boolean_\l
	 containsFocus() : boolean\l
	 isSameOrAncestorOf(Component, boolean) : boolean\l
	+ repaint() : void\l
	+ repaint(long) : void\l
	+ repaint(int, int, int, int) : void\l
	+ repaint(long, int, int, int, int) : void\l
	+ getMouseMotionListeners() : MouseMotionListener\l
	+ setMinimumSize(Dimension) : void\l
	+ transferFocus() : void\l
	 transferFocus(boolean) : boolean\l
	+ getListeners(, , , EventListener\>, , Class\<\>) : \l
	 getAccessibleStateSet() : AccessibleStateSet\l
	 updateGraphicsData(GraphicsConfiguration) : boolean\l
	+ getMaximumSize() : Dimension\l
	 isVisible_NoClientCode() : boolean\l
	+ getLocationOnScreen() : Point\l
	+ keyUp(Event, int) : boolean\l
	+ getWidth() : int\l
	 pointRelativeToComponent(Point) : Point\l
	- reshapeNativePeer(int, int, int, int, int) : void\l
	+ paintAll(Graphics) : void\l
	 paintHeavyweightComponents(Graphics) : void\l
	+ setFocusTraversalKeys(int, Set\<AWTKeyStroke\>) : void\l
	+ hasFocus() : boolean\l
	+ isPreferredSizeSet() : boolean\l
	+ isDoubleBuffered() : boolean\l
	+ getColorModel() : ColorModel\l
	# processHierarchyEvent(HierarchyEvent) : void\l
	+ getPropertyChangeListeners() : PropertyChangeListener\l
	+ getPropertyChangeListeners(String) : PropertyChangeListener\l
	 _access100(Component) : Point_\l
	+ isValid() : boolean\l
	 mixOnZOrderChanging(int, int) : void\l
	 mixOnHiding(boolean) : void\l
	+ getFocusTraversalKeysEnabled() : boolean\l
	 invalidateIfValid() : void\l
	 setFocusTraversalKeys_NoIDCheck(int, Set\<AWTKeyStroke\>) : void\l
	+ hide() : void\l
	+ getPreferredSize() : Dimension\l
	 eventEnabled(AWTEvent) : boolean\l
	+ disable() : void\l
	 isFocusTraversableOverridden() : boolean\l
	+ prepareImage(Image, ImageObserver) : boolean\l
	+ prepareImage(Image, int, int, ImageObserver) : boolean\l
	 updateCursorImmediately() : void\l
	+ isFocusable() : boolean\l
	 getLocationOnScreen_NoTreeLock() : Point\l
	 setBoundsOp(int) : void\l
	- _initIDs() : void_\l
	 isEnabledImpl() : boolean\l
	+ mouseExit(Event, int, int) : boolean\l
	+ getHierarchyListeners() : HierarchyListener\l
	+ isShowing() : boolean\l
	+ mouseEnter(Event, int, int) : boolean\l
	 getSiblingIndexBelow() : int\l
	+ mouseDrag(Event, int, int) : boolean\l
	+ preferredSize() : Dimension\l
	 checkTreeLock() : void\l
	+ getMouseListeners() : MouseListener\l
	 getHWPeerAboveMe() : ComponentPeer\l
	+ setFont(Font) : void\l
	- getInsets_NoClientCode() : Insets\l
	- writeObject(ObjectOutputStream) : void\l
	 getTraversalRoot() : Container\l
	 isAutoFocusTransferOnDisposal() : boolean\l
	 getLocationOnWindow() : Point\l
	+ deliverEvent(Event) : void\l
	 getToolkitImpl() : Toolkit\l
	+ getForeground() : Color\l
	 getNativeContainer() : Container\l
	 mixOnReshaping() : void\l
	 lightweightPrint(Graphics) : void\l
	 findUnderMouseInWindow(PointerInfo) : Component\l
	+ getFont() : Font\l
	+ setCursor(Cursor) : void\l
	+ getGraphicsConfiguration() : GraphicsConfiguration\l
	+ isDisplayable() : boolean\l
	+ setLocale(Locale) : void\l
	+ removeComponentListener(ComponentListener) : void\l
	- calculateCurrentShape() : Region\l
	+ requestFocus() : void\l
	 requestFocus(CausedFocusEventCause) : boolean\l
	 requestFocus(boolean, CausedFocusEventCause) : boolean\l
	# requestFocus(boolean) : boolean\l
	+ locate(int, int) : Component\l
	+ addFocusListener(FocusListener) : void\l
	 initializeFocusTraversalKeys() : void\l
	+ getComponentAt(int, int) : Component\l
	+ getComponentAt(Point) : Component\l
	# processHierarchyBoundsEvent(HierarchyEvent) : void\l
	 _setRequestFocusController(RequestFocusController) : void_\l
	+ isFocusCycleRoot(Container) : boolean\l
	+ setFocusTraversalKeysEnabled(boolean) : void\l
	+ setBackground(Color) : void\l
	+ printAll(Graphics) : void\l
	+ getToolkit() : Toolkit\l
	+ transferFocusUpCycle() : void\l
	+ isFontSet() : boolean\l
	+ setSize(Dimension) : void\l
	+ setSize(int, int) : void\l
	- repaintParentIfNeeded(int, int, int, int) : void\l
	+ setLocation(int, int) : void\l
	+ setLocation(Point) : void\l
	 isCoalescingEnabled() : boolean\l
	 requestFocusHelper(boolean, boolean) : boolean\l
	 requestFocusHelper(boolean, boolean, CausedFocusEventCause) : boolean\l
	 checkGD(String) : void\l
	+ getGraphics() : Graphics\l
	+ setIgnoreRepaint(boolean) : void\l
	+ removeFocusListener(FocusListener) : void\l
	# enableEvents(long) : void\l
	+ transferFocusBackward() : void\l
	 transferFocusBackward(boolean) : boolean\l
	 getGraphicsConfiguration_NoClientCode() : GraphicsConfiguration\l
	+ move(int, int) : void\l
	+ setForeground(Color) : void\l
	+ invalidate() : void\l
	 getBufferStrategy() : BufferStrategy\l
	+ getAccessibleContext() : AccessibleContext\l
	- checkCoalescing() : boolean\l
	+ isFocusOwner() : boolean\l
	+ getSize(Dimension) : Dimension\l
	+ getSize() : Dimension\l
	+ getX() : int\l
	 getGraphics_NoClientCode() : Graphics\l
	+ getY() : int\l
	+ removeHierarchyBoundsListener(HierarchyBoundsListener) : void\l
	# processMouseWheelEvent(MouseWheelEvent) : void\l
	 canBeFocusOwnerRecursively() : boolean\l
	+ removeMouseListener(MouseListener) : void\l
	+ getBackground() : Color\l
	 dispatchEventImpl(AWTEvent) : void\l
	+ addMouseListener(MouseListener) : void\l
	}"
	style = "filled"
fillcolor = "green"]
javaawteventInputMethodListener [
	label = "{\<\<interface\>\>\njava.awt.event::InputMethodListener\n\<\<decorator\>\>|
	|
	+ inputMethodTextChanged(InputMethodEvent) : void\l
	+ caretPositionChanged(InputMethodEvent) : void\l
	}"
	style = "filled"
fillcolor = "green"]
legendaryClassesSDEditOutputStream [
	label = "{legendary.Classes::SDEditOutputStream|
	- visitor: IVisitor\l
	- model: IModel\l
	- builder: StringBuilder\l
	- classes: Set\<String\>\l
	- methodCalls: List\<String\>\l
	- depth: int\l
	- origDepth: int\l
	|
	- initializeVisitors() : void\l
	+ postvisitMethod() : void\l
	+ visitMethod() : void\l
	 _access6(SDEditOutputStream) : int_\l
	 _access5(SDEditOutputStream) : IVisitor_\l
	 _access4(SDEditOutputStream) : List_\l
	 _access3(SDEditOutputStream) : IModel_\l
	+ write(String) : void\l
	 _access2(SDEditOutputStream) : Set_\l
	+ previsitMethod() : void\l
	 _access1(SDEditOutputStream, int) : void_\l
	 _access0(SDEditOutputStream) : int_\l
	}"
	]
legendarymainScreenDragAndDropPanel [
	label = "{legendary.mainScreen::DragAndDropPanel|
	- _serialVersionUID: long_\l
	 properties: LegendaryProperties\l
	|
	}"
	]
legendaryvisitorITraverser [
	label = "{\<\<interface\>\>\nlegendary.visitor::ITraverser|
	|
	+ accept(IVisitor) : void\l
	}"
	]
legendarypatternsAdapteePattern [
	label = "{legendary.patterns::AdapteePattern|
	|
	+ tag() : String\l
	}"
	]
javaawteventComponentListener [
	label = "{\<\<interface\>\>\njava.awt.event::ComponentListener\n\<\<decorator\>\>|
	|
	+ componentHidden(ComponentEvent) : void\l
	+ componentResized(ComponentEvent) : void\l
	+ componentMoved(ComponentEvent) : void\l
	+ componentShown(ComponentEvent) : void\l
	}"
	style = "filled"
fillcolor = "green"]
legendarycommandsDetectorCommand [
	label = "{legendary.commands::DetectorCommand|
	- detector: Class\<IPatternDetector\>\l
	|
	+ name() : String\l
	+ execute() : void\l
	}"
	]
legendaryclientDriver [
	label = "{legendary.client::Driver|
	|
	+ _go() : void_\l
	+ _main(String[]) : void_\l
	}"
	]
legendaryDisplayScreenDropdownMenuPanel [
	label = "{legendary.DisplayScreen::DropdownMenuPanel|
	- menuBar: JMenuBar\l
	- fileMenu: JMenu\l
	- helpMenu: JMenu\l
	- loadNewConfig: JMenuItem\l
	- exportGraph: JMenuItem\l
	- howTo: JMenuItem\l
	- about: JMenuItem\l
	|
	+ actionPerformed(ActionEvent) : void\l
	- readAndDisplayTxt(String) : void\l
	}"
	]
javaawteventFocusListener [
	label = "{\<\<interface\>\>\njava.awt.event::FocusListener\n\<\<decorator\>\>|
	|
	+ focusGained(FocusEvent) : void\l
	+ focusLost(FocusEvent) : void\l
	}"
	style = "filled"
fillcolor = "green"]
javaawtItemSelectable [
	label = "{\<\<interface\>\>\njava.awt::ItemSelectable\n\<\<decorator, component\>\>|
	|
	+ removeItemListener(ItemListener) : void\l
	+ getSelectedObjects() : Object\l
	+ addItemListener(ItemListener) : void\l
	}"
	style = "filled"
fillcolor = "green"]
legendaryClassesGraphVizOutputStream [
	label = "{legendary.Classes::GraphVizOutputStream|
	- builder: StringBuilder\l
	- visitor: IVisitor\l
	- relationRep: Map\<Relations, String\>\l
	- _patterns: Map\<IClass, Set\<IPattern\>\>_\l
	- _patMapIn: Map\<Class\<IPattern\>Set\<IClass\>\>_\l
	|
	- initializeVisitors() : void\l
	- previsitModel() : void\l
	- visitMethod() : void\l
	- addPatternTags(IClass) : void\l
	- previsitClass() : void\l
	- postvisitClass() : void\l
	- visitField() : void\l
	- addArrows(IModel) : String\l
	- patternColor(IClass) : String\l
	- postvisitModel() : void\l
	- invertPatternMap(Map\<Class\<IPattern\>, Set\<IClass\>\>) : Map\<IClass, Set\<IPattern\>\>\l
	- lambda4(ITraverser) : void\l
	- lambda3(ITraverser) : void\l
	- visitModel() : void\l
	- lambda2(ITraverser) : void\l
	- visitClass() : void\l
	+ initialize() : void\l
	- lambda1(ITraverser) : void\l
	- lambda0(ITraverser) : void\l
	- write(String) : void\l
	 _access2(GraphVizOutputStream, IClass) : void_\l
	 _access1() : Map_\l
	 _access0(GraphVizOutputStream, String) : void_\l
	}"
	]
legendarycommandsModelGenCommand [
	label = "{legendary.commands::ModelGenCommand|
	|
	+ name() : String\l
	+ execute() : void\l
	}"
	]
legendaryClassesLegendaryClass [
	label = "{legendary.Classes::LegendaryClass|
	- className: String\l
	- superClassName: String\l
	- interfaces: List\<String\>\l
	- methods: Map\<String, Map\<List\<String\>IMethod\>\>\l
	- fields: List\<IField\>\l
	- isInterface: boolean\l
	- drawable: boolean\l
	|
	+ setInterfaces(List\<String\>) : void\l
	+ getSuperName() : String\l
	+ setIsInterface(boolean) : void\l
	+ addField(IField) : void\l
	+ getInterfaces() : List\<String\>\l
	+ setClassName(String) : void\l
	+ setSuper(String) : void\l
	+ accept(IVisitor) : void\l
	+ setDrawable(boolean) : void\l
	+ getFields() : List\<IField\>\l
	+ getMethodObjects() : List\<IMethod\>\l
	+ getClassName() : String\l
	+ isDrawable() : boolean\l
	+ getMethods() : Map\<String, Map\<List\<String\>IMethod\>\>\l
	+ isInterface() : boolean\l
	+ addMethod(IMethod) : void\l
	}"
	]
legendaryDisplayScreenImageProxy [
	label = "{legendary.DisplayScreen::ImageProxy|
	 imageIcon: ImageIcon\l
	 pathToImage: String\l
	 retrievalThread: Thread\l
	 retrieving: boolean\l
	+ _waitOnMe: String_\l
	+ contentPane: JPanel\l
	+ checkImage: boolean\l
	|
	+ getIconWidth() : int\l
	+ getIconHeight() : int\l
	+ clear() : void\l
	+ update() : void\l
	+ paintIcon(Component, Graphics, int, int) : void\l
	}"
	]
javaxswingImageIcon [
	label = "{javax.swing::ImageIcon\n\<\<adaptee\>\>|
	- filename: String\l
	- location: URL\l
	 image: Image\l
	 loadStatus: int\l
	 imageObserver: ImageObserver\l
	 description: String\l
	# _component: Component_\l
	# _tracker: MediaTracker_\l
	- _mediaTrackerID: int_\l
	- _TRACKER_KEY: Object_\l
	 width: int\l
	 height: int\l
	- accessibleContext: ImageIconAccessibleImageIcon\l
	|
	+ getIconWidth() : int\l
	+ setImageObserver(ImageObserver) : void\l
	- writeObject(ObjectOutputStream) : void\l
	 _access000() : Component_\l
	+ getImageLoadStatus() : int\l
	+ setDescription(String) : void\l
	- getTracker() : MediaTracker\l
	+ getDescription() : String\l
	+ getImageObserver() : ImageObserver\l
	+ getAccessibleContext() : AccessibleContext\l
	# loadImage(Image) : void\l
	- readObject(ObjectInputStream) : void\l
	+ getIconHeight() : int\l
	- getNextID() : int\l
	+ toString() : String\l
	- _createNoPermsComponent() : Component_\l
	+ paintIcon(Component, Graphics, int, int) : void\l
	+ getImage() : Image\l
	+ setImage(Image) : void\l
	}"
	style = "filled"
fillcolor = "red"]
legendaryInterfacesIPattern [
	label = "{\<\<interface\>\>\nlegendary.Interfaces::IPattern|
	|
	+ color() : String\l
	+ tag() : String\l
	+ tagArrow(Set\<IPattern\>, Set\<IPattern\>) : String\l
	}"
	]
javaawteventHierarchyBoundsListener [
	label = "{\<\<interface\>\>\njava.awt.event::HierarchyBoundsListener\n\<\<decorator\>\>|
	|
	+ ancestorMoved(HierarchyEvent) : void\l
	+ ancestorResized(HierarchyEvent) : void\l
	}"
	style = "filled"
fillcolor = "green"]
legendarypatternsAbstractCompositePattern [
	label = "{legendary.patterns::AbstractCompositePattern|
	|
	+ color() : String\l
	+ tagArrow(Set\<IPattern\>, Set\<IPattern\>) : String\l
	}"
	]
legendaryInterfacesIClass [
	label = "{\<\<interface\>\>\nlegendary.Interfaces::IClass|
	|
	+ setInterfaces(List\<String\>) : void\l
	+ getSuperName() : String\l
	+ setIsInterface(boolean) : void\l
	+ addField(IField) : void\l
	+ getInterfaces() : List\<String\>\l
	+ setClassName(String) : void\l
	+ setSuper(String) : void\l
	+ setDrawable(boolean) : void\l
	+ getFields() : List\<IField\>\l
	+ getMethodObjects() : List\<IMethod\>\l
	+ getClassName() : String\l
	+ isDrawable() : boolean\l
	+ getMethods() : Map\<String, Map\<List\<String\>IMethod\>\>\l
	+ isInterface() : boolean\l
	+ addMethod(IMethod) : void\l
	}"
	]
legendaryasmClassMethodVisitor [
	label = "{legendary.asm::ClassMethodVisitor|
	- usesClasses: List\<String\>\l
	- legendaryClass: IClass\l
	- legendaryModel: IModel\l
	|
	- addArguments(String, IMethod) : void\l
	- addAccessLevel(int, IMethod) : void\l
	+ visitMethod(int, String, String, String, String[]) : MethodVisitor\l
	- addReturnType(String, IMethod) : void\l
	}"
	]
legendaryvisitorITraverser [
	label = "{\<\<interface\>\>\nlegendary.visitor::ITraverser|
	|
	+ accept(IVisitor) : void\l
	}"
	]
legendaryvisitorLookupKey [
	label = "{legendary.visitor::LookupKey|
	 visitType: VisitType\l
	 clazz: Class\<\>\l
	|
	+ hashCode() : int\l
	+ equals(Object) : boolean\l
	}"
	]
legendaryClassesLegendaryMethod [
	label = "{legendary.Classes::LegendaryMethod|
	- methodAccess: String\l
	- methodName: String\l
	- parameters: List\<String\>\l
	- methodCallStack: Queue\<List\<List\<String\>\>\>\l
	- methodReturnType: String\l
	|
	+ setParameters(List\<String\>) : void\l
	+ addMethodToCallStack(String, String, String, List\<String\>) : void\l
	+ setAccess(String) : void\l
	+ setMethodName(String) : void\l
	+ getAccess() : String\l
	+ getMethodName() : String\l
	+ getReturnType() : String\l
	+ setReturnType(String) : void\l
	+ getParameters() : List\<String\>\l
	+ getCallStack() : Queue\<List\<List\<String\>\>\>\l
	+ accept(IVisitor) : void\l
	}"
	]
legendaryInterfacesIField [
	label = "{\<\<interface\>\>\nlegendary.Interfaces::IField|
	|
	+ setAccess(String) : void\l
	+ getBaseTypes() : Set\<String\>\l
	+ setFieldName(String) : void\l
	+ getAccess() : String\l
	+ getType() : String\l
	+ setType(String) : void\l
	+ getFieldName() : String\l
	}"
	]
legendaryInterfacesICommand [
	label = "{\<\<interface\>\>\nlegendary.Interfaces::ICommand|
	|
	+ name() : String\l
	+ execute() : void\l
	}"
	]
legendarydetectorsDecoratorDetector [
	label = "{legendary.detectors::DecoratorDetector\n\<\<decorator\>\>|
	|
	+ getPatternName() : String\l
	+ getCandidates(IModel) : Set\<Set\<IClass\>\>\l
	+ detect(IModel) : Map\<Class\<IPattern\>Set\<IClass\>\>\l
	}"
	style = "filled"
fillcolor = "green"]
legendarydetectorsAdapterDetector [
	label = "{legendary.detectors::AdapterDetector\n\<\<decorator\>\>|
	|
	+ getPatternName() : String\l
	+ getCandidates(IModel) : Set\<Set\<IClass\>\>\l
	+ detect(IModel) : Map\<Class\<IPattern\>Set\<IClass\>\>\l
	}"
	style = "filled"
fillcolor = "green"]
legendaryInterfacesIField [
	label = "{\<\<interface\>\>\nlegendary.Interfaces::IField|
	|
	+ setAccess(String) : void\l
	+ getBaseTypes() : Set\<String\>\l
	+ setFieldName(String) : void\l
	+ getAccess() : String\l
	+ getType() : String\l
	+ setType(String) : void\l
	+ getFieldName() : String\l
	}"
	]
legendaryDisplayScreenCheckBoxTree [
	label = "{legendary.DisplayScreen::CheckBoxTree|
	 panel: JPanel\l
	|
	+ createTree() : void\l
	}"
	]
legendaryInterfacesIPattern [
	label = "{\<\<interface\>\>\nlegendary.Interfaces::IPattern|
	|
	+ color() : String\l
	+ tag() : String\l
	+ tagArrow(Set\<IPattern\>, Set\<IPattern\>) : String\l
	}"
	]
legendaryvisitorIVisitor [
	label = "{\<\<interface\>\>\nlegendary.visitor::IVisitor|
	|
	+ postVisit(ITraverser) : void\l
	+ preVisit(ITraverser) : void\l
	+ addVisit(VisitType, Class\<\>, IVisitMethod) : void\l
	+ removeVisit(VisitType, Class\<\>) : void\l
	+ visit(ITraverser) : void\l
	+ getMap() : Map\<LookupKey, IVisitMethod\>\l
	}"
	]
javaawtContainer [
	label = "{java.awt::Container\n\<\<decorator\>\>|
	- _log: PlatformLogger_\l
	- _eventLog: PlatformLogger_\l
	- _EMPTY_ARRAY: Component[]_\l
	- component: List\<Component\>\l
	 layoutMgr: LayoutManager\l
	- dispatcher: LightweightDispatcher\l
	- focusTraversalPolicy: FocusTraversalPolicy\l
	- focusCycleRoot: boolean\l
	- focusTraversalPolicyProvider: boolean\l
	- printingThreads: Set\<Thread\>\l
	- printing: boolean\l
	 containerListener: ContainerListener\l
	 listeningChildren: int\l
	 listeningBoundsChildren: int\l
	 descendantsCount: int\l
	 preserveBackgroundColor: Color\l
	- _serialVersionUID: long_\l
	 _INCLUDE_SELF: boolean_\l
	 _SEARCH_HEAVYWEIGHTS: boolean_\l
	- numOfHWComponents: int\l
	- numOfLWComponents: int\l
	- _mixingLog: PlatformLogger_\l
	- _serialPersistentFields: ObjectStreamField[]_\l
	- _isJavaAwtSmartInvalidate: boolean_\l
	- _descendUnconditionallyWhenValidating: boolean_\l
	 modalComp: Component\l
	 modalAppContext: AppContext\l
	- containerSerializedDataVersion: int\l
	|
	 getOpaqueShape() : Region\l
	 postProcessKeyEvent(KeyEvent) : void\l
	# processEvent(AWTEvent) : void\l
	+ paint(Graphics) : void\l
	+ setLayout(LayoutManager) : void\l
	- addDelicately(Component, Container, int) : void\l
	 mixOnValidating() : void\l
	# paramString() : String\l
	+ removeAll() : void\l
	- _isRemoveNotifyNeeded(Component, Container, Container) : boolean_\l
	+ getMinimumSize() : Dimension\l
	+ getMousePosition(boolean) : Point\l
	 postsOldMouseEvents() : boolean\l
	+ getAlignmentY() : float\l
	 countHierarchyMembers() : int\l
	+ addContainerListener(ContainerListener) : void\l
	- reparentChild(Component) : void\l
	+ getAlignmentX() : float\l
	- getBottommostComponentIndex() : int\l
	+ setComponentZOrder(Component, int) : void\l
	 decreaseComponentCount(Component) : void\l
	+ findComponentAt(int, int) : Component\l
	+ findComponentAt(Point) : Component\l
	 findComponentAt(int, int, boolean) : Component\l
	- readObject(ObjectInputStream) : void\l
	- getListenersCount(int, boolean) : int\l
	+ minimumSize() : Dimension\l
	 numListening(long) : int\l
	+ removeContainerListener(ContainerListener) : void\l
	 containsFocus() : boolean\l
	 isSameOrAncestorOf(Component, boolean) : boolean\l
	 clearCurrentFocusCycleRootOnHide() : void\l
	+ printComponents(Graphics) : void\l
	+ getListeners(, , , EventListener\>, , Class\<\>) : \l
	 updateGraphicsData(GraphicsConfiguration) : boolean\l
	+ getMaximumSize() : Dimension\l
	- startLWModal() : void\l
	 canContainFocusOwner(Component) : boolean\l
	+ setFocusTraversalPolicy(FocusTraversalPolicy) : void\l
	 createHierarchyEvents(int, Component, Container, long, boolean) : int\l
	 findComponentAtImpl(int, int, boolean) : Component\l
	 paintHeavyweightComponents(Graphics) : void\l
	+ setFocusTraversalKeys(int, Set\<AWTKeyStroke\>) : void\l
	- checkAddToSelf(Component) : void\l
	 getDropTargetEventTarget(int, int, boolean) : Component\l
	+ applyComponentOrientation(ComponentOrientation) : void\l
	+ validate() : void\l
	 validateUnconditionally() : void\l
	 mixOnZOrderChanging(int, int) : void\l
	- recursiveShowHeavyweightChildren() : void\l
	+ getInsets() : Insets\l
	 mixOnHiding(boolean) : void\l
	- getMouseEventTargetImpl(int, int, boolean, ContainerEventTargetFilter, boolean, boolean) : Component\l
	- checkNotAWindow(Component) : void\l
	 lightweightPaint(Graphics) : void\l
	- _getChildAt(Component, int, int, boolean) : Component_\l
	+ isValidateRoot() : boolean\l
	+ getPreferredSize() : Dimension\l
	 eventEnabled(AWTEvent) : boolean\l
	+ addNotify() : void\l
	- recursiveHideHeavyweightChildren() : void\l
	+ setFocusTraversalPolicyProvider(boolean) : void\l
	 invalidateParent() : void\l
	+ insets() : Insets\l
	+ countComponents() : int\l
	- getMouseEventTarget(int, int, boolean, ContainerEventTargetFilter, boolean) : Component\l
	 getMouseEventTarget(int, int, boolean) : Component\l
	 increaseComponentCount(Component) : void\l
	- _initIDs() : void_\l
	- recursiveRelocateHeavyweightChildren(Point) : void\l
	 getAccessibleAt(Point) : Accessible\l
	 adjustDecendantsOnParent(int) : void\l
	+ getFocusTraversalKeys(int) : Set\<AWTKeyStroke\>\l
	 getComponentsSync() : Component\l
	- reparentTraverse(ContainerPeer, Container) : void\l
	+ preferredSize() : Dimension\l
	+ getComponents() : Component\l
	 getHeavyweightContainer() : Container\l
	+ setFont(Font) : void\l
	+ doLayout() : void\l
	+ add(Component, int) : Component\l
	+ add(String, Component) : Component\l
	+ add(Component, Object) : void\l
	+ add(Component) : Component\l
	+ add(Component, Object, int) : void\l
	 clearMostRecentFocusOwnerOnHide() : void\l
	# validateTree() : void\l
	+ setFocusCycleRoot(boolean) : void\l
	- writeObject(ObjectOutputStream) : void\l
	 getTraversalRoot() : Container\l
	- isParentOf(Component) : boolean\l
	 adjustDescendants(int) : void\l
	+ list(PrintWriter, int) : void\l
	+ list(PrintStream, int) : void\l
	+ deliverEvent(Event) : void\l
	 hasHeavyweightDescendants() : boolean\l
	+ getComponentCount() : int\l
	+ isAncestorOf(Component) : boolean\l
	 proxyEnableEvents(long) : void\l
	- removeDelicately(Component, Container, int) : boolean\l
	- getTopmostComponentIndex() : int\l
	 getAccessibleChild(int) : Accessible\l
	 mixOnReshaping() : void\l
	 lightweightPrint(Graphics) : void\l
	+ removeNotify() : void\l
	 isRecursivelyVisibleUpToHeavyweightContainer() : boolean\l
	+ getComponent(int) : Component\l
	 getComponents_NoClientCode() : Component\l
	+ locate(int, int) : Component\l
	 mixOnShowing() : void\l
	 initializeFocusTraversalKeys() : void\l
	+ getComponentAt(int, int) : Component\l
	+ getComponentAt(Point) : Component\l
	+ update(Graphics) : void\l
	+ isFocusTraversalPolicySet() : boolean\l
	+ isFocusCycleRoot() : boolean\l
	+ isFocusCycleRoot(Container) : boolean\l
	+ getComponentZOrder(Component) : int\l
	+ remove(Component) : void\l
	+ remove(int) : void\l
	 invalidateTree() : void\l
	 printHeavyweightComponents(Graphics) : void\l
	 recursiveSubtractAndApplyShape(Region, int) : void\l
	 recursiveSubtractAndApplyShape(Region) : void\l
	 recursiveSubtractAndApplyShape(Region, int, int) : void\l
	+ getLayout() : LayoutManager\l
	- stopLWModal() : void\l
	+ getContainerListeners() : ContainerListener\l
	 recursiveApplyCurrentShape() : void\l
	 recursiveApplyCurrentShape(int, int) : void\l
	 recursiveApplyCurrentShape(int) : void\l
	# processContainerEvent(ContainerEvent) : void\l
	+ isFocusTraversalPolicyProvider() : boolean\l
	 checkGD(String) : void\l
	+ addPropertyChangeListener(String, PropertyChangeListener) : void\l
	+ addPropertyChangeListener(PropertyChangeListener) : void\l
	 getAccessibleChildrenCount() : int\l
	- findTraversalRoot() : Container\l
	+ transferFocusDownCycle() : void\l
	# addImpl(Component, Object, int) : void\l
	+ areFocusTraversalKeysSet(int) : boolean\l
	+ invalidate() : void\l
	 dispatchEventToSelf(AWTEvent) : void\l
	+ layout() : void\l
	 adjustListeningChildren(long, int) : void\l
	+ print(Graphics) : void\l
	 createChildHierarchyEvents(int, long, boolean) : void\l
	+ paintComponents(Graphics) : void\l
	- checkAdding(Component, int) : void\l
	+ getFocusTraversalPolicy() : FocusTraversalPolicy\l
	 preProcessKeyEvent(KeyEvent) : void\l
	 hasLightweightDescendants() : boolean\l
	 dispatchEventImpl(AWTEvent) : void\l
	}"
	style = "filled"
fillcolor = "green"]
legendaryClassesLegendaryField [
	label = "{legendary.Classes::LegendaryField|
	- fieldAccessType: String\l
	- fieldName: String\l
	- fieldType: String\l
	- baseFields: Set\<String\>\l
	|
	+ setAccess(String) : void\l
	+ getBaseTypes() : Set\<String\>\l
	+ setFieldName(String) : void\l
	+ getAccess() : String\l
	+ getType() : String\l
	+ setType(String) : void\l
	+ getFieldName() : String\l
	+ accept(IVisitor) : void\l
	}"
	]
legendarydetectorsSingletonDetector [
	label = "{legendary.detectors::SingletonDetector\n\<\<decorator\>\>|
	|
	+ getPatternName() : String\l
	+ getCandidates(IModel) : Set\<Set\<IClass\>\>\l
	+ detect(IModel) : Map\<Class\<IPattern\>Set\<IClass\>\>\l
	}"
	style = "filled"
fillcolor = "green"]
javabeansVetoableChangeListener [
	label = "{\<\<interface\>\>\njava.beans::VetoableChangeListener\n\<\<decorator\>\>|
	|
	+ vetoableChange(PropertyChangeEvent) : void\l
	}"
	style = "filled"
fillcolor = "green"]
legendaryvisitorITraverser [
	label = "{\<\<interface\>\>\nlegendary.visitor::ITraverser|
	|
	+ accept(IVisitor) : void\l
	}"
	]
legendaryInterfacesICommand [
	label = "{\<\<interface\>\>\nlegendary.Interfaces::ICommand|
	|
	+ name() : String\l
	+ execute() : void\l
	}"
	]
legendaryvisitorVisitorAdapter [
	label = "{legendary.visitor::VisitorAdapter|
	+ keyToVisitMethodMap: Map\<LookupKey, IVisitMethod\>\l
	|
	+ postVisit(ITraverser) : void\l
	- doVisit(VisitType, ITraverser) : void\l
	+ preVisit(ITraverser) : void\l
	+ addVisit(VisitType, Class\<\>, IVisitMethod) : void\l
	+ removeVisit(VisitType, Class\<\>) : void\l
	+ visit(ITraverser) : void\l
	+ getMap() : Map\<LookupKey, IVisitMethod\>\l
	}"
	]
legendaryParsingUtilGeneralUtil [
	label = "{legendary.ParsingUtil::GeneralUtil|
	+ _primCodes: Map\<String, String\>_\l
	+ _packageName: String_\l
	+ _isGenning: boolean_\l
	|
	+ _writeAndExecSDEdit(StringBuilder) : void_\l
	+ _getBaseFields(String) : Set\<String\>_\l
	+ _writeAndExecGraphViz(StringBuilder) : void_\l
	+ _typeMethodCollections(String, List\<String\>) : String_\l
	- _convert(List\<String\>) : List\<String\>_\l
	- _parsePrimOut(String, List\<String\>) : void_\l
	+ _typeArgumentCollections(String) : List\<String\>_\l
	+ _getClassesFromDir(File, int) : List\<String\>_\l
	+ _typeFieldCollections(String) : String_\l
	}"
	]
legendaryInterfacesIPatternDetector [
	label = "{\<\<interface\>\>\nlegendary.Interfaces::IPatternDetector|
	|
	+ getPatternName() : String\l
	+ getKeyMap() : Map\<IClass, Set\<IClass\>\>\l
	+ getCandidates(IModel) : Set\<Set\<IClass\>\>\l
	+ getDecorated() : IPatternDetector\l
	+ detect(IModel) : Map\<Class\<IPattern\>Set\<IClass\>\>\l
	+ addDetector(IPatternDetector) : void\l
	}"
	]
javaawtdndDragSourceMotionListener [
	label = "{\<\<interface\>\>\njava.awt.dnd::DragSourceMotionListener\n\<\<decorator\>\>|
	|
	+ dragMouseMoved(DragSourceDragEvent) : void\l
	}"
	style = "filled"
fillcolor = "green"]
legendarypatternsDecoratorComponentPattern [
	label = "{legendary.patterns::DecoratorComponentPattern|
	|
	+ tag() : String\l
	}"
	]
legendaryDisplayScreenPatternSelector [
	label = "{legendary.DisplayScreen::PatternSelector|
	|
	}"
	]
javaniofilePath [
	label = "{\<\<interface\>\>\njava.nio.file::Path\n\<\<decorator\>\>|
	|
	+ getParent() : Path\l
	+ getNameCount() : int\l
	+ getName(int) : Path\l
	+ resolve(String) : Path\l
	+ resolve(Path) : Path\l
	+ resolveSibling(String) : Path\l
	+ resolveSibling(Path) : Path\l
	+ toUri() : URI\l
	+ subpath(int, int) : Path\l
	+ toAbsolutePath() : Path\l
	+ getFileSystem() : FileSystem\l
	+ compareTo(Path) : int\l
	+ compareTo(Object) : int\l
	+ iterator() : Iterator\<Path\>\l
	+ hashCode() : int\l
	+ normalize() : Path\l
	+ equals(Object) : boolean\l
	+ endsWith(String) : boolean\l
	+ endsWith(Path) : boolean\l
	+ toRealPath(LinkOption[]) : Path\l
	+ toFile() : File\l
	+ isAbsolute() : boolean\l
	+ toString() : String\l
	+ relativize(Path) : Path\l
	+ getRoot() : Path\l
	+ getFileName() : Path\l
	+ startsWith(String) : boolean\l
	+ startsWith(Path) : boolean\l
	+ register(WatchService, WatchEventKind\<\>, WatchEventModifier[]) : WatchKey\l
	+ register(WatchService, WatchEventKind\<\>) : WatchKey\l
	}"
	style = "filled"
fillcolor = "green"]
legendaryasmClassFieldVisitor [
	label = "{legendary.asm::ClassFieldVisitor|
	- legendaryClass: IClass\l
	- legendaryModel: IModel\l
	|
	+ visitField(int, String, String, String, Object) : FieldVisitor\l
	 addAccessLevel(int, IField) : void\l
	}"
	]
javaawtWindow [
	label = "{java.awt::Window\n\<\<decorator\>\>|
	 warningString: String\l
	 icons: List\<Image\>\l
	- temporaryLostComponent: Component\l
	 _systemSyncLWRequests: boolean_\l
	 syncLWRequests: boolean\l
	 beforeFirstShow: boolean\l
	- disposing: boolean\l
	 disposerRecord: WindowWindowDisposerRecord\l
	 _OPENED: int_\l
	 state: int\l
	- alwaysOnTop: boolean\l
	- _allWindows: IdentityArrayList\<Window\>_\l
	 ownedWindowList: Vector\<WeakReference\<Window\>\>\l
	- weakThis: WeakReference\<Window\>\l
	 showWithParent: boolean\l
	 modalBlocker: Dialog\l
	 modalExclusionType: DialogModalExclusionType\l
	 windowListener: WindowListener\l
	 windowStateListener: WindowStateListener\l
	 windowFocusListener: WindowFocusListener\l
	 inputContext: InputContext\l
	- inputContextLock: Object\l
	- focusMgr: FocusManager\l
	- focusableWindowState: boolean\l
	- autoRequestFocus: boolean\l
	 isInShow: boolean\l
	- opacity: float\l
	- shape: Shape\l
	- _base: String_\l
	- _nameCounter: int_\l
	- _serialVersionUID: long_\l
	- _log: PlatformLogger_\l
	- _locationByPlatformProp: boolean_\l
	 isTrayIconWindow: boolean\l
	- securityWarningWidth: int\l
	- securityWarningHeight: int\l
	- securityWarningPointX: double\l
	- securityWarningPointY: double\l
	- securityWarningAlignmentX: float\l
	- securityWarningAlignmentY: float\l
	 anchor: Object\l
	- _beforeFirstWindowShown: AtomicBoolean_\l
	- type: WindowType\l
	- windowSerializedDataVersion: int\l
	- locationByPlatform: boolean\l
	|
	 _getAllWindows() : IdentityArrayList\<Window\>_\l
	+ isOpaque() : boolean\l
	 postProcessKeyEvent(KeyEvent) : void\l
	- initDeserializedWindow() : void\l
	+ setModalExclusionType(DialogModalExclusionType) : void\l
	# processEvent(AWTEvent) : void\l
	 setGraphicsConfiguration(GraphicsConfiguration) : void\l
	- setWarningString() : void\l
	+ paint(Graphics) : void\l
	+ removeWindowListener(WindowListener) : void\l
	+ getOwner() : Window\l
	- ownedInit(Window) : void\l
	+ setIconImages(List\<Image\>) : void\l
	+ getWindowStateListeners() : WindowStateListener\l
	- init(GraphicsConfiguration) : void\l
	 isDisposing() : boolean\l
	 _access400(Window) : float_\l
	 getContainer() : Container\l
	+ setFocusableWindowState(boolean) : void\l
	+ getMostRecentFocusOwner() : Component\l
	 _access000(Window) : WeakReference_\l
	+ reshape(int, int, int, int) : void\l
	+ pack() : void\l
	 _access802(Window, double) : double_\l
	- setOwnedWindowsAlwaysOnTop(boolean) : void\l
	 doDispose() : void\l
	+ toBack() : void\l
	+ postEvent(Event) : boolean\l
	- readObject(ObjectInputStream) : void\l
	+ setLocationByPlatform(boolean) : void\l
	 getDocumentRoot() : Window\l
	+ createBufferStrategy(int, BufferCapabilities) : void\l
	+ createBufferStrategy(int) : void\l
	- updateWindow() : void\l
	 isModalBlocked() : boolean\l
	+ getType() : WindowType\l
	- deserializeResources(ObjectInputStream) : void\l
	 _access1200(Window, double, double, double, double) : Point2D_\l
	+ setMinimumSize(Dimension) : void\l
	+ getModalExclusionType() : DialogModalExclusionType\l
	 isModalExcluded(DialogModalExclusionType) : boolean\l
	+ getListeners(, , , EventListener\>, , Class\<\>) : \l
	# processWindowEvent(WindowEvent) : void\l
	# processWindowStateEvent(WindowEvent) : void\l
	 removeOwnedWindow(WeakReference\<Window\>) : void\l
	 deliverMouseWheelToAncestor(MouseWheelEvent) : void\l
	 toBack_NoClientCode() : void\l
	 canContainFocusOwner(Component) : boolean\l
	 getModalBlocker() : Dialog\l
	+ removeWindowFocusListener(WindowFocusListener) : void\l
	+ addWindowListener(WindowListener) : void\l
	+ isAlwaysOnTopSupported() : boolean\l
	+ addWindowStateListener(WindowStateListener) : void\l
	 applyCurrentShape() : void\l
	+ getIconImages() : List\<Image\>\l
	+ getFocusableWindowState() : boolean\l
	- calculateSecurityWarningPosition(double, double, double, double) : Point2D\l
	 _access500(Window) : void_\l
	 applyCompoundShape(Region) : void\l
	 updateChildrenBlocking() : void\l
	+ getWindowFocusListeners() : WindowFocusListener\l
	 addOwnedWindow(WeakReference\<Window\>) : void\l
	 _access100(AppContext, WeakReference) : void_\l
	 toFront_NoClientCode() : void\l
	 postWindowEvent(int) : void\l
	 _access902(Window, double) : double_\l
	+ setBounds(Rectangle) : void\l
	+ setBounds(int, int, int, int) : void\l
	 isRecursivelyVisible() : boolean\l
	+ _getWindows() : Window_\l
	- _getWindows(AppContext) : Window_\l
	+ hide() : void\l
	+ isValidateRoot() : boolean\l
	 dispatchMouseWheelToAncestor(MouseWheelEvent) : boolean\l
	 setClientSize(int, int) : void\l
	+ addNotify() : void\l
	 eventEnabled(AWTEvent) : boolean\l
	 setTemporaryLostComponent(Component) : Component\l
	+ isFocusableWindow() : boolean\l
	+ getFocusCycleRootAncestor() : Container\l
	 _access1102(Window, float) : float_\l
	+ addWindowFocusListener(WindowFocusListener) : void\l
	+ setLocationRelativeTo(Component) : void\l
	- initGC(GraphicsConfiguration) : GraphicsConfiguration\l
	 getTemporaryLostComponent() : Component\l
	+ setIconImage(Image) : void\l
	- _initIDs() : void_\l
	+ isActive() : boolean\l
	 adjustDecendantsOnParent(int) : void\l
	- removeFromWindowList() : void\l
	- _removeFromWindowList(AppContext, WeakReference\<Window\>) : void_\l
	+ getInputContext() : InputContext\l
	+ getFocusTraversalKeys(int) : Set\<AWTKeyStroke\>\l
	+ getOpacity() : float\l
	+ isShowing() : boolean\l
	 setModalBlocked(Dialog, boolean, boolean) : void\l
	- _limit(double, double, double) : double_\l
	+ isLocationByPlatform() : boolean\l
	+ setAutoRequestFocus(boolean) : void\l
	+ setVisible(boolean) : void\l
	 _access600(Window) : int_\l
	 constructComponentName() : String\l
	 clearMostRecentFocusOwnerOnHide() : void\l
	+ toFront() : void\l
	 _access202(Window, boolean) : boolean_\l
	 disposeImpl() : void\l
	+ setFocusCycleRoot(boolean) : void\l
	- writeObject(ObjectOutputStream) : void\l
	# processWindowFocusEvent(WindowEvent) : void\l
	 getLocationOnWindow() : Point\l
	+ isFocused() : boolean\l
	 connectOwnedWindow(Window) : void\l
	 _access602(Window, int) : int_\l
	+ removeWindowStateListener(WindowStateListener) : void\l
	 mixOnReshaping() : void\l
	+ removeNotify() : void\l
	 _access1002(Window, float) : float_\l
	+ dispose() : void\l
	+ setCursor(Cursor) : void\l
	+ getWarningString() : String\l
	+ _getOwnerlessWindows() : Window_\l
	 updateZOrder() : void\l
	 _getAllUnblockedWindows() : IdentityArrayList\<Window\>_\l
	+ show() : void\l
	+ isAlwaysOnTop() : boolean\l
	+ getShape() : Shape\l
	+ isFocusCycleRoot() : boolean\l
	+ setBackground(Color) : void\l
	+ getToolkit() : Toolkit\l
	+ setSize(Dimension) : void\l
	+ setSize(int, int) : void\l
	 getOwnedWindows_NoClientCode() : Window\l
	+ setLocation(int, int) : void\l
	+ setLocation(Point) : void\l
	+ addPropertyChangeListener(String, PropertyChangeListener) : void\l
	+ addPropertyChangeListener(PropertyChangeListener) : void\l
	+ getWindowListeners() : WindowListener\l
	+ getOwnedWindows() : Window\l
	 _access700(Window) : int_\l
	 adjustListeningChildrenOnParent(long, int) : void\l
	- _setLayersOpaque(Component, boolean) : void_\l
	+ applyResourceBundle(String) : void\l
	+ applyResourceBundle(ResourceBundle) : void\l
	 getOwner_NoClientCode() : Window\l
	 _access300(Window) : Object_\l
	+ setType(WindowType) : void\l
	+ getBufferStrategy() : BufferStrategy\l
	+ getAccessibleContext() : AccessibleContext\l
	+ setShape(Shape) : void\l
	 _access702(Window, int) : int_\l
	 closeSplashScreen() : void\l
	- addToWindowList() : void\l
	 _updateChildFocusableWindowState(Window) : void_\l
	+ setAlwaysOnTop(boolean) : void\l
	+ isAutoRequestFocus() : boolean\l
	 preProcessKeyEvent(KeyEvent) : void\l
	+ getFocusOwner() : Component\l
	 _access1300(Window) : boolean_\l
	+ getLocale() : Locale\l
	+ getBackground() : Color\l
	 dispatchEventImpl(AWTEvent) : void\l
	+ setOpacity(float) : void\l
	}"
	style = "filled"
fillcolor = "green"]
legendaryInterfacesIPattern [
	label = "{\<\<interface\>\>\nlegendary.Interfaces::IPattern|
	|
	+ color() : String\l
	+ tag() : String\l
	+ tagArrow(Set\<IPattern\>, Set\<IPattern\>) : String\l
	}"
	]
javabeansPropertyChangeListener [
	label = "{\<\<interface\>\>\njava.beans::PropertyChangeListener\n\<\<decorator\>\>|
	|
	+ propertyChange(PropertyChangeEvent) : void\l
	}"
	style = "filled"
fillcolor = "green"]
legendarymainScreenButtonPanel [
	label = "{legendary.mainScreen::ButtonPanel|
	- chooseFile: JButton\l
	- analyseFile: JButton\l
	- fileChooser: JFileChooser\l
	- file: File\l
	|
	+ actionPerformed(ActionEvent) : void\l
	- initializeButtons() : void\l
	}"
	]
legendarypatternsCompositePattern [
	label = "{legendary.patterns::CompositePattern|
	|
	+ tag() : String\l
	}"
	]
legendarycommandsGVGenCommand [
	label = "{legendary.commands::GVGenCommand|
	|
	+ name() : String\l
	+ execute() : void\l
	}"
	]
javaawteventKeyListener [
	label = "{\<\<interface\>\>\njava.awt.event::KeyListener\n\<\<decorator\>\>|
	|
	+ keyPressed(KeyEvent) : void\l
	+ keyReleased(KeyEvent) : void\l
	+ keyTyped(KeyEvent) : void\l
	}"
	style = "filled"
fillcolor = "green"]
javaawteventMouseListener [
	label = "{\<\<interface\>\>\njava.awt.event::MouseListener\n\<\<decorator\>\>|
	|
	+ mouseReleased(MouseEvent) : void\l
	+ mouseExited(MouseEvent) : void\l
	+ mouseEntered(MouseEvent) : void\l
	+ mouseClicked(MouseEvent) : void\l
	+ mousePressed(MouseEvent) : void\l
	}"
	style = "filled"
fillcolor = "green"]
legendaryvisitorITraverser [
	label = "{\<\<interface\>\>\nlegendary.visitor::ITraverser|
	|
	+ accept(IVisitor) : void\l
	}"
	]
javaawtdndDragSourceListener [
	label = "{\<\<interface\>\>\njava.awt.dnd::DragSourceListener\n\<\<decorator\>\>|
	|
	+ dragEnter(DragSourceDragEvent) : void\l
	+ dragDropEnd(DragSourceDropEvent) : void\l
	+ dragOver(DragSourceDragEvent) : void\l
	+ dropActionChanged(DragSourceDragEvent) : void\l
	+ dragExit(DragSourceEvent) : void\l
	}"
	style = "filled"
fillcolor = "green"]
legendaryClassesLegendaryModel [
	label = "{legendary.Classes::LegendaryModel|
	- classList: Set\<IClass\>\l
	- relGraph: Map\<IClass, Map\<Relations, Set\<IClass\>\>\>\l
	- relations: Map\<List\<String\>List\<Relations\>\>\l
	- patterns: Map\<IPattern, Set\<IClass\>\>\l
	|
	+ convertToGraph() : void\l
	+ getRelGraph() : Map\<IClass, Map\<Relations, Set\<IClass\>\>\>\l
	+ getPatterns() : Map\<IPattern, Set\<IClass\>\>\l
	+ removeDupArrows(Map\<IClass, Map\<Relations, Set\<IClass\>\>\>) : void\l
	+ getRelations() : Map\<List\<String\>List\<Relations\>\>\l
	+ addPattern(IPattern, Set\<IClass\>) : void\l
	+ addRelation(String, String, Relations) : void\l
	+ containsClass(String) : boolean\l
	+ getClasses() : Set\<IClass\>\l
	+ addClass(IClass) : void\l
	+ accept(IVisitor) : void\l
	}"
	]
legendaryInterfacesIMethod [
	label = "{\<\<interface\>\>\nlegendary.Interfaces::IMethod|
	|
	+ setParameters(List\<String\>) : void\l
	+ addMethodToCallStack(String, String, String, List\<String\>) : void\l
	+ setAccess(String) : void\l
	+ setMethodName(String) : void\l
	+ getAccess() : String\l
	+ getMethodName() : String\l
	+ getReturnType() : String\l
	+ setReturnType(String) : void\l
	+ getParameters() : List\<String\>\l
	+ getCallStack() : Queue\<List\<List\<String\>\>\>\l
	}"
	]
javaxswingtreeMutableTreeNode [
	label = "{\<\<interface\>\>\njavax.swing.tree::MutableTreeNode\n\<\<decorator, component\>\>|
	|
	+ removeFromParent() : void\l
	+ insert(MutableTreeNode, int) : void\l
	+ setUserObject(Object) : void\l
	+ setParent(MutableTreeNode) : void\l
	+ remove(MutableTreeNode) : void\l
	+ remove(int) : void\l
	}"
	style = "filled"
fillcolor = "green"]
legendaryasmDesignParser [
	label = "{legendary.asm::DesignParser|
	+ _packageName: String_\l
	+ _directories: String[]_\l
	+ _AdapterThreshold: int_\l
	+ _classesSeen: ArrayList\<String\>_\l
	+ _DirectoryLevels: int_\l
	|
	+ _executeASM(String, IModel, boolean) : void_\l
	+ _main(String[]) : void_\l
	}"
	]
legendaryvisitorIVisitor [
	label = "{\<\<interface\>\>\nlegendary.visitor::IVisitor|
	|
	+ postVisit(ITraverser) : void\l
	+ preVisit(ITraverser) : void\l
	+ addVisit(VisitType, Class\<\>, IVisitMethod) : void\l
	+ removeVisit(VisitType, Class\<\>) : void\l
	+ visit(ITraverser) : void\l
	+ getMap() : Map\<LookupKey, IVisitMethod\>\l
	}"
	]
legendarypatternsAbstractDecoratorPattern [
	label = "{legendary.patterns::AbstractDecoratorPattern|
	|
	+ color() : String\l
	+ tagArrow(Set\<IPattern\>, Set\<IPattern\>) : String\l
	}"
	]
javautilQueue [
	label = "{\<\<interface\>\>\njava.util::Queue\n\<\<decorator\>\>|
	|
	+ add(, ) : boolean\l
	+ offer(, ) : boolean\l
	+ poll() : \l
	+ remove() : \l
	+ element() : \l
	+ peek() : \l
	}"
	style = "filled"
fillcolor = "green"]
legendaryInterfacesIPattern [
	label = "{\<\<interface\>\>\nlegendary.Interfaces::IPattern|
	|
	+ color() : String\l
	+ tag() : String\l
	+ tagArrow(Set\<IPattern\>, Set\<IPattern\>) : String\l
	}"
	]
legendaryDisplayScreenCheckBoxRenderer [
	label = "{legendary.DisplayScreen::CheckBoxRenderer|
	- checkBox: JCheckBox\l
	 selectionForeground: Color\l
	 selectionBackground: Color\l
	 textForeground: Color\l
	 textBackground: Color\l
	|
	# getLeafRenderer() : JCheckBox\l
	+ getTreeCellRendererComponent(JTree, Object, boolean, boolean, boolean, int, boolean) : Component\l
	}"
	]
legendaryDisplayScreenCheckBoxNode [
	label = "{legendary.DisplayScreen::CheckBoxNode\n\<\<adapter, decorator\>\>|
	 text: String\l
	- model: CheckBoxModel\l
	- classes: Set\<IClass\>\l
	 selected: boolean\l
	|
	+ setSelected(boolean, boolean) : void\l
	+ getText() : String\l
	+ isSelected() : boolean\l
	+ toString() : String\l
	+ getClasses() : Set\<IClass\>\l
	+ setText(String) : void\l
	}"
	style = "filled"
fillcolor = "red"]
legendarymainScreenMainScreen [
	label = "{legendary.mainScreen::MainScreen|
	+ _frame: JFrame_\l
	|
	+ createScreen() : void\l
	}"
	]
legendaryInterfacesICommand [
	label = "{\<\<interface\>\>\nlegendary.Interfaces::ICommand|
	|
	+ name() : String\l
	+ execute() : void\l
	}"
	]
legendaryInterfacesIMethod [
	label = "{\<\<interface\>\>\nlegendary.Interfaces::IMethod|
	|
	+ setParameters(List\<String\>) : void\l
	+ addMethodToCallStack(String, String, String, List\<String\>) : void\l
	+ setAccess(String) : void\l
	+ setMethodName(String) : void\l
	+ getAccess() : String\l
	+ getMethodName() : String\l
	+ getReturnType() : String\l
	+ setReturnType(String) : void\l
	+ getParameters() : List\<String\>\l
	+ getCallStack() : Queue\<List\<List\<String\>\>\>\l
	}"
	]
javaxswingJComponent [
	label = "{javax.swing::JComponent\n\<\<component, decorator\>\>|
	- _uiClassID: String_\l
	- _readObjectCallbacks: Hashtable\<ObjectInputStream, JComponentReadObjectCallback\>_\l
	- _managingFocusForwardTraversalKeys: Set\<KeyStroke\>_\l
	- _managingFocusBackwardTraversalKeys: Set\<KeyStroke\>_\l
	- _NOT_OBSCURED: int_\l
	- _PARTIALLY_OBSCURED: int_\l
	- _COMPLETELY_OBSCURED: int_\l
	 _DEBUG_GRAPHICS_LOADED: boolean_\l
	- _INPUT_VERIFIER_SOURCE_KEY: Object_\l
	- isAlignmentXSet: boolean\l
	- alignmentX: float\l
	- isAlignmentYSet: boolean\l
	- alignmentY: float\l
	# ui: ComponentUI\l
	# listenerList: EventListenerList\l
	- clientProperties: ArrayTable\l
	- vetoableChangeSupport: VetoableChangeSupport\l
	- autoscrolls: boolean\l
	- border: Border\l
	- flags: int\l
	- inputVerifier: InputVerifier\l
	- verifyInputWhenFocusTarget: boolean\l
	 paintingChild: Component\l
	+ _WHEN_FOCUSED: int_\l
	+ _WHEN_ANCESTOR_OF_FOCUSED_COMPONENT: int_\l
	+ _WHEN_IN_FOCUSED_WINDOW: int_\l
	+ _UNDEFINED_CONDITION: int_\l
	- _KEYBOARD_BINDINGS_KEY: String_\l
	- _WHEN_IN_FOCUSED_WINDOW_BINDINGS: String_\l
	+ _TOOL_TIP_TEXT_KEY: String_\l
	- _NEXT_FOCUS: String_\l
	- popupMenu: JPopupMenu\l
	- _IS_DOUBLE_BUFFERED: int_\l
	- _ANCESTOR_USING_BUFFER: int_\l
	- _IS_PAINTING_TILE: int_\l
	- _IS_OPAQUE: int_\l
	- _KEY_EVENTS_ENABLED: int_\l
	- _FOCUS_INPUTMAP_CREATED: int_\l
	- _ANCESTOR_INPUTMAP_CREATED: int_\l
	- _WIF_INPUTMAP_CREATED: int_\l
	- _ACTIONMAP_CREATED: int_\l
	- _CREATED_DOUBLE_BUFFER: int_\l
	- _IS_PRINTING: int_\l
	- _IS_PRINTING_ALL: int_\l
	- _IS_REPAINTING: int_\l
	- _WRITE_OBJ_COUNTER_FIRST: int_\l
	- _RESERVED_1: int_\l
	- _RESERVED_2: int_\l
	- _RESERVED_3: int_\l
	- _RESERVED_4: int_\l
	- _RESERVED_5: int_\l
	- _RESERVED_6: int_\l
	- _WRITE_OBJ_COUNTER_LAST: int_\l
	- _REQUEST_FOCUS_DISABLED: int_\l
	- _INHERITS_POPUP_MENU: int_\l
	- _OPAQUE_SET: int_\l
	- _AUTOSCROLLS_SET: int_\l
	- _FOCUS_TRAVERSAL_KEYS_FORWARD_SET: int_\l
	- _FOCUS_TRAVERSAL_KEYS_BACKWARD_SET: int_\l
	- revalidateRunnableScheduled: AtomicBoolean\l
	- _tempRectangles: List\<Rectangle\>_\l
	- focusInputMap: InputMap\l
	- ancestorInputMap: InputMap\l
	- windowInputMap: ComponentInputMap\l
	- actionMap: ActionMap\l
	- _defaultLocale: String_\l
	- _componentObtainingGraphicsFrom: Component_\l
	- _componentObtainingGraphicsFromLock: Object_\l
	- aaTextInfo: Object\l
	 _focusController: RequestFocusController_\l
	|
	+ requestFocusInWindow() : boolean\l
	# requestFocusInWindow(boolean) : boolean\l
	+ getLocation(Point) : Point\l
	+ getInputVerifier() : InputVerifier\l
	+ isOpaque() : boolean\l
	+ getRootPane() : JRootPane\l
	- _isComponentObtainingGraphicsFrom(Component) : boolean_\l
	+ paint(Graphics) : void\l
	+ setDoubleBuffered(boolean) : void\l
	 _getWriteObjCounter(JComponent) : byte_\l
	+ getAutoscrolls() : boolean\l
	+ requestDefaultFocus() : boolean\l
	+ getBounds(Rectangle) : Rectangle\l
	+ setPreferredSize(Dimension) : void\l
	# paramString() : String\l
	+ setInputMap(int, InputMap) : void\l
	+ enable() : void\l
	+ getMinimumSize() : Dimension\l
	+ paintImmediately(Rectangle) : void\l
	+ paintImmediately(int, int, int, int) : void\l
	+ isManagingFocus() : boolean\l
	+ getAlignmentY() : float\l
	 _getManagingFocusForwardTraversalKeys() : Set\<KeyStroke\>_\l
	+ setAutoscrolls(boolean) : void\l
	# printComponent(Graphics) : void\l
	# processMouseEvent(MouseEvent) : void\l
	+ getAlignmentX() : float\l
	- getObscuredState(int, int, int, int, int) : int\l
	+ setAlignmentY(float) : void\l
	+ firePropertyChange(String, boolean, boolean) : void\l
	+ firePropertyChange(String, char, char) : void\l
	+ firePropertyChange(String, int, int) : void\l
	+ isOptimizedDrawingEnabled() : boolean\l
	 _access400(JComponent) : AccessibleContext_\l
	# paintComponent(Graphics) : void\l
	 _getGraphicsInvoked(Component) : void_\l
	+ reshape(int, int, int, int) : void\l
	 setDropLocation(TransferHandlerDropLocation, Object, boolean) : Object\l
	+ setOpaque(boolean) : void\l
	+ setAlignmentX(float) : void\l
	# fireVetoableChange(String, Object, Object) : void\l
	- registerWithKeyboardManager(KeyStroke) : void\l
	- registerWithKeyboardManager(boolean) : void\l
	- readObject(ObjectInputStream) : void\l
	+ setComponentPopupMenu(JPopupMenu) : void\l
	+ setEnabled(boolean) : void\l
	+ contains(int, int) : boolean\l
	 paintToOffscreen(Graphics, int, int, int, int, int, int) : void\l
	+ unregisterKeyboardAction(KeyStroke) : void\l
	 paintForceDoubleBuffered(Graphics) : void\l
	+ setTransferHandler(TransferHandler) : void\l
	# processMouseMotionEvent(MouseEvent) : void\l
	 rectangleIsObscured(int, int, int, int) : boolean\l
	+ removeVetoableChangeListener(VetoableChangeListener) : void\l
	+ repaint(Rectangle) : void\l
	+ repaint(long, int, int, int, int) : void\l
	+ setMinimumSize(Dimension) : void\l
	+ getInputMap() : InputMap\l
	 getInputMap(int, boolean) : InputMap\l
	+ getInputMap(int) : InputMap\l
	+ getListeners(, , , EventListener\>, , Class\<\>) : \l
	+ getClientProperty(Object) : Object\l
	+ setRequestFocusEnabled(boolean) : void\l
	+ getMaximumSize() : Dimension\l
	 _getManagingFocusBackwardTraversalKeys() : Set\<KeyStroke\>_\l
	 alwaysOnTop() : boolean\l
	 setUIProperty(String, Object) : void\l
	+ getWidth() : int\l
	- deregisterNextFocusableComponent() : void\l
	+ isRequestFocusEnabled() : boolean\l
	+ getFontMetrics(Font) : FontMetrics\l
	 setCreatedDoubleBuffer(boolean) : void\l
	+ getHeight() : int\l
	 setPaintingChild(Component) : void\l
	+ setFocusTraversalKeys(int, Set\<AWTKeyStroke\>) : void\l
	+ getAncestorListeners() : AncestorListener\l
	+ getBaselineResizeBehavior() : ComponentBaselineResizeBehavior\l
	 _setWriteObjCounter(JComponent, byte) : void_\l
	+ isPaintingTile() : boolean\l
	+ setDebugGraphicsOptions(int) : void\l
	# printChildren(Graphics) : void\l
	+ isDoubleBuffered() : boolean\l
	 _access500(JComponent) : AccessibleContext_\l
	 _access100() : Object_\l
	+ getVerifyInputWhenFocusTarget() : boolean\l
	+ getInsets() : Insets\l
	+ getInsets(Insets) : Insets\l
	+ _getDefaultLocale() : Locale_\l
	+ isValidateRoot() : boolean\l
	+ hide() : void\l
	+ getPreferredSize() : Dimension\l
	+ addNotify() : void\l
	+ disable() : void\l
	+ getToolTipLocation(MouseEvent) : Point\l
	+ getToolTipText(MouseEvent) : String\l
	+ getToolTipText() : String\l
	+ getConditionForKeyStroke(KeyStroke) : int\l
	+ getBorder() : Border\l
	+ isPaintingForPrint() : boolean\l
	+ setToolTipText(String) : void\l
	# processKeyEvent(KeyEvent) : void\l
	 _computeVisibleRect(Component, Rectangle) : void_\l
	+ computeVisibleRect(Rectangle) : void\l
	+ setVerifyInputWhenFocusTarget(boolean) : void\l
	# getComponentGraphics(Graphics) : Graphics\l
	+ setActionMap(ActionMap) : void\l
	 superProcessMouseMotionEvent(MouseEvent) : void\l
	+ setInputVerifier(InputVerifier) : void\l
	+ setFont(Font) : void\l
	+ getNextFocusableComponent() : Component\l
	- getFlag(int) : boolean\l
	+ setInheritsPopupMenu(boolean) : void\l
	+ setVisible(boolean) : void\l
	 clientPropertyChanged(Object, Object, Object) : void\l
	 _access600() : Hashtable_\l
	- setFlag(int, boolean) : void\l
	+ putClientProperty(Object, Object) : void\l
	 _access200(JComponent) : AccessibleContext_\l
	- writeObject(ObjectOutputStream) : void\l
	 componentInputMapChanged(ComponentInputMap) : void\l
	# isPaintingOrigin() : boolean\l
	+ setNextFocusableComponent(Component) : void\l
	+ getActionMap() : ActionMap\l
	 getActionMap(boolean) : ActionMap\l
	 checkIfChildObscuredBySibling() : boolean\l
	 dropLocationForPoint(Point) : TransferHandlerDropLocation\l
	+ getTopLevelAncestor() : Container\l
	 compWriteObjectNotify() : void\l
	- _recycleRectangle(Rectangle) : void_\l
	+ revalidate() : void\l
	+ createToolTip() : JToolTip\l
	- uninstallUIAndProperties() : void\l
	# paintChildren(Graphics) : void\l
	+ grabFocus() : void\l
	+ getActionForKeyStroke(KeyStroke) : ActionListener\l
	+ _setDefaultLocale(Locale) : void_\l
	+ getPopupLocation(MouseEvent) : Point\l
	+ removeNotify() : void\l
	 shouldDebugGraphics() : int\l
	+ requestFocus() : void\l
	+ requestFocus(boolean) : boolean\l
	+ addVetoableChangeListener(VetoableChangeListener) : void\l
	 _safelyGetGraphics(Component, Component) : Graphics_\l
	 _safelyGetGraphics(Component) : Graphics_\l
	+ getRegisteredKeyStrokes() : KeyStroke\l
	+ scrollRectToVisible(Rectangle) : void\l
	- getClientProperties() : ArrayTable\l
	+ removeAncestorListener(AncestorListener) : void\l
	+ getInheritsPopupMenu() : boolean\l
	- _fetchRectangle() : Rectangle_\l
	+ updateUI() : void\l
	+ update(Graphics) : void\l
	+ getUIClassID() : String\l
	+ setMaximumSize(Dimension) : void\l
	+ resetKeyboardActions() : void\l
	+ setBackground(Color) : void\l
	+ printAll(Graphics) : void\l
	+ getVetoableChangeListeners() : VetoableChangeListener\l
	# processComponentKeyEvent(KeyEvent) : void\l
	# paintBorder(Graphics) : void\l
	# processKeyBinding(KeyStroke, KeyEvent, int, boolean) : boolean\l
	+ getGraphics() : Graphics\l
	- registerNextFocusableComponent() : void\l
	- registerNextFocusableComponent(Component) : void\l
	+ getVisibleRect() : Rectangle\l
	 _processKeyBindingsForAllComponents(KeyEvent, Container, boolean) : boolean_\l
	# printBorder(Graphics) : void\l
	- unregisterWithKeyboardManager() : void\l
	- unregisterWithKeyboardManager(KeyStroke) : void\l
	 getCreatedDoubleBuffer() : boolean\l
	 _access300(JComponent) : AccessibleContext_\l
	 isPainting() : boolean\l
	+ registerKeyboardAction(ActionListener, KeyStroke, int) : void\l
	+ registerKeyboardAction(ActionListener, String, KeyStroke, int) : void\l
	+ setForeground(Color) : void\l
	+ _isLightweightComponent(Component) : boolean_\l
	+ addAncestorListener(AncestorListener) : void\l
	 processKeyBindings(KeyEvent, boolean) : boolean\l
	- adjustPaintFlags() : void\l
	+ getComponentPopupMenu() : JPopupMenu\l
	# setUI(ComponentUI) : void\l
	+ print(Graphics) : void\l
	+ getBaseline(int, int) : int\l
	+ getSize(Dimension) : Dimension\l
	+ getX() : int\l
	+ getY() : int\l
	+ setBorder(Border) : void\l
	- lambdarevalidate59() : void\l
	 dndDone() : void\l
	- getAncestorNotifier() : AncestorNotifier\l
	+ getTransferHandler() : TransferHandler\l
	+ getDebugGraphicsOptions() : int\l
	 _paintImmediately(int, int, int, int) : void\l
	}"
	style = "filled"
fillcolor = "green"]
legendaryclientDisplayDriver [
	label = "{legendary.client::DisplayDriver|
	|
	+ _go() : void_\l
	}"
	]
legendaryvisitorITraverser [
	label = "{\<\<interface\>\>\nlegendary.visitor::ITraverser|
	|
	+ accept(IVisitor) : void\l
	}"
	]
legendaryInterfacesIPatternDetector [
	label = "{\<\<interface\>\>\nlegendary.Interfaces::IPatternDetector|
	|
	+ getPatternName() : String\l
	+ getKeyMap() : Map\<IClass, Set\<IClass\>\>\l
	+ getCandidates(IModel) : Set\<Set\<IClass\>\>\l
	+ getDecorated() : IPatternDetector\l
	+ detect(IModel) : Map\<Class\<IPattern\>Set\<IClass\>\>\l
	+ addDetector(IPatternDetector) : void\l
	}"
	]
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendaryClassesRelations->legendaryClassesRelations
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawteventContainerListener->javautilEventListener
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtdndDragGestureListener->javautilEventListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendarypatternsCompositeComponentPattern->legendarypatternsAbstractCompositePattern
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]legendarypatternsCompositeComponentPattern->legendarypatternsAbstractCompositePattern
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendarydetectorsCompositeDetector->legendaryInterfacesIModel
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendarydetectorsCompositeDetector->legendaryInterfacesIPatternDetector
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendarydetectorsCompositeDetector->legendaryInterfacesIClass
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendarydetectorsCompositeDetector->legendarydetectorsAbstractPatternDetector
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]legendarydetectorsCompositeDetector->legendarydetectorsAbstractPatternDetector
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryInterfacesIModel->legendaryClassesRelations
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryInterfacesIModel->legendaryInterfacesIClass
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryDisplayScreenCheckBoxModel->legendaryDisplayScreenCheckBoxNode
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendaryDisplayScreenCheckBoxModel->javaxswingtreeDefaultMutableTreeNode
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendaryDisplayScreenCheckBoxModel->legendaryInterfacesIPatternDetector
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendaryDisplayScreenCheckBoxModel->legendaryInterfacesIClass
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryvisitorIVisitor->legendaryvisitorVisitType
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryvisitorIVisitor->legendaryvisitorIVisitMethod
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryvisitorIVisitor->legendaryvisitorITraverser
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendaryDisplayScreenPatternDisplay->legendaryDisplayScreenImageProxy
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendaryDisplayScreenPatternDisplay->legendaryDisplayScreenPatternDisplay
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]legendarypatternsSingletonPattern->legendaryInterfacesIPattern
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<decorates\>\>"]legendarydetectorsAbstractPatternDetector->legendaryInterfacesIPatternDetector
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendarydetectorsAbstractPatternDetector->legendaryInterfacesIClass
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]legendarydetectorsAbstractPatternDetector->legendaryInterfacesIPatternDetector
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javautilCollection->javalangIterable
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawteventMouseWheelListener->javautilEventListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaxswingJFileChooser->javaxswingJFileChooser
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaxswingJFileChooser->javaawtComponent
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaxswingJFileChooser->javabeansPropertyChangeListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<decorates\>\>"]javaxswingJFileChooser->javaxswingJComponent
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaxswingJFileChooser->javaxswingJComponent
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryInterfacesIClass->legendaryInterfacesIMethod
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryInterfacesIClass->legendaryInterfacesIField
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]legendarypatternsAbstractAdapterPattern->legendaryInterfacesIPattern
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendarypatternsDecoratorPattern->legendarypatternsAbstractDecoratorPattern
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]legendarypatternsDecoratorPattern->legendarypatternsAbstractDecoratorPattern
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaxswingtreeDefaultMutableTreeNode->javaxswingtreeDefaultMutableTreeNode
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<decorates\>\>"]javaxswingtreeDefaultMutableTreeNode->javaxswingtreeTreeNode
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<decorates\>\>"]javaxswingtreeDefaultMutableTreeNode->javaxswingtreeMutableTreeNode
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaxswingtreeDefaultMutableTreeNode->javaxswingtreeMutableTreeNode
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawteventMouseMotionListener->javautilEventListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendarypatternsAdapterPattern->legendarypatternsAbstractAdapterPattern
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]legendarypatternsAdapterPattern->legendarypatternsAbstractAdapterPattern
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendaryvisitorVisitType->legendaryvisitorVisitType
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryInterfacesIPatternDetector->legendaryInterfacesIModel
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryInterfacesIPatternDetector->legendaryInterfacesIPatternDetector
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaxswingIcon->javaawtComponent
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendaryasmClassDeclarationVisitor->legendaryInterfacesIModel
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendaryasmClassDeclarationVisitor->legendaryInterfacesIClass
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryDisplayScreenDisplayFrame->legendaryDisplayScreenPatternSelector
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryDisplayScreenDisplayFrame->legendaryDisplayScreenDropdownMenuPanel
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendaryDisplayScreenDisplayFrame->legendaryDisplayScreenPatternDisplay
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendaryasmLegendaryClassMethodVisitor->legendaryInterfacesIModel
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendaryasmLegendaryClassMethodVisitor->legendaryInterfacesIMethod
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendaryasmLegendaryClassMethodVisitor->legendaryInterfacesIClass
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<adapts\>\>"]legendaryDisplayScreenImageProxy->javaxswingImageIcon
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]legendaryDisplayScreenImageProxy->javaxswingIcon
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendarypatternsAdapterTargetPattern->legendarypatternsAbstractAdapterPattern
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]legendarypatternsAdapterTargetPattern->legendarypatternsAbstractAdapterPattern
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaxswingButtonModel->javaawtItemSelectable
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendarymainScreenLegendaryProperties->legendarycommandsGVGenCommand
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendarymainScreenLegendaryProperties->legendarycommandsModelGenCommand
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendarymainScreenLegendaryProperties->legendarycommandsDetectorCommand
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendarymainScreenLegendaryProperties->legendaryInterfacesIModel
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendarymainScreenLegendaryProperties->legendaryInterfacesIPatternDetector
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendarymainScreenLegendaryProperties->legendarymainScreenLegendaryProperties
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendarymainScreenLegendaryProperties->legendaryInterfacesICommand
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendarymainScreenLegendaryProgressBar->legendarymainScreenLegendaryProgressBar
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaxswingtreeTreeNode->javaxswingtreeTreeNode
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryvisitorIVisitMethod->legendaryvisitorITraverser
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendarypatternsCompositeLeafPattern->legendarypatternsAbstractCompositePattern
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]legendarypatternsCompositeLeafPattern->legendarypatternsAbstractCompositePattern
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryClassesClassParser->legendaryClassesSDEditOutputStream
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryClassesClassParser->legendaryClassesGraphVizOutputStream
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendaryClassesClassParser->legendaryInterfacesIModel
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendaryClassesClassParser->legendaryClassesClassParser
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendaryClassesClassParser->legendaryInterfacesIPatternDetector
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawteventHierarchyListener->javautilEventListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javabeansPropertyChangeListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawtComponent
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawteventInputMethodListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawteventMouseWheelListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawteventFocusListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawteventMouseMotionListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawteventComponentListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawteventHierarchyListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawteventKeyListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawtContainer
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawteventHierarchyBoundsListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawteventMouseListener
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawteventInputMethodListener->javautilEventListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryClassesSDEditOutputStream->legendaryClassesSDEditOutputStream
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryClassesSDEditOutputStream->legendaryInterfacesIMethod
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryClassesSDEditOutputStream->legendaryvisitorVisitorAdapter
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendaryClassesSDEditOutputStream->legendaryInterfacesIModel
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendaryClassesSDEditOutputStream->legendaryvisitorIVisitor
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendarymainScreenDragAndDropPanel->legendarymainScreenLegendaryProperties
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryvisitorITraverser->legendaryvisitorIVisitor
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendarypatternsAdapteePattern->legendarypatternsAbstractAdapterPattern
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]legendarypatternsAdapteePattern->legendarypatternsAbstractAdapterPattern
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawteventComponentListener->javautilEventListener
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]legendarycommandsDetectorCommand->legendaryInterfacesICommand
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryDisplayScreenDropdownMenuPanel->javaxswingJFileChooser
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawteventFocusListener->javautilEventListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryClassesGraphVizOutputStream->legendaryInterfacesIModel
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryClassesGraphVizOutputStream->legendaryClassesGraphVizOutputStream
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryClassesGraphVizOutputStream->legendaryvisitorITraverser
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryClassesGraphVizOutputStream->legendaryvisitorVisitorAdapter
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendaryClassesGraphVizOutputStream->legendaryvisitorIVisitor
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendaryClassesGraphVizOutputStream->legendaryInterfacesIPattern
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendaryClassesGraphVizOutputStream->legendaryClassesRelations
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendaryClassesGraphVizOutputStream->legendaryInterfacesIClass
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendarycommandsModelGenCommand->legendaryClassesLegendaryModel
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]legendarycommandsModelGenCommand->legendaryInterfacesICommand
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendaryClassesLegendaryClass->legendaryInterfacesIField
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]legendaryClassesLegendaryClass->legendaryvisitorITraverser
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]legendaryClassesLegendaryClass->legendaryInterfacesIClass
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaxswingImageIcon->javaxswingImageIcon
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaxswingImageIcon->javaawtComponent
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaxswingImageIcon->javaxswingIcon
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawteventHierarchyBoundsListener->javautilEventListener
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]legendarypatternsAbstractCompositePattern->legendaryInterfacesIPattern
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryasmClassMethodVisitor->legendaryInterfacesIMethod
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryasmClassMethodVisitor->legendaryasmLegendaryClassMethodVisitor
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryasmClassMethodVisitor->legendaryClassesLegendaryMethod
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendaryasmClassMethodVisitor->legendaryInterfacesIModel
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendaryasmClassMethodVisitor->legendaryInterfacesIClass
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendaryvisitorLookupKey->legendaryvisitorVisitType
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]legendaryClassesLegendaryMethod->legendaryInterfacesIMethod
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]legendaryClassesLegendaryMethod->legendaryvisitorITraverser
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendarydetectorsDecoratorDetector->legendaryInterfacesIModel
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendarydetectorsDecoratorDetector->legendaryInterfacesIPatternDetector
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendarydetectorsDecoratorDetector->legendarydetectorsAbstractPatternDetector
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]legendarydetectorsDecoratorDetector->legendarydetectorsAbstractPatternDetector
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendarydetectorsAdapterDetector->legendaryInterfacesIModel
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendarydetectorsAdapterDetector->legendaryInterfacesIPatternDetector
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendarydetectorsAdapterDetector->legendarydetectorsAbstractPatternDetector
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]legendarydetectorsAdapterDetector->legendarydetectorsAbstractPatternDetector
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryDisplayScreenCheckBoxTree->legendaryDisplayScreenCheckBoxRenderer
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryDisplayScreenCheckBoxTree->legendaryDisplayScreenCheckBoxModel
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtContainer->javaawtContainer
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtContainer->javaawteventContainerListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<decorates\>\>"]javaawtContainer->javaawtComponent
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtContainer->javaawtComponent
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]legendaryClassesLegendaryField->legendaryvisitorITraverser
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]legendaryClassesLegendaryField->legendaryInterfacesIField
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendarydetectorsSingletonDetector->legendaryInterfacesIModel
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendarydetectorsSingletonDetector->legendaryInterfacesIPatternDetector
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendarydetectorsSingletonDetector->legendarydetectorsAbstractPatternDetector
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]legendarydetectorsSingletonDetector->legendarydetectorsAbstractPatternDetector
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javabeansVetoableChangeListener->javautilEventListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendaryvisitorVisitorAdapter->legendaryvisitorIVisitMethod
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendaryvisitorVisitorAdapter->legendaryvisitorLookupKey
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]legendaryvisitorVisitorAdapter->legendaryvisitorIVisitor
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtdndDragSourceMotionListener->javautilEventListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendarypatternsDecoratorComponentPattern->legendarypatternsAbstractDecoratorPattern
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]legendarypatternsDecoratorComponentPattern->legendarypatternsAbstractDecoratorPattern
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryDisplayScreenPatternSelector->legendaryDisplayScreenCheckBoxTree
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaniofilePath->javaniofilePath
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaniofilePath->javalangComparable
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaniofilePath->javalangIterable
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryasmClassFieldVisitor->legendaryInterfacesIField
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryasmClassFieldVisitor->legendaryClassesLegendaryField
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendaryasmClassFieldVisitor->legendaryInterfacesIModel
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendaryasmClassFieldVisitor->legendaryInterfacesIClass
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtWindow->javaawtWindow
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtWindow->javaawtContainer
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javabeansPropertyChangeListener->javautilEventListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendarymainScreenButtonPanel->javaxswingJFileChooser
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendarypatternsCompositePattern->legendarypatternsAbstractCompositePattern
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]legendarypatternsCompositePattern->legendarypatternsAbstractCompositePattern
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]legendarycommandsGVGenCommand->legendaryInterfacesICommand
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawteventKeyListener->javautilEventListener
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawteventMouseListener->javautilEventListener
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtdndDragSourceListener->javautilEventListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendaryClassesLegendaryModel->legendaryInterfacesIPattern
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendaryClassesLegendaryModel->legendaryClassesRelations
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendaryClassesLegendaryModel->legendaryInterfacesIClass
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]legendaryClassesLegendaryModel->legendaryInterfacesIModel
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]legendaryClassesLegendaryModel->legendaryvisitorITraverser
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaxswingtreeMutableTreeNode->javaxswingtreeMutableTreeNode
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaxswingtreeMutableTreeNode->javaxswingtreeTreeNode
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryasmDesignParser->legendaryInterfacesIModel
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryasmDesignParser->legendarydetectorsDecoratorDetector
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryasmDesignParser->legendaryClassesLegendaryClass
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryasmDesignParser->legendaryasmClassFieldVisitor
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryasmDesignParser->legendarydetectorsAdapterDetector
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryasmDesignParser->legendaryasmClassDeclarationVisitor
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryasmDesignParser->legendaryasmClassMethodVisitor
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryasmDesignParser->legendarydetectorsCompositeDetector
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryasmDesignParser->legendaryClassesLegendaryModel
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryasmDesignParser->legendarydetectorsSingletonDetector
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]legendarypatternsAbstractDecoratorPattern->legendaryInterfacesIPattern
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javautilQueue->javautilCollection
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<adapts\>\>"]legendaryDisplayScreenCheckBoxNode->legendaryDisplayScreenCheckBoxModel
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]legendaryDisplayScreenCheckBoxNode->legendaryInterfacesIClass
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]legendaryDisplayScreenCheckBoxNode->javaxswingtreeDefaultMutableTreeNode
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendarymainScreenMainScreen->legendarymainScreenButtonPanel
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendarymainScreenMainScreen->legendarymainScreenDragAndDropPanel
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaxswingJComponent->javaxswingJComponent
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaxswingJComponent->javabeansVetoableChangeListener
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaxswingJComponent->javaawtContainer
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]legendaryclientDisplayDriver->legendaryDisplayScreenDisplayFrame
}