digraph G{
	node [shape = "record"]
javaawtMenuBar [
	label = "{java.awt::MenuBar\n\<\<adaptee, adapter\>\>|
	 menus: Vector\<Menu\>\l
	 helpMenu: Menu\l
	- _base: String_\l
	- _nameCounter: int_\l
	- _serialVersionUID: long_\l
	- menuBarSerializedDataVersion: int\l
	|
	+ add(Menu) : Menu\l
	 constructComponentName() : String\l
	+ deleteShortcut(MenuShortcut) : void\l
	- writeObject(ObjectOutputStream) : void\l
	+ shortcuts() : Enumeration\<MenuShortcut\>\l
	- _initIDs() : void_\l
	+ countMenus() : int\l
	 getMenuImpl(int) : Menu\l
	+ getAccessibleContext() : AccessibleContext\l
	+ remove(MenuComponent) : void\l
	+ remove(int) : void\l
	 getMenuCountImpl() : int\l
	+ getShortcutMenuItem(MenuShortcut) : MenuItem\l
	- readObject(ObjectInputStream) : void\l
	 getAccessibleChildIndex(MenuComponent) : int\l
	+ getHelpMenu() : Menu\l
	+ addNotify() : void\l
	+ getMenu(int) : Menu\l
	 handleShortcut(KeyEvent) : boolean\l
	+ removeNotify() : void\l
	+ getMenuCount() : int\l
	+ setHelpMenu(Menu) : void\l
	}"
	style = "filled"
fillcolor = "red"]
javalangIterable [
	label = "{\<\<interface\>\>\njava.lang::Iterable\n\<\<component\>\>|
	|
	+ iterator() : Iterator\<\>\l
	+ spliterator() : Spliterator\<\>\l
	+ forEach(Consumer\<\>) : void\l
	}"
	style = "filled"
fillcolor = "green"]
javaawtJobAttributes [
	label = "{java.awt::JobAttributes|
	- copies: int\l
	- defaultSelection: JobAttributesDefaultSelectionType\l
	- destination: JobAttributesDestinationType\l
	- dialog: JobAttributesDialogType\l
	- fileName: String\l
	- fromPage: int\l
	- maxPage: int\l
	- minPage: int\l
	- multipleDocumentHandling: JobAttributesMultipleDocumentHandlingType\l
	- pageRanges: \l
	- prFirst: int\l
	- prLast: int\l
	- printer: String\l
	- sides: JobAttributesSidesType\l
	- toPage: int\l
	|
	+ setSidesToDefault() : void\l
	+ getDefaultSelection() : JobAttributesDefaultSelectionType\l
	+ getDestination() : JobAttributesDestinationType\l
	+ getMaxPage() : int\l
	+ setMultipleDocumentHandling(JobAttributesMultipleDocumentHandlingType) : void\l
	+ setSides(JobAttributesSidesType) : void\l
	+ setDestination(JobAttributesDestinationType) : void\l
	+ getPageRanges() : \l
	+ getMultipleDocumentHandling() : JobAttributesMultipleDocumentHandlingType\l
	+ setDefaultSelection(JobAttributesDefaultSelectionType) : void\l
	+ getDialog() : JobAttributesDialogType\l
	+ setFileName(String) : void\l
	+ setMultipleDocumentHandlingToDefault() : void\l
	+ hashCode() : int\l
	+ setCopies(int) : void\l
	+ setMinPage(int) : void\l
	+ getFileName() : String\l
	+ setMaxPage(int) : void\l
	+ setPageRanges(int[][]) : void\l
	+ getCopies() : int\l
	+ set(JobAttributes) : void\l
	+ setPrinter(String) : void\l
	+ getSides() : JobAttributesSidesType\l
	+ getFromPage() : int\l
	+ getToPage() : int\l
	+ setDialog(JobAttributesDialogType) : void\l
	+ setToPage(int) : void\l
	+ getPrinter() : String\l
	+ equals(Object) : boolean\l
	+ clone() : Object\l
	+ setCopiesToDefault() : void\l
	+ toString() : String\l
	+ setFromPage(int) : void\l
	+ getMinPage() : int\l
	}"
	]
javaawteventMouseListener [
	label = "{\<\<interface\>\>\njava.awt.event::MouseListener\n\<\<decorator, target\>\>|
	|
	+ mouseReleased(MouseEvent) : void\l
	+ mouseExited(MouseEvent) : void\l
	+ mouseEntered(MouseEvent) : void\l
	+ mouseClicked(MouseEvent) : void\l
	+ mousePressed(MouseEvent) : void\l
	}"
	style = "filled"
fillcolor = "green"]
javaawtFocusTraversalPolicy [
	label = "{java.awt::FocusTraversalPolicy\n\<\<adaptee\>\>|
	|
	+ getInitialComponent(Window) : Component\l
	+ getComponentBefore(Container, Component) : Component\l
	+ getFirstComponent(Container) : Component\l
	+ getLastComponent(Container) : Component\l
	+ getComponentAfter(Container, Component) : Component\l
	+ getDefaultComponent(Container) : Component\l
	}"
	style = "filled"
fillcolor = "red"]
javaawteventInputMethodListener [
	label = "{\<\<interface\>\>\njava.awt.event::InputMethodListener\n\<\<decorator, target\>\>|
	|
	+ inputMethodTextChanged(InputMethodEvent) : void\l
	+ caretPositionChanged(InputMethodEvent) : void\l
	}"
	style = "filled"
fillcolor = "green"]
javaawteventMouseWheelListener [
	label = "{\<\<interface\>\>\njava.awt.event::MouseWheelListener\n\<\<target, decorator\>\>|
	|
	+ mouseWheelMoved(MouseWheelEvent) : void\l
	}"
	style = "filled"
fillcolor = "red"]
javaawtKeyEventDispatcher [
	label = "{\<\<interface\>\>\njava.awt::KeyEventDispatcher\n\<\<component, Component\>\>|
	|
	+ dispatchKeyEvent(KeyEvent) : boolean\l
	}"
	style = "filled"
fillcolor = "green"]
javaxaccessibilityAccessible [
	label = "{\<\<interface\>\>\njavax.accessibility::Accessible\n\<\<target\>\>|
	|
	+ getAccessibleContext() : AccessibleContext\l
	}"
	style = "filled"
fillcolor = "red"]
javautilEventListener [
	label = "{\<\<interface\>\>\njava.util::EventListener\n\<\<component, adaptee\>\>|
	|
	}"
	style = "filled"
fillcolor = "green"]
javaawtLayoutManager [
	label = "{\<\<interface\>\>\njava.awt::LayoutManager\n\<\<adaptee\>\>|
	|
	+ preferredLayoutSize(Container) : Dimension\l
	+ removeLayoutComponent(Component) : void\l
	+ minimumLayoutSize(Container) : Dimension\l
	+ layoutContainer(Container) : void\l
	+ addLayoutComponent(String, Component) : void\l
	}"
	style = "filled"
fillcolor = "red"]
javaawtSystemTray [
	label = "{java.awt::SystemTray\n\<\<Singleton\>\>|
	- _systemTray: SystemTray_\l
	- currentIconID: int\l
	- peer: SystemTrayPeer\l
	- _EMPTY_TRAY_ARRAY: TrayIcon[]_\l
	|
	+ add(TrayIcon) : void\l
	+ getPropertyChangeListeners(String) : PropertyChangeListener\l
	- firePropertyChange(String, Object, Object) : void\l
	 _checkSystemTrayAllowed() : void_\l
	 _access000(SystemTray, String, Object, Object) : void_\l
	+ _getSystemTray() : SystemTray_\l
	+ _isSupported() : boolean_\l
	+ removePropertyChangeListener(String, PropertyChangeListener) : void\l
	+ remove(TrayIcon) : void\l
	+ getTrayIcons() : TrayIcon\l
	+ getTrayIconSize() : Dimension\l
	 addNotify() : void\l
	- _initializeSystemTrayIfNeeded() : void_\l
	- getCurrentChangeSupport() : PropertyChangeSupport\l
	+ addPropertyChangeListener(String, PropertyChangeListener) : void\l
	}"
	color = blue]
javaawtMenuComponent [
	label = "{java.awt::MenuComponent\n\<\<Component, target\>\>|
	 peer: MenuComponentPeer\l
	 parent: MenuContainer\l
	 appContext: AppContext\l
	 font: Font\l
	- name: String\l
	- nameExplicitlySet: boolean\l
	 newEventsOnly: boolean\l
	- acc: AccessControlContext\l
	 _actionListenerK: String_\l
	 _itemListenerK: String_\l
	- _serialVersionUID: long_\l
	 accessibleContext: AccessibleContext\l
	|
	+ setName(String) : void\l
	 getFont_NoClientCode() : Font\l
	 getAccessibleStateSet() : AccessibleStateSet\l
	+ getName() : String\l
	# processEvent(AWTEvent) : void\l
	- _initIDs() : void_\l
	# paramString() : String\l
	 getAccessibleChildIndex(MenuComponent) : int\l
	+ getPeer() : MenuComponentPeer\l
	+ setFont(Font) : void\l
	 constructComponentName() : String\l
	+ getParent() : MenuContainer\l
	+ dispatchEvent(AWTEvent) : void\l
	 getAccessControlContext() : AccessControlContext\l
	 getAccessibleIndexInParent() : int\l
	# getTreeLock() : Object\l
	+ getAccessibleContext() : AccessibleContext\l
	+ postEvent(Event) : boolean\l
	- readObject(ObjectInputStream) : void\l
	 eventEnabled(AWTEvent) : boolean\l
	+ removeNotify() : void\l
	+ getFont() : Font\l
	+ toString() : String\l
	 getParent_NoClientCode() : MenuContainer\l
	 dispatchEventImpl(AWTEvent) : void\l
	}"
	style = "filled"
fillcolor = "yellow"]
javaawtFontMetrics [
	label = "{java.awt::FontMetrics|
	- _DEFAULT_FRC: FontRenderContext_\l
	# font: Font\l
	- _serialVersionUID: long_\l
	|
	+ getStringBounds(String, Graphics) : Rectangle2D\l
	+ getStringBounds(String, int, int, Graphics) : Rectangle2D\l
	+ getStringBounds(char[], int, int, Graphics) : Rectangle2D\l
	+ getStringBounds(CharacterIterator, int, int, Graphics) : Rectangle2D\l
	+ charWidth(char) : int\l
	+ charWidth(int) : int\l
	+ getMaxDecent() : int\l
	+ getMaxCharBounds(Graphics) : Rectangle2D\l
	- _initIDs() : void_\l
	+ getMaxDescent() : int\l
	+ charsWidth(char[], int, int) : int\l
	+ getAscent() : int\l
	+ stringWidth(String) : int\l
	+ getHeight() : int\l
	+ getMaxAdvance() : int\l
	- myFRC(Graphics) : FontRenderContext\l
	+ getMaxAscent() : int\l
	+ getFontRenderContext() : FontRenderContext\l
	+ bytesWidth(byte[], int, int) : int\l
	+ getLineMetrics(String, Graphics) : LineMetrics\l
	+ getLineMetrics(String, int, int, Graphics) : LineMetrics\l
	+ getLineMetrics(char[], int, int, Graphics) : LineMetrics\l
	+ getLineMetrics(CharacterIterator, int, int, Graphics) : LineMetrics\l
	+ getFont() : Font\l
	+ toString() : String\l
	+ getDescent() : int\l
	+ getLeading() : int\l
	+ getWidths() : \l
	+ hasUniformLineMetrics() : boolean\l
	}"
	]
javaawtDefaultKeyboardFocusManager [
	label = "{java.awt::DefaultKeyboardFocusManager\n\<\<decorator\>\>|
	- _focusLog: PlatformLogger_\l
	- _NULL_WINDOW_WR: WeakReference\<Window\>_\l
	- _NULL_COMPONENT_WR: WeakReference\<Component\>_\l
	- realOppositeWindowWR: WeakReference\<Window\>\l
	- realOppositeComponentWR: WeakReference\<Component\>\l
	- inSendMessage: int\l
	- enqueuedKeyEvents: LinkedList\<KeyEvent\>\l
	- typeAheadMarkers: LinkedList\<DefaultKeyboardFocusManagerTypeAheadMarker\>\l
	- consumeNextKeyTyped: boolean\l
	|
	- consumeNextKeyTyped(KeyEvent) : void\l
	# dequeueKeyEvents(long, Component) : void\l
	+ focusNextComponent(Component) : void\l
	+ postProcessKeyEvent(KeyEvent) : boolean\l
	 _access110(DefaultKeyboardFocusManager) : int_\l
	+ dispatchKeyEvent(KeyEvent) : boolean\l
	- hasMarker(Component) : boolean\l
	- consumeProcessedKeyEvent(KeyEvent) : boolean\l
	- restoreFocus(Component, boolean) : boolean\l
	- restoreFocus(Window, Component, boolean) : boolean\l
	- restoreFocus(WindowEvent) : void\l
	- restoreFocus(FocusEvent, Window) : void\l
	+ processKeyEvent(Component, KeyEvent) : void\l
	- purgeStampedEvents(long, long) : void\l
	+ downFocusCycle(Container) : void\l
	- typeAheadAssertions(Component, AWTEvent) : boolean\l
	+ upFocusCycle(Component) : void\l
	- repostIfFollowsKeyEvents(WindowEvent) : boolean\l
	+ dispatchEvent(AWTEvent) : boolean\l
	# enqueueKeyEvents(long, Component) : void\l
	# discardKeyEvents(Component) : void\l
	 _access000(DefaultKeyboardFocusManager, KeyEvent) : void_\l
	- consumeTraversalKey(KeyEvent) : void\l
	 _sendMessage(Component, AWTEvent) : boolean_\l
	- getOwningFrameDialog(Window) : Window\l
	- pumpApprovedKeyEvents() : void\l
	 dumpMarkers() : void\l
	 _access108(DefaultKeyboardFocusManager) : int_\l
	- doRestoreFocus(Component, Component, boolean) : boolean\l
	 clearMarkers() : void\l
	+ focusPreviousComponent(Component) : void\l
	- preDispatchKeyEvent(KeyEvent) : boolean\l
	}"
	style = "filled"
fillcolor = "green"]
javaawteventActionListener [
	label = "{\<\<interface\>\>\njava.awt.event::ActionListener\n\<\<target, adaptee\>\>|
	|
	+ actionPerformed(ActionEvent) : void\l
	}"
	style = "filled"
fillcolor = "red"]
javaawtComponent [
	label = "{java.awt::Component\n\<\<component, adaptee, target, Component\>\>|
	- _log: PlatformLogger_\l
	- _eventLog: PlatformLogger_\l
	- _focusLog: PlatformLogger_\l
	- _mixingLog: PlatformLogger_\l
	 peer: ComponentPeer\l
	 parent: Container\l
	 appContext: AppContext\l
	 x: int\l
	 y: int\l
	 width: int\l
	 height: int\l
	 foreground: Color\l
	 background: Color\l
	 font: Font\l
	 peerFont: Font\l
	 cursor: Cursor\l
	 locale: Locale\l
	- graphicsConfig: GraphicsConfiguration\l
	 bufferStrategy: BufferStrategy\l
	 ignoreRepaint: boolean\l
	 visible: boolean\l
	 enabled: boolean\l
	- valid: boolean\l
	 dropTarget: DropTarget\l
	 popups: Vector\<PopupMenu\>\l
	- name: String\l
	- nameExplicitlySet: boolean\l
	- focusable: boolean\l
	- _FOCUS_TRAVERSABLE_UNKNOWN: int_\l
	- _FOCUS_TRAVERSABLE_DEFAULT: int_\l
	- _FOCUS_TRAVERSABLE_SET: int_\l
	- isFocusTraversableOverridden: int\l
	 focusTraversalKeys: Set\<AWTKeyStroke\>\l
	- _focusTraversalKeyPropertyNames: String[]_\l
	- focusTraversalKeysEnabled: boolean\l
	 _LOCK: Object_\l
	- acc: AccessControlContext\l
	 minSize: Dimension\l
	 minSizeSet: boolean\l
	 prefSize: Dimension\l
	 prefSizeSet: boolean\l
	 maxSize: Dimension\l
	 maxSizeSet: boolean\l
	 componentOrientation: ComponentOrientation\l
	 newEventsOnly: boolean\l
	 componentListener: ComponentListener\l
	 focusListener: FocusListener\l
	 hierarchyListener: HierarchyListener\l
	 hierarchyBoundsListener: HierarchyBoundsListener\l
	 keyListener: KeyListener\l
	 mouseListener: MouseListener\l
	 mouseMotionListener: MouseMotionListener\l
	 mouseWheelListener: MouseWheelListener\l
	 inputMethodListener: InputMethodListener\l
	 windowClosingException: RuntimeException\l
	 _actionListenerK: String_\l
	 _adjustmentListenerK: String_\l
	 _componentListenerK: String_\l
	 _containerListenerK: String_\l
	 _focusListenerK: String_\l
	 _itemListenerK: String_\l
	 _keyListenerK: String_\l
	 _mouseListenerK: String_\l
	 _mouseMotionListenerK: String_\l
	 _mouseWheelListenerK: String_\l
	 _textListenerK: String_\l
	 _ownedWindowK: String_\l
	 _windowListenerK: String_\l
	 _inputMethodListenerK: String_\l
	 _hierarchyListenerK: String_\l
	 _hierarchyBoundsListenerK: String_\l
	 _windowStateListenerK: String_\l
	 _windowFocusListenerK: String_\l
	 eventMask: long\l
	 _isInc: boolean_\l
	 _incRate: int_\l
	+ _TOP_ALIGNMENT: float_\l
	+ _CENTER_ALIGNMENT: float_\l
	+ _BOTTOM_ALIGNMENT: float_\l
	+ _LEFT_ALIGNMENT: float_\l
	+ _RIGHT_ALIGNMENT: float_\l
	- _serialVersionUID: long_\l
	- changeSupport: PropertyChangeSupport\l
	- objectLock: Object\l
	 isPacked: boolean\l
	- boundsOp: int\l
	- compoundShape: Region\l
	- mixingCutoutRegion: Region\l
	- isAddNotifyComplete: boolean\l
	 backgroundEraseDisabled: boolean\l
	 eventCache: EventQueueItem[]\l
	- coalescingEnabled: boolean\l
	- _coalesceMap: Map\<Class\<\> Boolean\>_\l
	- _coalesceEventsParams: Class[]_\l
	- _requestFocusController: RequestFocusController_\l
	- autoFocusTransferOnDisposal: boolean\l
	- componentSerializedDataVersion: int\l
	# accessibleContext: AccessibleContext\l
	 _assertionsDisabled: boolean_\l
	|
	- notifyNewBounds(boolean, boolean) : void\l
	 getFont_NoClientCode() : Font\l
	+ getLocation() : Point\l
	+ getLocation(Point) : Point\l
	+ requestFocusInWindow() : boolean\l
	 requestFocusInWindow(CausedFocusEventCause) : boolean\l
	 requestFocusInWindow(boolean, CausedFocusEventCause) : boolean\l
	# requestFocusInWindow(boolean) : boolean\l
	+ isOpaque() : boolean\l
	# processComponentEvent(ComponentEvent) : void\l
	# processEvent(AWTEvent) : void\l
	 isNonOpaqueForMixing() : boolean\l
	+ paint(Graphics) : void\l
	+ getInputMethodListeners() : InputMethodListener\l
	+ mouseDown(Event, int, int) : boolean\l
	+ getInputMethodRequests() : InputMethodRequests\l
	 mixOnValidating() : void\l
	# paramString() : String\l
	+ addHierarchyBoundsListener(HierarchyBoundsListener) : void\l
	+ getMinimumSize() : Dimension\l
	+ getAlignmentY() : float\l
	# processMouseEvent(MouseEvent) : void\l
	+ getAlignmentX() : float\l
	 getNextFocusCandidate() : Component\l
	+ dispatchEvent(AWTEvent) : void\l
	 _access400(Component) : Insets_\l
	 getBackBuffer() : Image\l
	+ reshape(int, int, int, int) : void\l
	# disableEvents(long) : void\l
	+ postEvent(Event) : boolean\l
	- readObject(ObjectInputStream) : void\l
	 createBufferStrategy(int, BufferCapabilities) : void\l
	 createBufferStrategy(int) : void\l
	+ contains(int, int) : boolean\l
	+ contains(Point) : boolean\l
	+ size() : Dimension\l
	 getContainingWindow() : Window\l
	+ enableInputMethods(boolean) : void\l
	+ mouseUp(Event, int, int) : boolean\l
	# processMouseMotionEvent(MouseEvent) : void\l
	 getParent_NoClientCode() : Container\l
	 clearCurrentFocusCycleRootOnHide() : void\l
	+ addComponentListener(ComponentListener) : void\l
	 getSiblingIndexAbove() : int\l
	+ setName(String) : void\l
	+ removeInputMethodListener(InputMethodListener) : void\l
	+ removeHierarchyListener(HierarchyListener) : void\l
	 subtractAndApplyShapeBelowMe() : void\l
	+ getFontMetrics(Font) : FontMetrics\l
	 createHierarchyEvents(int, Component, Container, long, boolean) : int\l
	+ getHeight() : int\l
	 getNormalShape() : Region\l
	+ getBaselineResizeBehavior() : ComponentBaselineResizeBehavior\l
	+ getIgnoreRepaint() : boolean\l
	+ removeMouseWheelListener(MouseWheelListener) : void\l
	 canBeFocusOwner() : boolean\l
	+ getPeer() : ComponentPeer\l
	- isRequestFocusAccepted(boolean, boolean, CausedFocusEventCause) : boolean\l
	+ applyComponentOrientation(ComponentOrientation) : void\l
	+ validate() : void\l
	 applyCurrentShape() : void\l
	 eventTypeEnabled(int) : boolean\l
	+ getParent() : Container\l
	 _access500(Class) : boolean_\l
	+ isMinimumSizeSet() : boolean\l
	 applyCompoundShape(Region) : void\l
	+ setComponentOrientation(ComponentOrientation) : void\l
	 autoProcessMouseWheel(MouseWheelEvent) : void\l
	+ setBounds(Rectangle) : void\l
	+ setBounds(int, int, int, int) : void\l
	 isRecursivelyVisible() : boolean\l
	 isMixingNeeded() : boolean\l
	 lightweightPaint(Graphics) : void\l
	- applyCurrentShapeBelowMe() : void\l
	 dispatchMouseWheelToAncestor(MouseWheelEvent) : boolean\l
	- getAppliedShape() : Region\l
	+ addNotify() : void\l
	+ addInputMethodListener(InputMethodListener) : void\l
	+ getFocusCycleRootAncestor() : Container\l
	+ toString() : String\l
	 invalidateParent() : void\l
	+ getName() : String\l
	 getFocusTraversalKeys_NoIDCheck(int) : Set\<AWTKeyStroke\>\l
	 areInputMethodsEnabled() : boolean\l
	+ isFocusTraversable() : boolean\l
	+ inside(int, int) : boolean\l
	# processKeyEvent(KeyEvent) : void\l
	+ getInputContext() : InputContext\l
	+ getFocusTraversalKeys(int) : Set\<AWTKeyStroke\>\l
	+ nextFocus() : void\l
	+ isCursorSet() : boolean\l
	+ getMouseWheelListeners() : MouseWheelListener\l
	+ doLayout() : void\l
	+ removeMouseMotionListener(MouseMotionListener) : void\l
	+ setVisible(boolean) : void\l
	+ add(PopupMenu) : void\l
	 constructComponentName() : String\l
	 clearMostRecentFocusOwnerOnHide() : void\l
	+ removeKeyListener(KeyListener) : void\l
	# processInputMethodEvent(InputMethodEvent) : void\l
	 getAccessibleIndexInParent() : int\l
	+ isVisible() : boolean\l
	+ setDropTarget(DropTarget) : void\l
	+ list() : void\l
	+ list(PrintWriter, int) : void\l
	+ list(PrintWriter) : void\l
	+ list(PrintStream, int) : void\l
	+ list(PrintStream) : void\l
	+ removePropertyChangeListener(String, PropertyChangeListener) : void\l
	+ removePropertyChangeListener(PropertyChangeListener) : void\l
	- _isCoalesceEventsOverriden(Class\<\>) : boolean_\l
	+ revalidate() : void\l
	+ removeNotify() : void\l
	 setAutoFocusTransferOnDisposal(boolean) : void\l
	 clearLightweightDispatcherOnRemove(Component) : void\l
	 relocateComponent() : void\l
	 updateZOrder() : void\l
	+ gotFocus(Event, Object) : boolean\l
	 mixOnShowing() : void\l
	+ handleEvent(Event) : boolean\l
	+ isForegroundSet() : boolean\l
	+ show() : void\l
	+ show(boolean) : void\l
	+ update(Graphics) : void\l
	# processFocusEvent(FocusEvent) : void\l
	+ setMaximumSize(Dimension) : void\l
	# coalesceEvents(AWTEvent, AWTEvent) : AWTEvent\l
	+ remove(MenuComponent) : void\l
	+ imageUpdate(Image, int, int, int, int, int) : boolean\l
	+ addMouseWheelListener(MouseWheelListener) : void\l
	 printHeavyweightComponents(Graphics) : void\l
	+ checkImage(Image, ImageObserver) : int\l
	+ checkImage(Image, int, int, ImageObserver) : int\l
	 getObjectLock() : Object\l
	+ addKeyListener(KeyListener) : void\l
	+ getComponentListeners() : ComponentListener\l
	+ isMaximumSizeSet() : boolean\l
	+ addPropertyChangeListener(String, PropertyChangeListener) : void\l
	+ addPropertyChangeListener(PropertyChangeListener) : void\l
	- location_NoClientCode() : Point\l
	+ getCursor() : Cursor\l
	 adjustListeningChildrenOnParent(long, int) : void\l
	+ createImage(int, int) : Image\l
	+ createImage(ImageProducer) : Image\l
	+ mouseMove(Event, int, int) : boolean\l
	+ areFocusTraversalKeysSet(int) : boolean\l
	+ getKeyListeners() : KeyListener\l
	 checkWindowClosingException() : boolean\l
	+ layout() : void\l
	+ getBaseline(int, int) : int\l
	+ print(Graphics) : void\l
	+ getFocusListeners() : FocusListener\l
	+ resize(Dimension) : void\l
	+ resize(int, int) : void\l
	+ createVolatileImage(int, int) : VolatileImage\l
	+ createVolatileImage(int, int, ImageCapabilities) : VolatileImage\l
	+ location() : Point\l
	+ lostFocus(Event, Object) : boolean\l
	+ getDropTarget() : DropTarget\l
	+ keyDown(Event, int) : boolean\l
	+ getLocale() : Locale\l
	 subtractAndApplyShape(Region) : void\l
	+ getHierarchyBoundsListeners() : HierarchyBoundsListener\l
	 getOpaqueShape() : Region\l
	 setGraphicsConfiguration(GraphicsConfiguration) : void\l
	+ getBounds() : Rectangle\l
	+ getBounds(Rectangle) : Rectangle\l
	+ setPreferredSize(Dimension) : void\l
	+ enable() : void\l
	+ enable(boolean) : void\l
	 getCursor_NoClientCode() : Cursor\l
	+ getMousePosition() : Point\l
	 postsOldMouseEvents() : boolean\l
	+ action(Event, Object) : boolean\l
	 countHierarchyMembers() : int\l
	+ firePropertyChange(String, byte, byte) : void\l
	# firePropertyChange(String, boolean, boolean) : void\l
	+ firePropertyChange(String, short, short) : void\l
	# firePropertyChange(String, Object, Object) : void\l
	+ firePropertyChange(String, double, double) : void\l
	+ firePropertyChange(String, float, float) : void\l
	+ firePropertyChange(String, char, char) : void\l
	# firePropertyChange(String, int, int) : void\l
	+ firePropertyChange(String, long, long) : void\l
	 getAccessControlContext() : AccessControlContext\l
	 getContainer() : Container\l
	 _access002(Component, Region) : Region_\l
	+ addMouseMotionListener(MouseMotionListener) : void\l
	 getBoundsOp() : int\l
	+ setFocusable(boolean) : void\l
	+ getComponentOrientation() : ComponentOrientation\l
	+ getTreeLock() : Object\l
	+ isBackgroundSet() : boolean\l
	+ addHierarchyListener(HierarchyListener) : void\l
	- doSwingSerialization() : void\l
	+ setEnabled(boolean) : void\l
	 revalidateSynchronously() : void\l
	+ isLightweight() : boolean\l
	+ isEnabled() : boolean\l
	+ minimumSize() : Dimension\l
	 areBoundsValid() : boolean\l
	+ bounds() : Rectangle\l
	 numListening(long) : int\l
	 _isInstanceOf(Object, String) : boolean_\l
	 containsFocus() : boolean\l
	 isSameOrAncestorOf(Component, boolean) : boolean\l
	+ repaint() : void\l
	+ repaint(long) : void\l
	+ repaint(int, int, int, int) : void\l
	+ repaint(long, int, int, int, int) : void\l
	+ getMouseMotionListeners() : MouseMotionListener\l
	+ setMinimumSize(Dimension) : void\l
	+ transferFocus() : void\l
	 transferFocus(boolean) : boolean\l
	+ getListeners(, , , EventListener\>, , Class\<\>) : \l
	 getAccessibleStateSet() : AccessibleStateSet\l
	 updateGraphicsData(GraphicsConfiguration) : boolean\l
	+ getMaximumSize() : Dimension\l
	 isVisible_NoClientCode() : boolean\l
	+ getLocationOnScreen() : Point\l
	+ keyUp(Event, int) : boolean\l
	+ getWidth() : int\l
	 pointRelativeToComponent(Point) : Point\l
	- reshapeNativePeer(int, int, int, int, int) : void\l
	+ paintAll(Graphics) : void\l
	 paintHeavyweightComponents(Graphics) : void\l
	+ setFocusTraversalKeys(int, Set\<AWTKeyStroke\>) : void\l
	+ hasFocus() : boolean\l
	+ isPreferredSizeSet() : boolean\l
	+ isDoubleBuffered() : boolean\l
	+ getColorModel() : ColorModel\l
	# processHierarchyEvent(HierarchyEvent) : void\l
	+ getPropertyChangeListeners() : PropertyChangeListener\l
	+ getPropertyChangeListeners(String) : PropertyChangeListener\l
	 _access100(Component) : Point_\l
	+ isValid() : boolean\l
	 mixOnZOrderChanging(int, int) : void\l
	 mixOnHiding(boolean) : void\l
	+ getFocusTraversalKeysEnabled() : boolean\l
	 invalidateIfValid() : void\l
	 setFocusTraversalKeys_NoIDCheck(int, Set\<AWTKeyStroke\>) : void\l
	+ hide() : void\l
	+ getPreferredSize() : Dimension\l
	 eventEnabled(AWTEvent) : boolean\l
	+ disable() : void\l
	 isFocusTraversableOverridden() : boolean\l
	+ prepareImage(Image, ImageObserver) : boolean\l
	+ prepareImage(Image, int, int, ImageObserver) : boolean\l
	 updateCursorImmediately() : void\l
	+ isFocusable() : boolean\l
	 getLocationOnScreen_NoTreeLock() : Point\l
	 setBoundsOp(int) : void\l
	- _initIDs() : void_\l
	 isEnabledImpl() : boolean\l
	+ mouseExit(Event, int, int) : boolean\l
	+ getHierarchyListeners() : HierarchyListener\l
	+ isShowing() : boolean\l
	+ mouseEnter(Event, int, int) : boolean\l
	 getSiblingIndexBelow() : int\l
	+ mouseDrag(Event, int, int) : boolean\l
	+ preferredSize() : Dimension\l
	 checkTreeLock() : void\l
	+ getMouseListeners() : MouseListener\l
	 getHWPeerAboveMe() : ComponentPeer\l
	+ setFont(Font) : void\l
	- getInsets_NoClientCode() : Insets\l
	- writeObject(ObjectOutputStream) : void\l
	 getTraversalRoot() : Container\l
	 isAutoFocusTransferOnDisposal() : boolean\l
	 getLocationOnWindow() : Point\l
	+ deliverEvent(Event) : void\l
	 getToolkitImpl() : Toolkit\l
	+ getForeground() : Color\l
	 getNativeContainer() : Container\l
	 mixOnReshaping() : void\l
	 lightweightPrint(Graphics) : void\l
	 findUnderMouseInWindow(PointerInfo) : Component\l
	+ getFont() : Font\l
	+ setCursor(Cursor) : void\l
	+ getGraphicsConfiguration() : GraphicsConfiguration\l
	+ isDisplayable() : boolean\l
	+ setLocale(Locale) : void\l
	+ removeComponentListener(ComponentListener) : void\l
	- calculateCurrentShape() : Region\l
	+ requestFocus() : void\l
	 requestFocus(CausedFocusEventCause) : boolean\l
	 requestFocus(boolean, CausedFocusEventCause) : boolean\l
	# requestFocus(boolean) : boolean\l
	+ locate(int, int) : Component\l
	+ addFocusListener(FocusListener) : void\l
	 initializeFocusTraversalKeys() : void\l
	+ getComponentAt(int, int) : Component\l
	+ getComponentAt(Point) : Component\l
	# processHierarchyBoundsEvent(HierarchyEvent) : void\l
	 _setRequestFocusController(RequestFocusController) : void_\l
	+ isFocusCycleRoot(Container) : boolean\l
	+ setFocusTraversalKeysEnabled(boolean) : void\l
	+ setBackground(Color) : void\l
	+ printAll(Graphics) : void\l
	+ getToolkit() : Toolkit\l
	+ transferFocusUpCycle() : void\l
	+ isFontSet() : boolean\l
	+ setSize(Dimension) : void\l
	+ setSize(int, int) : void\l
	- repaintParentIfNeeded(int, int, int, int) : void\l
	+ setLocation(int, int) : void\l
	+ setLocation(Point) : void\l
	 isCoalescingEnabled() : boolean\l
	 requestFocusHelper(boolean, boolean) : boolean\l
	 requestFocusHelper(boolean, boolean, CausedFocusEventCause) : boolean\l
	 checkGD(String) : void\l
	+ getGraphics() : Graphics\l
	+ setIgnoreRepaint(boolean) : void\l
	+ removeFocusListener(FocusListener) : void\l
	# enableEvents(long) : void\l
	+ transferFocusBackward() : void\l
	 transferFocusBackward(boolean) : boolean\l
	 getGraphicsConfiguration_NoClientCode() : GraphicsConfiguration\l
	+ move(int, int) : void\l
	+ setForeground(Color) : void\l
	+ invalidate() : void\l
	 getBufferStrategy() : BufferStrategy\l
	+ getAccessibleContext() : AccessibleContext\l
	- checkCoalescing() : boolean\l
	+ isFocusOwner() : boolean\l
	+ getSize(Dimension) : Dimension\l
	+ getSize() : Dimension\l
	+ getX() : int\l
	 getGraphics_NoClientCode() : Graphics\l
	+ getY() : int\l
	+ removeHierarchyBoundsListener(HierarchyBoundsListener) : void\l
	# processMouseWheelEvent(MouseWheelEvent) : void\l
	 canBeFocusOwnerRecursively() : boolean\l
	+ removeMouseListener(MouseListener) : void\l
	+ getBackground() : Color\l
	 dispatchEventImpl(AWTEvent) : void\l
	+ addMouseListener(MouseListener) : void\l
	}"
	style = "filled"
fillcolor = "green"]
javaawtModalEventFilter [
	label = "{java.awt::ModalEventFilter\n\<\<adaptee\>\>|
	# modalDialog: Dialog\l
	# disabled: boolean\l
	|
	 getModalDialog() : Dialog\l
	# acceptWindow(Window) : EventFilterFilterAction\l
	 disable() : void\l
	+ acceptEvent(AWTEvent) : EventFilterFilterAction\l
	 compareTo(ModalEventFilter) : int\l
	 _createFilterForDialog(Dialog) : ModalEventFilter_\l
	}"
	style = "filled"
fillcolor = "red"]
javaawtRadialGradientPaintContext [
	label = "{java.awt::RadialGradientPaintContext|
	- isSimpleFocus: boolean\l
	- isNonCyclic: boolean\l
	- radius: float\l
	- centerX: float\l
	- centerY: float\l
	- focusX: float\l
	- focusY: float\l
	- radiusSq: float\l
	- constA: float\l
	- constB: float\l
	- gDeltaDelta: float\l
	- trivial: float\l
	- _SCALEBACK: float_\l
	- _SQRT_LUT_SIZE: int_\l
	- _sqrtLut: float[]_\l
	|
	- cyclicCircularGradientFillRaster(int[], int, int, int, int, int, int) : void\l
	- simpleNonCyclicFillRaster(int[], int, int, int, int, int, int) : void\l
	# fillRaster(int[], int, int, int, int, int, int) : void\l
	}"
	]
javaawtGraphics2D [
	label = "{java.awt::Graphics2D|
	|
	+ rotate(double) : void\l
	+ rotate(double, double, double) : void\l
	+ getStroke() : Stroke\l
	+ drawRenderedImage(RenderedImage, AffineTransform) : void\l
	+ getRenderingHint(RenderingHintsKey) : Object\l
	+ getRenderingHints() : RenderingHints\l
	+ scale(double, double) : void\l
	+ drawRenderableImage(RenderableImage, AffineTransform) : void\l
	+ setBackground(Color) : void\l
	+ drawString(AttributedCharacterIterator, float, float) : void\l
	+ drawString(AttributedCharacterIterator, int, int) : void\l
	+ drawString(String, float, float) : void\l
	+ drawString(String, int, int) : void\l
	+ translate(int, int) : void\l
	+ translate(double, double) : void\l
	+ hit(Rectangle, Shape, boolean) : boolean\l
	+ transform(AffineTransform) : void\l
	+ getDeviceConfiguration() : GraphicsConfiguration\l
	+ draw3DRect(int, int, int, int, boolean) : void\l
	+ drawGlyphVector(GlyphVector, float, float) : void\l
	+ setTransform(AffineTransform) : void\l
	+ getFontRenderContext() : FontRenderContext\l
	+ setComposite(Composite) : void\l
	+ fill3DRect(int, int, int, int, boolean) : void\l
	+ setStroke(Stroke) : void\l
	+ getTransform() : AffineTransform\l
	+ getPaint() : Paint\l
	+ setPaint(Paint) : void\l
	+ setRenderingHint(RenderingHintsKey, Object) : void\l
	+ shear(double, double) : void\l
	+ draw(Shape) : void\l
	+ fill(Shape) : void\l
	+ getComposite() : Composite\l
	+ drawImage(Image, AffineTransform, ImageObserver) : boolean\l
	+ drawImage(BufferedImage, BufferedImageOp, int, int) : void\l
	+ setRenderingHints(Map\<\>) : void\l
	+ addRenderingHints(Map\<\>) : void\l
	+ getBackground() : Color\l
	+ clip(Shape) : void\l
	}"
	]
javaawtCheckboxMenuItem [
	label = "{java.awt::CheckboxMenuItem\n\<\<Leaf\>\>|
	 state: boolean\l
	 itemListener: ItemListener\l
	- _base: String_\l
	- _nameCounter: int_\l
	- _serialVersionUID: long_\l
	- checkboxMenuItemSerializedDataVersion: int\l
	|
	+ getListeners(, , , EventListener\>, , Class\<\>) : \l
	 doMenuEvent(long, int) : void\l
	 constructComponentName() : String\l
	- writeObject(ObjectOutputStream) : void\l
	+ removeItemListener(ItemListener) : void\l
	# processEvent(AWTEvent) : void\l
	- _initIDs() : void_\l
	+ getSelectedObjects() : Object\l
	# processItemEvent(ItemEvent) : void\l
	+ getAccessibleContext() : AccessibleContext\l
	- readObject(ObjectInputStream) : void\l
	+ paramString() : String\l
	+ getState() : boolean\l
	+ addNotify() : void\l
	 eventEnabled(AWTEvent) : boolean\l
	+ setState(boolean) : void\l
	+ addItemListener(ItemListener) : void\l
	+ getItemListeners() : ItemListener\l
	}"
	style = "filled"
fillcolor = "yellow"]
javaawtGradientPaint [
	label = "{java.awt::GradientPaint\n\<\<adapter\>\>|
	 p1: Point2DFloat\l
	 p2: Point2DFloat\l
	 color1: Color\l
	 color2: Color\l
	 cyclic: boolean\l
	|
	+ getColor2() : Color\l
	+ getColor1() : Color\l
	+ getPoint1() : Point2D\l
	+ isCyclic() : boolean\l
	+ getPoint2() : Point2D\l
	+ createContext(ColorModel, Rectangle, Rectangle2D, AffineTransform, RenderingHints) : PaintContext\l
	+ getTransparency() : int\l
	}"
	style = "filled"
fillcolor = "red"]
javaawteventWindowStateListener [
	label = "{\<\<interface\>\>\njava.awt.event::WindowStateListener\n\<\<decorator, target\>\>|
	|
	+ windowStateChanged(WindowEvent) : void\l
	}"
	style = "filled"
fillcolor = "green"]
javalangrefSoftReference [
	label = "{java.lang.ref::SoftReference\n\<\<adaptee\>\>|
	- _clock: long_\l
	- timestamp: long\l
	|
	+ get() : \l
	}"
	style = "filled"
fillcolor = "red"]
javaawtGraphicsEnvironment [
	label = "{java.awt::GraphicsEnvironment|
	- _localEnv: GraphicsEnvironment_\l
	- _headless: Boolean_\l
	- _defaultHeadless: Boolean_\l
	|
	+ _isHeadless() : boolean_\l
	+ getDefaultScreenDevice() : GraphicsDevice\l
	 _access102(Boolean) : Boolean_\l
	 _access002(Boolean) : Boolean_\l
	+ preferProportionalFonts() : void\l
	+ getScreenDevices() : GraphicsDevice\l
	+ preferLocaleFonts() : void\l
	+ getCenterPoint() : Point\l
	+ getAvailableFontFamilyNames() : String\l
	+ getAvailableFontFamilyNames(Locale) : String\l
	+ isHeadlessInstance() : boolean\l
	 _getHeadlessMessage() : String_\l
	+ getMaximumWindowBounds() : Rectangle\l
	- _getHeadlessProperty() : boolean_\l
	 _checkHeadless() : void_\l
	+ createGraphics(BufferedImage) : Graphics2D\l
	- _createGE() : GraphicsEnvironment_\l
	+ registerFont(Font) : boolean\l
	+ _getLocalGraphicsEnvironment() : GraphicsEnvironment_\l
	+ getAllFonts() : Font\l
	}"
	]
javaawteventItemListener [
	label = "{\<\<interface\>\>\njava.awt.event::ItemListener\n\<\<decorator, target\>\>|
	|
	+ itemStateChanged(ItemEvent) : void\l
	}"
	style = "filled"
fillcolor = "green"]
javabeansVetoableChangeListener [
	label = "{\<\<interface\>\>\njava.beans::VetoableChangeListener\n\<\<decorator\>\>|
	|
	+ vetoableChange(PropertyChangeEvent) : void\l
	}"
	style = "filled"
fillcolor = "green"]
javaawtBasicStroke [
	label = "{java.awt::BasicStroke|
	+ _JOIN_MITER: int_\l
	+ _JOIN_ROUND: int_\l
	+ _JOIN_BEVEL: int_\l
	+ _CAP_BUTT: int_\l
	+ _CAP_ROUND: int_\l
	+ _CAP_SQUARE: int_\l
	 width: float\l
	 join: int\l
	 cap: int\l
	 miterlimit: float\l
	 dash: float[]\l
	 dash_phase: float\l
	|
	+ getEndCap() : int\l
	+ getMiterLimit() : float\l
	+ getDashPhase() : float\l
	+ createStrokedShape(Shape) : Shape\l
	+ getLineWidth() : float\l
	+ hashCode() : int\l
	+ equals(Object) : boolean\l
	+ getDashArray() : \l
	+ getLineJoin() : int\l
	}"
	]
javaawtFont [
	label = "{java.awt::Font|
	- fRequestedAttributes: Hashtable\<Object, Object\>\l
	+ _DIALOG: String_\l
	+ _DIALOG_INPUT: String_\l
	+ _SANS_SERIF: String_\l
	+ _SERIF: String_\l
	+ _MONOSPACED: String_\l
	+ _PLAIN: int_\l
	+ _BOLD: int_\l
	+ _ITALIC: int_\l
	+ _ROMAN_BASELINE: int_\l
	+ _CENTER_BASELINE: int_\l
	+ _HANGING_BASELINE: int_\l
	+ _TRUETYPE_FONT: int_\l
	+ _TYPE1_FONT: int_\l
	# name: String\l
	# style: int\l
	# size: int\l
	# pointSize: float\l
	- peer: FontPeer\l
	- pData: long\l
	- font2DHandle: Font2DHandle\l
	- values: AttributeValues\l
	- hasLayoutAttributes: boolean\l
	- createdFont: boolean\l
	- nonIdentityTx: boolean\l
	- _identityTx: AffineTransform_\l
	- _serialVersionUID: long_\l
	- _RECOGNIZED_MASK: int_\l
	- _PRIMARY_MASK: int_\l
	- _SECONDARY_MASK: int_\l
	- _LAYOUT_MASK: int_\l
	- _EXTRA_MASK: int_\l
	- _ssinfo: float[]_\l
	 hash: int\l
	- fontSerializedDataVersion: int\l
	- flmref: SoftReference\<FontLineMetrics\>\l
	+ _LAYOUT_LEFT_TO_RIGHT: int_\l
	+ _LAYOUT_RIGHT_TO_LEFT: int_\l
	+ _LAYOUT_NO_START_CONTEXT: int_\l
	+ _LAYOUT_NO_LIMIT_CONTEXT: int_\l
	|
	+ getName() : String\l
	+ getMaxCharBounds(FontRenderContext) : Rectangle2D\l
	- _hasTempPermission() : boolean_\l
	+ isPlain() : boolean\l
	- _initIDs() : void_\l
	+ getMissingGlyphCode() : int\l
	+ _decode(String) : Font_\l
	+ isItalic() : boolean\l
	 getFamily_NoClientCode() : String\l
	- _createFont0(int, InputStream, CreatedFontTracker) : Font_\l
	+ getLineMetrics(String, FontRenderContext) : LineMetrics\l
	+ getLineMetrics(String, int, int, FontRenderContext) : LineMetrics\l
	+ getLineMetrics(char[], int, int, FontRenderContext) : LineMetrics\l
	+ getLineMetrics(CharacterIterator, int, int, FontRenderContext) : LineMetrics\l
	+ getTransform() : AffineTransform\l
	+ canDisplay(char) : boolean\l
	+ canDisplay(int) : boolean\l
	- getFont2D() : Font2D\l
	+ getAttributes() : Map\<TextAttribute, \>\l
	 _access202(Font, boolean) : boolean_\l
	 _access200(Font) : boolean_\l
	- writeObject(ObjectOutputStream) : void\l
	 _access000(Font) : Font2D_\l
	- readObject(ObjectInputStream) : void\l
	+ getNumGlyphs() : int\l
	+ canDisplayUpTo(String) : int\l
	+ canDisplayUpTo(char[], int, int) : int\l
	+ canDisplayUpTo(CharacterIterator, int, int) : int\l
	+ getItalicAngle() : float\l
	- getItalicAngle(FontRenderContext) : float\l
	+ _getFont(String) : Font_\l
	+ _getFont(Map\<AttributedCharacterIteratorAttribute, \>) : Font_\l
	+ _getFont(String, Font) : Font_\l
	+ isTransformed() : boolean\l
	- _applyStyle(int, AttributeValues) : void_\l
	+ getFontName() : String\l
	+ getFontName(Locale) : String\l
	+ getStyle() : int\l
	+ hashCode() : int\l
	+ getAvailableAttributes() : AttributedCharacterIteratorAttribute\l
	- initFromValues(AttributeValues) : void\l
	+ getBaselineFor(char) : byte\l
	+ getPeer() : FontPeer\l
	+ getSize2D() : float\l
	+ hasUniformLineMetrics() : boolean\l
	+ getStringBounds(String, FontRenderContext) : Rectangle2D\l
	+ getStringBounds(String, int, int, FontRenderContext) : Rectangle2D\l
	+ getStringBounds(char[], int, int, FontRenderContext) : Rectangle2D\l
	+ getStringBounds(CharacterIterator, int, int, FontRenderContext) : Rectangle2D\l
	 _access102(Font, Font2DHandle) : Font2DHandle_\l
	+ deriveFont(Map\<AttributedCharacterIteratorAttribute, \>) : Font\l
	+ deriveFont(float) : Font\l
	+ deriveFont(int, AffineTransform) : Font\l
	+ deriveFont(AffineTransform) : Font\l
	+ deriveFont(int, float) : Font\l
	+ deriveFont(int) : Font\l
	+ getPSName() : String\l
	+ hasLayoutAttributes() : boolean\l
	- _applyTransform(AffineTransform, AttributeValues) : void_\l
	+ isBold() : boolean\l
	 getPeer_NoClientCode() : FontPeer\l
	- getAttributeValues() : AttributeValues\l
	+ getSize() : int\l
	+ createGlyphVector(FontRenderContext, CharacterIterator) : GlyphVector\l
	+ createGlyphVector(FontRenderContext, int[]) : GlyphVector\l
	+ createGlyphVector(FontRenderContext, String) : GlyphVector\l
	+ createGlyphVector(FontRenderContext, char[]) : GlyphVector\l
	+ getFamily() : String\l
	+ getFamily(Locale) : String\l
	+ equals(Object) : boolean\l
	- defaultLineMetrics(FontRenderContext) : FontLineMetrics\l
	+ toString() : String\l
	+ _createFont(int, InputStream) : Font_\l
	+ _createFont(int, File) : Font_\l
	+ layoutGlyphVector(FontRenderContext, char[], int, int, int) : GlyphVector\l
	}"
	]
javaawtAWTException [
	label = "{java.awt::AWTException|
	- _serialVersionUID: long_\l
	|
	}"
	]
javaawtMultipleGradientPaint [
	label = "{java.awt::MultipleGradientPaint\n\<\<adapter\>\>|
	 transparency: int\l
	 fractions: float[]\l
	 colors: Color[]\l
	 gradientTransform: AffineTransform\l
	 cycleMethod: MultipleGradientPaintCycleMethod\l
	 colorSpace: MultipleGradientPaintColorSpaceType\l
	 model: ColorModel\l
	 normalizedIntervals: float[]\l
	 isSimpleLookup: boolean\l
	 gradients: SoftReference\<\>\l
	 gradient: SoftReference\<\>\l
	 fastGradientArraySize: int\l
	|
	+ getCycleMethod() : MultipleGradientPaintCycleMethod\l
	+ getColors() : Color\l
	+ getFractions() : \l
	+ getColorSpace() : MultipleGradientPaintColorSpaceType\l
	+ getTransform() : AffineTransform\l
	+ getTransparency() : int\l
	}"
	style = "filled"
fillcolor = "red"]
javaawtEventFilter [
	label = "{\<\<interface\>\>\njava.awt::EventFilter\n\<\<adaptee\>\>|
	|
	+ acceptEvent(AWTEvent) : EventFilterFilterAction\l
	}"
	style = "filled"
fillcolor = "red"]
javaawtWaitDispatchSupport [
	label = "{java.awt::WaitDispatchSupport\n\<\<adapter\>\>|
	- _log: PlatformLogger_\l
	- dispatchThread: EventDispatchThread\l
	- filter: EventFilter\l
	- extCondition: Conditional\l
	- condition: Conditional\l
	- interval: long\l
	- _timer: Timer_\l
	- timerTask: TimerTask\l
	- keepBlockingEDT: AtomicBoolean\l
	- keepBlockingCT: AtomicBoolean\l
	- wakingRunnable: Runnable\l
	|
	 _access700(WaitDispatchSupport) : EventDispatchThread_\l
	 _access402(WaitDispatchSupport, TimerTask) : TimerTask_\l
	 _access600(WaitDispatchSupport) : Conditional_\l
	 _access500(WaitDispatchSupport) : EventFilter_\l
	 _access400(WaitDispatchSupport) : TimerTask_\l
	 _access300(WaitDispatchSupport) : Conditional_\l
	 _access200(WaitDispatchSupport) : AtomicBoolean_\l
	 _access100(WaitDispatchSupport) : AtomicBoolean_\l
	 _access000() : PlatformLogger_\l
	- _getTreeLock() : Object_\l
	- wakeupEDT() : void\l
	 _access900() : Object_\l
	 _access800(WaitDispatchSupport) : void_\l
	+ exit() : boolean\l
	- _initializeTimer() : void_\l
	+ enter() : boolean\l
	}"
	style = "filled"
fillcolor = "red"]
javaawtSecondaryLoop [
	label = "{\<\<interface\>\>\njava.awt::SecondaryLoop\n\<\<adaptee, target\>\>|
	|
	+ exit() : boolean\l
	+ enter() : boolean\l
	}"
	style = "filled"
fillcolor = "red"]
javaawtImageCapabilities [
	label = "{java.awt::ImageCapabilities|
	- accelerated: boolean\l
	|
	+ isAccelerated() : boolean\l
	+ isTrueVolatile() : boolean\l
	+ clone() : Object\l
	}"
	]
javaawtAWTPermission [
	label = "{java.awt::AWTPermission|
	- _serialVersionUID: long_\l
	|
	}"
	]
javaawtMultipleGradientPaintCycleMethod [
	label = "{java.awt::MultipleGradientPaintCycleMethod\n\<\<adaptee\>\>|
	+ _NO_CYCLE: MultipleGradientPaintCycleMethod_\l
	+ _REFLECT: MultipleGradientPaintCycleMethod_\l
	+ _REPEAT: MultipleGradientPaintCycleMethod_\l
	- _VALUES: MultipleGradientPaintCycleMethod[]_\l
	|
	+ _valueOf(String) : MultipleGradientPaintCycleMethod_\l
	+ _values() : MultipleGradientPaintCycleMethod_\l
	}"
	style = "filled"
fillcolor = "red"]
javaawtPanel [
	label = "{java.awt::Panel\n\<\<decorator, Composite\>\>|
	- _base: String_\l
	- _nameCounter: int_\l
	- _serialVersionUID: long_\l
	|
	 constructComponentName() : String\l
	+ addNotify() : void\l
	+ getAccessibleContext() : AccessibleContext\l
	}"
	style = "filled"
fillcolor = "green"]
javaawteventWindowFocusListener [
	label = "{\<\<interface\>\>\njava.awt.event::WindowFocusListener\n\<\<decorator, target\>\>|
	|
	+ windowLostFocus(WindowEvent) : void\l
	+ windowGainedFocus(WindowEvent) : void\l
	}"
	style = "filled"
fillcolor = "green"]
javaawtItemSelectable [
	label = "{\<\<interface\>\>\njava.awt::ItemSelectable|
	|
	+ removeItemListener(ItemListener) : void\l
	+ getSelectedObjects() : Object\l
	+ addItemListener(ItemListener) : void\l
	}"
	]
javaawtFrame [
	label = "{java.awt::Frame\n\<\<adapter\>\>|
	+ _DEFAULT_CURSOR: int_\l
	+ _CROSSHAIR_CURSOR: int_\l
	+ _TEXT_CURSOR: int_\l
	+ _WAIT_CURSOR: int_\l
	+ _SW_RESIZE_CURSOR: int_\l
	+ _SE_RESIZE_CURSOR: int_\l
	+ _NW_RESIZE_CURSOR: int_\l
	+ _NE_RESIZE_CURSOR: int_\l
	+ _N_RESIZE_CURSOR: int_\l
	+ _S_RESIZE_CURSOR: int_\l
	+ _W_RESIZE_CURSOR: int_\l
	+ _E_RESIZE_CURSOR: int_\l
	+ _HAND_CURSOR: int_\l
	+ _MOVE_CURSOR: int_\l
	+ _NORMAL: int_\l
	+ _ICONIFIED: int_\l
	+ _MAXIMIZED_HORIZ: int_\l
	+ _MAXIMIZED_VERT: int_\l
	+ _MAXIMIZED_BOTH: int_\l
	 maximizedBounds: Rectangle\l
	 title: String\l
	 menuBar: MenuBar\l
	 resizable: boolean\l
	 undecorated: boolean\l
	 mbManagement: boolean\l
	- state: int\l
	 ownedWindows: Vector\<Window\>\l
	- _base: String_\l
	- _nameCounter: int_\l
	- _serialVersionUID: long_\l
	- frameSerializedDataVersion: int\l
	|
	+ getMaximizedBounds() : Rectangle\l
	+ _getFrames() : Frame_\l
	 postProcessKeyEvent(KeyEvent) : void\l
	+ setIconImage(Image) : void\l
	- _initIDs() : void_\l
	+ getMenuBar() : MenuBar\l
	+ setBackground(Color) : void\l
	+ remove(MenuComponent) : void\l
	+ setMenuBar(MenuBar) : void\l
	# paramString() : String\l
	+ getTitle() : String\l
	- isFrameStateSupported(int) : boolean\l
	+ getCursorType() : int\l
	+ setMaximizedBounds(Rectangle) : void\l
	- init(String, GraphicsConfiguration) : void\l
	 constructComponentName() : String\l
	 _access002(Frame, int) : int_\l
	+ setResizable(boolean) : void\l
	- writeObject(ObjectOutputStream) : void\l
	 _access000(Frame) : int_\l
	+ setTitle(String) : void\l
	+ isResizable() : boolean\l
	+ getAccessibleContext() : AccessibleContext\l
	+ setShape(Shape) : void\l
	- readObject(ObjectInputStream) : void\l
	+ setExtendedState(int) : void\l
	+ getExtendedState() : int\l
	+ getState() : int\l
	+ addNotify() : void\l
	+ setUndecorated(boolean) : void\l
	+ isUndecorated() : boolean\l
	+ setState(int) : void\l
	+ removeNotify() : void\l
	+ setCursor(int) : void\l
	+ getIconImage() : Image\l
	+ setOpacity(float) : void\l
	}"
	style = "filled"
fillcolor = "red"]
javaawtMediaTracker [
	label = "{java.awt::MediaTracker|
	 target: Component\l
	 head: MediaEntry\l
	- _serialVersionUID: long_\l
	+ _LOADING: int_\l
	+ _ABORTED: int_\l
	+ _ERRORED: int_\l
	+ _COMPLETE: int_\l
	 _DONE: int_\l
	|
	+ isErrorAny() : boolean\l
	+ checkAll() : boolean\l
	+ checkAll(boolean) : boolean\l
	- checkAll(boolean, boolean) : boolean\l
	+ addImage(Image, int, int, int) : void\l
	+ addImage(Image, int) : void\l
	- removeImageImpl(Image, int, int, int) : void\l
	- removeImageImpl(Image, int) : void\l
	- removeImageImpl(Image) : void\l
	+ waitForAll() : void\l
	+ waitForAll(long) : boolean\l
	+ getErrorsID(int) : Object\l
	 setDone() : void\l
	+ isErrorID(int) : boolean\l
	+ removeImage(Image, int, int, int) : void\l
	+ removeImage(Image, int) : void\l
	+ removeImage(Image) : void\l
	- addImageImpl(Image, int, int, int) : void\l
	+ getErrorsAny() : Object\l
	+ statusID(int, boolean) : int\l
	- statusID(int, boolean, boolean) : int\l
	+ statusAll(boolean) : int\l
	- statusAll(boolean, boolean) : int\l
	- _getResolutionVariant(Image) : Image_\l
	+ checkID(int, boolean) : boolean\l
	- checkID(int, boolean, boolean) : boolean\l
	+ checkID(int) : boolean\l
	+ waitForID(int, long) : boolean\l
	+ waitForID(int) : void\l
	}"
	]
javaawtChoice [
	label = "{java.awt::Choice\n\<\<Leaf\>\>|
	 pItems: Vector\<String\>\l
	 selectedIndex: int\l
	 itemListener: ItemListener\l
	- _base: String_\l
	- _nameCounter: int_\l
	- _serialVersionUID: long_\l
	- choiceSerializedDataVersion: int\l
	|
	+ getListeners(, , , EventListener\>, , Class\<\>) : \l
	+ select(String) : void\l
	+ select(int) : void\l
	+ getItemCount() : int\l
	# processEvent(AWTEvent) : void\l
	- _initIDs() : void_\l
	+ getItem(int) : String\l
	+ insert(String, int) : void\l
	+ getSelectedObjects() : Object\l
	# processItemEvent(ItemEvent) : void\l
	- insertNoInvalidate(String, int) : void\l
	 getItemImpl(int) : String\l
	+ remove(String) : void\l
	+ remove(int) : void\l
	+ addItem(String) : void\l
	# paramString() : String\l
	- removeNoInvalidate(int) : void\l
	+ removeAll() : void\l
	+ addItemListener(ItemListener) : void\l
	+ getSelectedItem() : String\l
	+ getItemListeners() : ItemListener\l
	+ add(String) : void\l
	 constructComponentName() : String\l
	- writeObject(ObjectOutputStream) : void\l
	+ countItems() : int\l
	+ removeItemListener(ItemListener) : void\l
	+ getAccessibleContext() : AccessibleContext\l
	- readObject(ObjectInputStream) : void\l
	+ addNotify() : void\l
	 eventEnabled(AWTEvent) : boolean\l
	+ getSelectedIndex() : int\l
	}"
	style = "filled"
fillcolor = "yellow"]
javaawtButton [
	label = "{java.awt::Button\n\<\<adapter, Leaf\>\>|
	 label: String\l
	 actionCommand: String\l
	 actionListener: ActionListener\l
	- _base: String_\l
	- _nameCounter: int_\l
	- _serialVersionUID: long_\l
	- buttonSerializedDataVersion: int\l
	|
	+ getListeners(, , , EventListener\>, , Class\<\>) : \l
	 constructComponentName() : String\l
	+ getLabel() : String\l
	- writeObject(ObjectOutputStream) : void\l
	+ addActionListener(ActionListener) : void\l
	- _initIDs() : void_\l
	# processEvent(AWTEvent) : void\l
	+ setActionCommand(String) : void\l
	# processActionEvent(ActionEvent) : void\l
	+ getAccessibleContext() : AccessibleContext\l
	- readObject(ObjectInputStream) : void\l
	# paramString() : String\l
	+ removeActionListener(ActionListener) : void\l
	+ addNotify() : void\l
	 eventEnabled(AWTEvent) : boolean\l
	+ getActionListeners() : ActionListener\l
	+ setLabel(String) : void\l
	+ getActionCommand() : String\l
	}"
	style = "filled"
fillcolor = "red"]
javaawtLinearGradientPaint [
	label = "{java.awt::LinearGradientPaint|
	- start: Point2D\l
	- end: Point2D\l
	|
	+ getStartPoint() : Point2D\l
	+ getEndPoint() : Point2D\l
	+ createContext(ColorModel, Rectangle, Rectangle2D, AffineTransform, RenderingHints) : PaintContext\l
	}"
	]
javaawtPaintContext [
	label = "{\<\<interface\>\>\njava.awt::PaintContext|
	|
	+ getColorModel() : ColorModel\l
	+ dispose() : void\l
	+ getRaster(int, int, int, int) : Raster\l
	}"
	]
javaawtRectangle [
	label = "{java.awt::Rectangle\n\<\<adaptee\>\>|
	+ x: int\l
	+ y: int\l
	+ width: int\l
	+ height: int\l
	- _serialVersionUID: long_\l
	|
	+ getLocation() : Point\l
	+ intersects(Rectangle) : boolean\l
	- _initIDs() : void_\l
	+ getWidth() : double\l
	+ inside(int, int) : boolean\l
	+ getBounds() : Rectangle\l
	+ translate(int, int) : void\l
	+ getHeight() : double\l
	+ setSize(Dimension) : void\l
	+ setSize(int, int) : void\l
	+ setLocation(int, int) : void\l
	+ setLocation(Point) : void\l
	+ intersection(Rectangle) : Rectangle\l
	+ add(Rectangle) : void\l
	+ add(int, int) : void\l
	+ add(Point) : void\l
	+ move(int, int) : void\l
	+ grow(int, int) : void\l
	+ isEmpty() : boolean\l
	+ setRect(double, double, double, double) : void\l
	+ reshape(int, int, int, int) : void\l
	+ union(Rectangle) : Rectangle\l
	+ setBounds(Rectangle) : void\l
	+ setBounds(int, int, int, int) : void\l
	+ getX() : double\l
	+ getSize() : Dimension\l
	+ contains(Rectangle) : boolean\l
	+ contains(int, int) : boolean\l
	+ contains(Point) : boolean\l
	+ contains(int, int, int, int) : boolean\l
	+ getY() : double\l
	+ createUnion(Rectangle2D) : Rectangle2D\l
	+ outcode(double, double) : int\l
	+ equals(Object) : boolean\l
	+ getBounds2D() : Rectangle2D\l
	+ resize(int, int) : void\l
	+ toString() : String\l
	+ createIntersection(Rectangle2D) : Rectangle2D\l
	- _clip(double, boolean) : int_\l
	}"
	style = "filled"
fillcolor = "red"]
javaawtKeyEventPostProcessor [
	label = "{\<\<interface\>\>\njava.awt::KeyEventPostProcessor\n\<\<Component, component\>\>|
	|
	+ postProcessKeyEvent(KeyEvent) : boolean\l
	}"
	style = "filled"
fillcolor = "yellow"]
javaawtRectangle [
	label = "{java.awt::Rectangle|
	+ x: int\l
	+ y: int\l
	+ width: int\l
	+ height: int\l
	- _serialVersionUID: long_\l
	|
	+ getLocation() : Point\l
	+ intersects(Rectangle) : boolean\l
	- _initIDs() : void_\l
	+ getWidth() : double\l
	+ inside(int, int) : boolean\l
	+ getBounds() : Rectangle\l
	+ translate(int, int) : void\l
	+ getHeight() : double\l
	+ setSize(Dimension) : void\l
	+ setSize(int, int) : void\l
	+ setLocation(int, int) : void\l
	+ setLocation(Point) : void\l
	+ intersection(Rectangle) : Rectangle\l
	+ add(Rectangle) : void\l
	+ add(int, int) : void\l
	+ add(Point) : void\l
	+ move(int, int) : void\l
	+ grow(int, int) : void\l
	+ isEmpty() : boolean\l
	+ setRect(double, double, double, double) : void\l
	+ reshape(int, int, int, int) : void\l
	+ union(Rectangle) : Rectangle\l
	+ setBounds(Rectangle) : void\l
	+ setBounds(int, int, int, int) : void\l
	+ getX() : double\l
	+ getSize() : Dimension\l
	+ contains(Rectangle) : boolean\l
	+ contains(int, int) : boolean\l
	+ contains(Point) : boolean\l
	+ contains(int, int, int, int) : boolean\l
	+ getY() : double\l
	+ createUnion(Rectangle2D) : Rectangle2D\l
	+ outcode(double, double) : int\l
	+ equals(Object) : boolean\l
	+ getBounds2D() : Rectangle2D\l
	+ resize(int, int) : void\l
	+ toString() : String\l
	+ createIntersection(Rectangle2D) : Rectangle2D\l
	- _clip(double, boolean) : int_\l
	}"
	]
javaawtPaint [
	label = "{\<\<interface\>\>\njava.awt::Paint\n\<\<target\>\>|
	|
	+ createContext(ColorModel, Rectangle, Rectangle2D, AffineTransform, RenderingHints) : PaintContext\l
	}"
	style = "filled"
fillcolor = "red"]
javaawtContainer [
	label = "{java.awt::Container\n\<\<decorator, adapter, Composite, target\>\>|
	- _log: PlatformLogger_\l
	- _eventLog: PlatformLogger_\l
	- _EMPTY_ARRAY: Component[]_\l
	- component: List\<Component\>\l
	 layoutMgr: LayoutManager\l
	- dispatcher: LightweightDispatcher\l
	- focusTraversalPolicy: FocusTraversalPolicy\l
	- focusCycleRoot: boolean\l
	- focusTraversalPolicyProvider: boolean\l
	- printingThreads: Set\<Thread\>\l
	- printing: boolean\l
	 containerListener: ContainerListener\l
	 listeningChildren: int\l
	 listeningBoundsChildren: int\l
	 descendantsCount: int\l
	 preserveBackgroundColor: Color\l
	- _serialVersionUID: long_\l
	 _INCLUDE_SELF: boolean_\l
	 _SEARCH_HEAVYWEIGHTS: boolean_\l
	- numOfHWComponents: int\l
	- numOfLWComponents: int\l
	- _mixingLog: PlatformLogger_\l
	- _serialPersistentFields: ObjectStreamField[]_\l
	- _isJavaAwtSmartInvalidate: boolean_\l
	- _descendUnconditionallyWhenValidating: boolean_\l
	 modalComp: Component\l
	 modalAppContext: AppContext\l
	- containerSerializedDataVersion: int\l
	|
	 getOpaqueShape() : Region\l
	 postProcessKeyEvent(KeyEvent) : void\l
	# processEvent(AWTEvent) : void\l
	+ paint(Graphics) : void\l
	+ setLayout(LayoutManager) : void\l
	- addDelicately(Component, Container, int) : void\l
	 mixOnValidating() : void\l
	# paramString() : String\l
	+ removeAll() : void\l
	- _isRemoveNotifyNeeded(Component, Container, Container) : boolean_\l
	+ getMinimumSize() : Dimension\l
	+ getMousePosition(boolean) : Point\l
	 postsOldMouseEvents() : boolean\l
	+ getAlignmentY() : float\l
	 countHierarchyMembers() : int\l
	+ addContainerListener(ContainerListener) : void\l
	- reparentChild(Component) : void\l
	+ getAlignmentX() : float\l
	- getBottommostComponentIndex() : int\l
	+ setComponentZOrder(Component, int) : void\l
	 decreaseComponentCount(Component) : void\l
	+ findComponentAt(int, int) : Component\l
	+ findComponentAt(Point) : Component\l
	 findComponentAt(int, int, boolean) : Component\l
	- readObject(ObjectInputStream) : void\l
	- getListenersCount(int, boolean) : int\l
	+ minimumSize() : Dimension\l
	 numListening(long) : int\l
	+ removeContainerListener(ContainerListener) : void\l
	 containsFocus() : boolean\l
	 isSameOrAncestorOf(Component, boolean) : boolean\l
	 clearCurrentFocusCycleRootOnHide() : void\l
	+ printComponents(Graphics) : void\l
	+ getListeners(, , , EventListener\>, , Class\<\>) : \l
	 updateGraphicsData(GraphicsConfiguration) : boolean\l
	+ getMaximumSize() : Dimension\l
	- startLWModal() : void\l
	 canContainFocusOwner(Component) : boolean\l
	+ setFocusTraversalPolicy(FocusTraversalPolicy) : void\l
	 createHierarchyEvents(int, Component, Container, long, boolean) : int\l
	 findComponentAtImpl(int, int, boolean) : Component\l
	 paintHeavyweightComponents(Graphics) : void\l
	+ setFocusTraversalKeys(int, Set\<AWTKeyStroke\>) : void\l
	- checkAddToSelf(Component) : void\l
	 getDropTargetEventTarget(int, int, boolean) : Component\l
	+ applyComponentOrientation(ComponentOrientation) : void\l
	+ validate() : void\l
	 validateUnconditionally() : void\l
	 mixOnZOrderChanging(int, int) : void\l
	- recursiveShowHeavyweightChildren() : void\l
	+ getInsets() : Insets\l
	 mixOnHiding(boolean) : void\l
	- getMouseEventTargetImpl(int, int, boolean, ContainerEventTargetFilter, boolean, boolean) : Component\l
	- checkNotAWindow(Component) : void\l
	 lightweightPaint(Graphics) : void\l
	+ isValidateRoot() : boolean\l
	+ getPreferredSize() : Dimension\l
	 eventEnabled(AWTEvent) : boolean\l
	+ addNotify() : void\l
	- recursiveHideHeavyweightChildren() : void\l
	+ setFocusTraversalPolicyProvider(boolean) : void\l
	 invalidateParent() : void\l
	+ insets() : Insets\l
	+ countComponents() : int\l
	- getMouseEventTarget(int, int, boolean, ContainerEventTargetFilter, boolean) : Component\l
	 getMouseEventTarget(int, int, boolean) : Component\l
	 increaseComponentCount(Component) : void\l
	- _initIDs() : void_\l
	- recursiveRelocateHeavyweightChildren(Point) : void\l
	 getAccessibleAt(Point) : Accessible\l
	 adjustDecendantsOnParent(int) : void\l
	+ getFocusTraversalKeys(int) : Set\<AWTKeyStroke\>\l
	 getComponentsSync() : Component\l
	- reparentTraverse(ContainerPeer, Container) : void\l
	+ preferredSize() : Dimension\l
	+ getComponents() : Component\l
	 getHeavyweightContainer() : Container\l
	+ setFont(Font) : void\l
	+ doLayout() : void\l
	+ add(Component, int) : Component\l
	+ add(String, Component) : Component\l
	+ add(Component, Object) : void\l
	+ add(Component) : Component\l
	+ add(Component, Object, int) : void\l
	 clearMostRecentFocusOwnerOnHide() : void\l
	# validateTree() : void\l
	+ setFocusCycleRoot(boolean) : void\l
	- writeObject(ObjectOutputStream) : void\l
	 getTraversalRoot() : Container\l
	- isParentOf(Component) : boolean\l
	 adjustDescendants(int) : void\l
	+ list(PrintWriter, int) : void\l
	+ list(PrintStream, int) : void\l
	+ deliverEvent(Event) : void\l
	 hasHeavyweightDescendants() : boolean\l
	+ getComponentCount() : int\l
	+ isAncestorOf(Component) : boolean\l
	 proxyEnableEvents(long) : void\l
	- removeDelicately(Component, Container, int) : boolean\l
	- getTopmostComponentIndex() : int\l
	 getAccessibleChild(int) : Accessible\l
	 mixOnReshaping() : void\l
	 lightweightPrint(Graphics) : void\l
	+ removeNotify() : void\l
	 isRecursivelyVisibleUpToHeavyweightContainer() : boolean\l
	+ getComponent(int) : Component\l
	 clearLightweightDispatcherOnRemove(Component) : void\l
	 getComponents_NoClientCode() : Component\l
	+ locate(int, int) : Component\l
	 mixOnShowing() : void\l
	 initializeFocusTraversalKeys() : void\l
	+ getComponentAt(int, int) : Component\l
	+ getComponentAt(Point) : Component\l
	+ update(Graphics) : void\l
	+ isFocusTraversalPolicySet() : boolean\l
	+ isFocusCycleRoot() : boolean\l
	+ isFocusCycleRoot(Container) : boolean\l
	+ getComponentZOrder(Component) : int\l
	+ remove(Component) : void\l
	+ remove(int) : void\l
	 invalidateTree() : void\l
	 printHeavyweightComponents(Graphics) : void\l
	 recursiveSubtractAndApplyShape(Region, int) : void\l
	 recursiveSubtractAndApplyShape(Region) : void\l
	 recursiveSubtractAndApplyShape(Region, int, int) : void\l
	+ getLayout() : LayoutManager\l
	- stopLWModal() : void\l
	+ getContainerListeners() : ContainerListener\l
	 recursiveApplyCurrentShape() : void\l
	 recursiveApplyCurrentShape(int, int) : void\l
	 recursiveApplyCurrentShape(int) : void\l
	# processContainerEvent(ContainerEvent) : void\l
	+ isFocusTraversalPolicyProvider() : boolean\l
	 checkGD(String) : void\l
	+ addPropertyChangeListener(String, PropertyChangeListener) : void\l
	+ addPropertyChangeListener(PropertyChangeListener) : void\l
	 getAccessibleChildrenCount() : int\l
	- findTraversalRoot() : Container\l
	+ transferFocusDownCycle() : void\l
	# addImpl(Component, Object, int) : void\l
	+ areFocusTraversalKeysSet(int) : boolean\l
	+ invalidate() : void\l
	 dispatchEventToSelf(AWTEvent) : void\l
	+ layout() : void\l
	 adjustListeningChildren(long, int) : void\l
	+ print(Graphics) : void\l
	 createChildHierarchyEvents(int, long, boolean) : void\l
	+ paintComponents(Graphics) : void\l
	- checkAdding(Component, int) : void\l
	+ getFocusTraversalPolicy() : FocusTraversalPolicy\l
	 preProcessKeyEvent(KeyEvent) : void\l
	 hasLightweightDescendants() : boolean\l
	 dispatchEventImpl(AWTEvent) : void\l
	}"
	style = "filled"
fillcolor = "green"]
javaawtSystemColor [
	label = "{java.awt::SystemColor|
	+ _DESKTOP: int_\l
	+ _ACTIVE_CAPTION: int_\l
	+ _ACTIVE_CAPTION_TEXT: int_\l
	+ _ACTIVE_CAPTION_BORDER: int_\l
	+ _INACTIVE_CAPTION: int_\l
	+ _INACTIVE_CAPTION_TEXT: int_\l
	+ _INACTIVE_CAPTION_BORDER: int_\l
	+ _WINDOW: int_\l
	+ _WINDOW_BORDER: int_\l
	+ _WINDOW_TEXT: int_\l
	+ _MENU: int_\l
	+ _MENU_TEXT: int_\l
	+ _TEXT: int_\l
	+ _TEXT_TEXT: int_\l
	+ _TEXT_HIGHLIGHT: int_\l
	+ _TEXT_HIGHLIGHT_TEXT: int_\l
	+ _TEXT_INACTIVE_TEXT: int_\l
	+ _CONTROL: int_\l
	+ _CONTROL_TEXT: int_\l
	+ _CONTROL_HIGHLIGHT: int_\l
	+ _CONTROL_LT_HIGHLIGHT: int_\l
	+ _CONTROL_SHADOW: int_\l
	+ _CONTROL_DK_SHADOW: int_\l
	+ _SCROLLBAR: int_\l
	+ _INFO: int_\l
	+ _INFO_TEXT: int_\l
	+ _NUM_COLORS: int_\l
	- _systemColors: int[]_\l
	+ _desktop: SystemColor_\l
	+ _activeCaption: SystemColor_\l
	+ _activeCaptionText: SystemColor_\l
	+ _activeCaptionBorder: SystemColor_\l
	+ _inactiveCaption: SystemColor_\l
	+ _inactiveCaptionText: SystemColor_\l
	+ _inactiveCaptionBorder: SystemColor_\l
	+ _window: SystemColor_\l
	+ _windowBorder: SystemColor_\l
	+ _windowText: SystemColor_\l
	+ _menu: SystemColor_\l
	+ _menuText: SystemColor_\l
	+ _text: SystemColor_\l
	+ _textText: SystemColor_\l
	+ _textHighlight: SystemColor_\l
	+ _textHighlightText: SystemColor_\l
	+ _textInactiveText: SystemColor_\l
	+ _control: SystemColor_\l
	+ _controlText: SystemColor_\l
	+ _controlHighlight: SystemColor_\l
	+ _controlLtHighlight: SystemColor_\l
	+ _controlShadow: SystemColor_\l
	+ _controlDkShadow: SystemColor_\l
	+ _scrollbar: SystemColor_\l
	+ _info: SystemColor_\l
	+ _infoText: SystemColor_\l
	- _serialVersionUID: long_\l
	- index: int\l
	- _systemColorObjects: SystemColor[]_\l
	|
	- readResolve() : Object\l
	- _updateSystemColors() : void_\l
	+ toString() : String\l
	- writeReplace() : Object\l
	}"
	]
javaawteventMouseMotionListener [
	label = "{\<\<interface\>\>\njava.awt.event::MouseMotionListener\n\<\<decorator, target\>\>|
	|
	+ mouseDragged(MouseEvent) : void\l
	+ mouseMoved(MouseEvent) : void\l
	}"
	style = "filled"
fillcolor = "green"]
javaawtRadialGradientPaint [
	label = "{java.awt::RadialGradientPaint|
	- focus: Point2D\l
	- center: Point2D\l
	- radius: float\l
	|
	- _createGradientTransform(Rectangle2D) : AffineTransform_\l
	+ getFocusPoint() : Point2D\l
	+ createContext(ColorModel, Rectangle, Rectangle2D, AffineTransform, RenderingHints) : PaintContext\l
	+ getRadius() : float\l
	+ getCenterPoint() : Point2D\l
	}"
	]
javaawtTextComponent [
	label = "{java.awt::TextComponent\n\<\<Leaf\>\>|
	 text: String\l
	 editable: boolean\l
	 selectionStart: int\l
	 selectionEnd: int\l
	 backgroundSetByClientCode: boolean\l
	# textListener: TextListener\l
	- _serialVersionUID: long_\l
	- textComponentSerializedDataVersion: int\l
	- checkForEnableIM: boolean\l
	|
	+ getSelectionStart() : int\l
	+ getListeners(, , , EventListener\>, , Class\<\>) : \l
	+ getSelectedText() : String\l
	+ getTextListeners() : TextListener\l
	+ select(int, int) : void\l
	 areInputMethodsEnabled() : boolean\l
	# processEvent(AWTEvent) : void\l
	- enableInputMethodsIfNecessary() : void\l
	+ getInputMethodRequests() : InputMethodRequests\l
	+ setBackground(Color) : void\l
	+ getCaretPosition() : int\l
	# paramString() : String\l
	+ setSelectionEnd(int) : void\l
	+ isEditable() : boolean\l
	+ removeTextListener(TextListener) : void\l
	+ setSelectionStart(int) : void\l
	- canAccessClipboard() : boolean\l
	+ getText() : String\l
	- writeObject(ObjectOutputStream) : void\l
	# processTextEvent(TextEvent) : void\l
	+ getAccessibleContext() : AccessibleContext\l
	- readObject(ObjectInputStream) : void\l
	+ selectAll() : void\l
	+ setEditable(boolean) : void\l
	+ addNotify() : void\l
	 eventEnabled(AWTEvent) : boolean\l
	+ enableInputMethods(boolean) : void\l
	+ removeNotify() : void\l
	+ setCaretPosition(int) : void\l
	+ getSelectionEnd() : int\l
	+ getBackground() : Color\l
	+ addTextListener(TextListener) : void\l
	+ setText(String) : void\l
	}"
	style = "filled"
fillcolor = "yellow"]
javaawtPageAttributes [
	label = "{java.awt::PageAttributes|
	- color: PageAttributesColorType\l
	- media: PageAttributesMediaType\l
	- orientationRequested: PageAttributesOrientationRequestedType\l
	- origin: PageAttributesOriginType\l
	- printQuality: PageAttributesPrintQualityType\l
	- printerResolution: int[]\l
	|
	+ setOrientationRequestedToDefault() : void\l
	+ set(PageAttributes) : void\l
	+ getMedia() : PageAttributesMediaType\l
	+ getOrientationRequested() : PageAttributesOrientationRequestedType\l
	+ getOrigin() : PageAttributesOriginType\l
	+ setOrigin(PageAttributesOriginType) : void\l
	+ getColor() : PageAttributesColorType\l
	+ setPrintQualityToDefault() : void\l
	+ setOrientationRequested(PageAttributesOrientationRequestedType) : void\l
	+ setOrientationRequested(int) : void\l
	+ setPrinterResolutionToDefault() : void\l
	+ setPrintQuality(PageAttributesPrintQualityType) : void\l
	+ setPrintQuality(int) : void\l
	+ setColor(PageAttributesColorType) : void\l
	+ setMediaToDefault() : void\l
	+ getPrintQuality() : PageAttributesPrintQualityType\l
	+ getPrinterResolution() : \l
	+ hashCode() : int\l
	+ equals(Object) : boolean\l
	+ clone() : Object\l
	+ setMedia(PageAttributesMediaType) : void\l
	+ toString() : String\l
	+ setPrinterResolution(int[]) : void\l
	+ setPrinterResolution(int) : void\l
	}"
	]
javaawtToolkit [
	label = "{java.awt::Toolkit|
	- _lightweightMarker: LightweightPeer_\l
	- _toolkit: Toolkit_\l
	- _atNames: String_\l
	- _resources: ResourceBundle_\l
	- _platformResources: ResourceBundle_\l
	- _loaded: boolean_\l
	# desktopProperties: Map\<String, Object\>\l
	# desktopPropsSupport: PropertyChangeSupport\l
	- _LONG_BITS: int_\l
	- calls: int[]\l
	- _enabledOnToolkitMask: long_\l
	- eventListener: AWTEventListener\l
	- listener2SelectiveListener: WeakHashMap\<AWTEventListener, ToolkitSelectiveAWTEventListener\>\l
	 _assertionsDisabled: boolean_\l
	|
	+ beep() : void\l
	# lazilyLoadDesktopProperty(String) : Object\l
	+ createDragGestureRecognizer(, , DragGestureRecognizer\>, , Class\<\>, DragSource, Component, int, DragGestureListener) : \l
	+ getScreenInsets(GraphicsConfiguration) : Insets\l
	- _initIDs() : void_\l
	- _createPropertyChangeSupport(Toolkit) : PropertyChangeSupport_\l
	+ addAWTEventListener(AWTEventListener, long) : void\l
	+ areExtraMouseButtonsEnabled() : boolean\l
	# loadSystemColors(int[]) : void\l
	+ getAWTEventListeners() : AWTEventListener\l
	+ getAWTEventListeners(long) : AWTEventListener\l
	+ getPrintJob(Frame, String, Properties) : PrintJob\l
	+ getPrintJob(Frame, String, JobAttributes, PageAttributes) : PrintJob\l
	# createMenuBar(MenuBar) : MenuBarPeer\l
	# createScrollbar(Scrollbar) : ScrollbarPeer\l
	# getMouseInfoPeer() : MouseInfoPeer\l
	 _enabledOnToolkit(long) : boolean_\l
	+ isFrameStateSupported(int) : boolean\l
	+ getDesktopProperty(String) : Object\l
	- _deProxyAWTEventListener(AWTEventListener) : AWTEventListener_\l
	# createList(List) : ListPeer\l
	+ getFontList() : String\l
	 _access202(ResourceBundle) : ResourceBundle_\l
	+ _getDefaultToolkit() : Toolkit_\l
	 _access002(Toolkit) : Toolkit_\l
	 _access000() : Toolkit_\l
	# createDialog(Dialog) : DialogPeer\l
	+ isDynamicLayoutActive() : boolean\l
	 _getEventQueue() : EventQueue_\l
	+ getSystemSelection() : Clipboard\l
	+ removePropertyChangeListener(String, PropertyChangeListener) : void\l
	+ sync() : void\l
	# createChoice(Choice) : ChoicePeer\l
	# createScrollPane(ScrollPane) : ScrollPanePeer\l
	# _getNativeContainer(Component) : Container_\l
	 countAWTEventListeners(long) : int\l
	+ isModalExclusionTypeSupported(DialogModalExclusionType) : boolean\l
	+ getMenuShortcutKeyMask() : int\l
	 notifyAWTEventListeners(AWTEvent) : void\l
	+ setDynamicLayout(boolean) : void\l
	+ getMaximumCursorColors() : int\l
	+ getImage(String) : Image\l
	+ getImage(URL) : Image\l
	# isDynamicLayoutSet() : boolean\l
	+ isModalityTypeSupported(DialogModalityType) : boolean\l
	# createCheckbox(Checkbox) : CheckboxPeer\l
	# createWindow(Window) : WindowPeer\l
	+ getLockingKeyState(int) : boolean\l
	# createPanel(Panel) : PanelPeer\l
	+ getFontMetrics(Font) : FontMetrics\l
	+ getScreenResolution() : int\l
	+ checkImage(Image, int, int, ImageObserver) : int\l
	# getSystemEventQueueImpl() : EventQueue\l
	# setDesktopProperty(String, Object) : void\l
	+ removeAWTEventListener(AWTEventListener) : void\l
	# createDesktopPeer(Desktop) : DesktopPeer\l
	# createTextArea(TextArea) : TextAreaPeer\l
	# createMenuItem(MenuItem) : MenuItemPeer\l
	# createLabel(Label) : LabelPeer\l
	+ getSystemEventQueue() : EventQueue\l
	# createButton(Button) : ButtonPeer\l
	+ getBestCursorSize(int, int) : Dimension\l
	 _loadLibraries() : void_\l
	# createCanvas(Canvas) : CanvasPeer\l
	# createComponent(Component) : LightweightPeer\l
	+ createCustomCursor(Image, Point, String) : Cursor\l
	+ getScreenSize() : Dimension\l
	+ addPropertyChangeListener(String, PropertyChangeListener) : void\l
	+ getSystemClipboard() : Clipboard\l
	+ isAlwaysOnTopSupported() : boolean\l
	# createTextField(TextField) : TextFieldPeer\l
	# createPopupMenu(PopupMenu) : PopupMenuPeer\l
	# createFrame(Frame) : FramePeer\l
	# createMenu(Menu) : MenuPeer\l
	+ getColorModel() : ColorModel\l
	+ _getProperty(String, String) : String_\l
	+ getPropertyChangeListeners() : PropertyChangeListener\l
	+ getPropertyChangeListeners(String) : PropertyChangeListener\l
	# getFontPeer(String, int) : FontPeer\l
	+ createImage(byte[], int, int) : Image\l
	+ createImage(String) : Image\l
	+ createImage(ImageProducer) : Image\l
	+ createImage(byte[]) : Image\l
	+ createImage(URL) : Image\l
	- _initAssistiveTechnologies() : void_\l
	- _loadAssistiveTechnologies() : void_\l
	 _access100(ResourceBundle) : void_\l
	# initializeDesktopProperties() : void\l
	- _setPlatformResources(ResourceBundle) : void_\l
	+ setLockingKeyState(int, boolean) : void\l
	# createFileDialog(FileDialog) : FileDialogPeer\l
	+ prepareImage(Image, int, int, ImageObserver) : boolean\l
	# createCheckboxMenuItem(CheckboxMenuItem) : CheckboxMenuItemPeer\l
	+ createDragSourceContextPeer(DragGestureEvent) : DragSourceContextPeer\l
	+ mapInputMethodHighlight(InputMethodHighlight) : Map\<TextAttribute, \>\l
	}"
	]
javaawtFontFormatException [
	label = "{java.awt::FontFormatException|
	- _serialVersionUID: long_\l
	|
	}"
	]
javaawtGradientPaintContext [
	label = "{java.awt::GradientPaintContext|
	 _xrgbmodel: ColorModel_\l
	 _xbgrmodel: ColorModel_\l
	 _cachedModel: ColorModel_\l
	 _cached: WeakReference\<Raster\>_\l
	 x1: double\l
	 y1: double\l
	 dx: double\l
	 dy: double\l
	 cyclic: boolean\l
	 interp: int[]\l
	 saved: Raster\l
	 model: ColorModel\l
	|
	 cycleFillRaster(int[], int, int, int, int, double, double, double) : void\l
	+ getColorModel() : ColorModel\l
	 _getCachedRaster(ColorModel, int, int) : Raster_\l
	 clipFillRaster(int[], int, int, int, int, double, double, double) : void\l
	 _putCachedRaster(ColorModel, Raster) : void_\l
	+ dispose() : void\l
	+ getRaster(int, int, int, int) : Raster\l
	}"
	]
javaawtFlowLayout [
	label = "{java.awt::FlowLayout|
	+ _LEFT: int_\l
	+ _CENTER: int_\l
	+ _RIGHT: int_\l
	+ _LEADING: int_\l
	+ _TRAILING: int_\l
	 align: int\l
	 newAlign: int\l
	 hgap: int\l
	 vgap: int\l
	- alignOnBaseline: boolean\l
	- _serialVersionUID: long_\l
	- _currentSerialVersion: int_\l
	- serialVersionOnStream: int\l
	|
	+ getAlignment() : int\l
	+ preferredLayoutSize(Container) : Dimension\l
	+ setAlignment(int) : void\l
	+ removeLayoutComponent(Component) : void\l
	+ getHgap() : int\l
	+ setAlignOnBaseline(boolean) : void\l
	- moveComponents(Container, int, int, int, int, int, int, boolean, boolean, int[], int[]) : int\l
	- readObject(ObjectInputStream) : void\l
	+ getVgap() : int\l
	+ setVgap(int) : void\l
	+ minimumLayoutSize(Container) : Dimension\l
	+ layoutContainer(Container) : void\l
	+ addLayoutComponent(String, Component) : void\l
	+ toString() : String\l
	+ setHgap(int) : void\l
	+ getAlignOnBaseline() : boolean\l
	}"
	]
javaawtWindow [
	label = "{java.awt::Window\n\<\<Composite, target, decorator\>\>|
	 warningString: String\l
	 icons: List\<Image\>\l
	- temporaryLostComponent: Component\l
	 _systemSyncLWRequests: boolean_\l
	 syncLWRequests: boolean\l
	 beforeFirstShow: boolean\l
	- disposing: boolean\l
	 disposerRecord: WindowWindowDisposerRecord\l
	 _OPENED: int_\l
	 state: int\l
	- alwaysOnTop: boolean\l
	- _allWindows: IdentityArrayList\<Window\>_\l
	 ownedWindowList: Vector\<WeakReference\<Window\>\>\l
	- weakThis: WeakReference\<Window\>\l
	 showWithParent: boolean\l
	 modalBlocker: Dialog\l
	 modalExclusionType: DialogModalExclusionType\l
	 windowListener: WindowListener\l
	 windowStateListener: WindowStateListener\l
	 windowFocusListener: WindowFocusListener\l
	 inputContext: InputContext\l
	- inputContextLock: Object\l
	- focusMgr: FocusManager\l
	- focusableWindowState: boolean\l
	- autoRequestFocus: boolean\l
	 isInShow: boolean\l
	- opacity: float\l
	- shape: Shape\l
	- _base: String_\l
	- _nameCounter: int_\l
	- _serialVersionUID: long_\l
	- _log: PlatformLogger_\l
	- _locationByPlatformProp: boolean_\l
	 isTrayIconWindow: boolean\l
	- securityWarningWidth: int\l
	- securityWarningHeight: int\l
	- securityWarningPointX: double\l
	- securityWarningPointY: double\l
	- securityWarningAlignmentX: float\l
	- securityWarningAlignmentY: float\l
	 anchor: Object\l
	- _beforeFirstWindowShown: AtomicBoolean_\l
	- type: WindowType\l
	- windowSerializedDataVersion: int\l
	- locationByPlatform: boolean\l
	|
	 _getAllWindows() : IdentityArrayList\<Window\>_\l
	+ isOpaque() : boolean\l
	 postProcessKeyEvent(KeyEvent) : void\l
	- initDeserializedWindow() : void\l
	+ setModalExclusionType(DialogModalExclusionType) : void\l
	# processEvent(AWTEvent) : void\l
	 setGraphicsConfiguration(GraphicsConfiguration) : void\l
	- setWarningString() : void\l
	+ paint(Graphics) : void\l
	+ removeWindowListener(WindowListener) : void\l
	+ getOwner() : Window\l
	- ownedInit(Window) : void\l
	+ setIconImages(List\<Image\>) : void\l
	+ getWindowStateListeners() : WindowStateListener\l
	- init(GraphicsConfiguration) : void\l
	 isDisposing() : boolean\l
	 _access400(Window) : float_\l
	 getContainer() : Container\l
	+ setFocusableWindowState(boolean) : void\l
	+ getMostRecentFocusOwner() : Component\l
	 _access000(Window) : WeakReference_\l
	+ reshape(int, int, int, int) : void\l
	+ pack() : void\l
	 _access802(Window, double) : double_\l
	 doDispose() : void\l
	+ toBack() : void\l
	+ postEvent(Event) : boolean\l
	- readObject(ObjectInputStream) : void\l
	+ setLocationByPlatform(boolean) : void\l
	 getDocumentRoot() : Window\l
	+ createBufferStrategy(int, BufferCapabilities) : void\l
	+ createBufferStrategy(int) : void\l
	- updateWindow() : void\l
	 isModalBlocked() : boolean\l
	+ getType() : WindowType\l
	- deserializeResources(ObjectInputStream) : void\l
	 _access1200(Window, double, double, double, double) : Point2D_\l
	+ setMinimumSize(Dimension) : void\l
	+ getModalExclusionType() : DialogModalExclusionType\l
	 isModalExcluded(DialogModalExclusionType) : boolean\l
	+ getListeners(, , , EventListener\>, , Class\<\>) : \l
	# processWindowEvent(WindowEvent) : void\l
	# processWindowStateEvent(WindowEvent) : void\l
	 removeOwnedWindow(WeakReference\<Window\>) : void\l
	 deliverMouseWheelToAncestor(MouseWheelEvent) : void\l
	 toBack_NoClientCode() : void\l
	 canContainFocusOwner(Component) : boolean\l
	 getModalBlocker() : Dialog\l
	+ removeWindowFocusListener(WindowFocusListener) : void\l
	+ addWindowListener(WindowListener) : void\l
	+ isAlwaysOnTopSupported() : boolean\l
	+ addWindowStateListener(WindowStateListener) : void\l
	 applyCurrentShape() : void\l
	+ getIconImages() : List\<Image\>\l
	+ getFocusableWindowState() : boolean\l
	- calculateSecurityWarningPosition(double, double, double, double) : Point2D\l
	 _access500(Window) : void_\l
	 applyCompoundShape(Region) : void\l
	 updateChildrenBlocking() : void\l
	+ getWindowFocusListeners() : WindowFocusListener\l
	 addOwnedWindow(WeakReference\<Window\>) : void\l
	 _access100(AppContext, WeakReference) : void_\l
	 toFront_NoClientCode() : void\l
	 postWindowEvent(int) : void\l
	 _access902(Window, double) : double_\l
	+ setBounds(Rectangle) : void\l
	+ setBounds(int, int, int, int) : void\l
	 isRecursivelyVisible() : boolean\l
	+ _getWindows() : Window_\l
	- _getWindows(AppContext) : Window_\l
	+ hide() : void\l
	+ isValidateRoot() : boolean\l
	 dispatchMouseWheelToAncestor(MouseWheelEvent) : boolean\l
	 setClientSize(int, int) : void\l
	+ addNotify() : void\l
	 eventEnabled(AWTEvent) : boolean\l
	 setTemporaryLostComponent(Component) : Component\l
	+ isFocusableWindow() : boolean\l
	+ getFocusCycleRootAncestor() : Container\l
	 _access1102(Window, float) : float_\l
	+ addWindowFocusListener(WindowFocusListener) : void\l
	+ setLocationRelativeTo(Component) : void\l
	- initGC(GraphicsConfiguration) : GraphicsConfiguration\l
	 getTemporaryLostComponent() : Component\l
	+ setIconImage(Image) : void\l
	- _initIDs() : void_\l
	+ isActive() : boolean\l
	 adjustDecendantsOnParent(int) : void\l
	- removeFromWindowList() : void\l
	- _removeFromWindowList(AppContext, WeakReference\<Window\>) : void_\l
	+ getInputContext() : InputContext\l
	+ getFocusTraversalKeys(int) : Set\<AWTKeyStroke\>\l
	+ getOpacity() : float\l
	+ isShowing() : boolean\l
	 setModalBlocked(Dialog, boolean, boolean) : void\l
	- _limit(double, double, double) : double_\l
	+ isLocationByPlatform() : boolean\l
	+ setAutoRequestFocus(boolean) : void\l
	+ setVisible(boolean) : void\l
	 _access600(Window) : int_\l
	 constructComponentName() : String\l
	 clearMostRecentFocusOwnerOnHide() : void\l
	+ toFront() : void\l
	 _access202(Window, boolean) : boolean_\l
	 disposeImpl() : void\l
	+ setFocusCycleRoot(boolean) : void\l
	- writeObject(ObjectOutputStream) : void\l
	# processWindowFocusEvent(WindowEvent) : void\l
	 getLocationOnWindow() : Point\l
	+ isFocused() : boolean\l
	 connectOwnedWindow(Window) : void\l
	 _access602(Window, int) : int_\l
	+ removeWindowStateListener(WindowStateListener) : void\l
	 mixOnReshaping() : void\l
	+ removeNotify() : void\l
	 _access1002(Window, float) : float_\l
	+ dispose() : void\l
	+ setCursor(Cursor) : void\l
	+ getWarningString() : String\l
	+ _getOwnerlessWindows() : Window_\l
	 updateZOrder() : void\l
	 _getAllUnblockedWindows() : IdentityArrayList\<Window\>_\l
	+ show() : void\l
	+ isAlwaysOnTop() : boolean\l
	+ getShape() : Shape\l
	+ isFocusCycleRoot() : boolean\l
	+ setBackground(Color) : void\l
	+ getToolkit() : Toolkit\l
	+ setSize(Dimension) : void\l
	+ setSize(int, int) : void\l
	 getOwnedWindows_NoClientCode() : Window\l
	+ setLocation(int, int) : void\l
	+ setLocation(Point) : void\l
	+ addPropertyChangeListener(String, PropertyChangeListener) : void\l
	+ addPropertyChangeListener(PropertyChangeListener) : void\l
	+ getWindowListeners() : WindowListener\l
	+ getOwnedWindows() : Window\l
	 _access700(Window) : int_\l
	 adjustListeningChildrenOnParent(long, int) : void\l
	- _setLayersOpaque(Component, boolean) : void_\l
	+ applyResourceBundle(String) : void\l
	+ applyResourceBundle(ResourceBundle) : void\l
	 getOwner_NoClientCode() : Window\l
	 _access300(Window) : Object_\l
	+ setType(WindowType) : void\l
	+ getBufferStrategy() : BufferStrategy\l
	+ getAccessibleContext() : AccessibleContext\l
	+ setShape(Shape) : void\l
	 _access702(Window, int) : int_\l
	 closeSplashScreen() : void\l
	- addToWindowList() : void\l
	 _updateChildFocusableWindowState(Window) : void_\l
	+ setAlwaysOnTop(boolean) : void\l
	+ isAutoRequestFocus() : boolean\l
	 preProcessKeyEvent(KeyEvent) : void\l
	+ getFocusOwner() : Component\l
	 _access1300(Window) : boolean_\l
	+ getLocale() : Locale\l
	+ getBackground() : Color\l
	 dispatchEventImpl(AWTEvent) : void\l
	+ setOpacity(float) : void\l
	}"
	style = "filled"
fillcolor = "yellow"]
javaawtgeomAffineTransform [
	label = "{java.awt.geom::AffineTransform\n\<\<adaptee\>\>|
	- _TYPE_UNKNOWN: int_\l
	+ _TYPE_IDENTITY: int_\l
	+ _TYPE_TRANSLATION: int_\l
	+ _TYPE_UNIFORM_SCALE: int_\l
	+ _TYPE_GENERAL_SCALE: int_\l
	+ _TYPE_MASK_SCALE: int_\l
	+ _TYPE_FLIP: int_\l
	+ _TYPE_QUADRANT_ROTATION: int_\l
	+ _TYPE_GENERAL_ROTATION: int_\l
	+ _TYPE_MASK_ROTATION: int_\l
	+ _TYPE_GENERAL_TRANSFORM: int_\l
	 _APPLY_IDENTITY: int_\l
	 _APPLY_TRANSLATE: int_\l
	 _APPLY_SCALE: int_\l
	 _APPLY_SHEAR: int_\l
	- _HI_SHIFT: int_\l
	- _HI_IDENTITY: int_\l
	- _HI_TRANSLATE: int_\l
	- _HI_SCALE: int_\l
	- _HI_SHEAR: int_\l
	 m00: double\l
	 m10: double\l
	 m01: double\l
	 m11: double\l
	 m02: double\l
	 m12: double\l
	 state: int\l
	- type: int\l
	- _rot90conversion: int[]_\l
	- _serialVersionUID: long_\l
	|
	+ rotate(double, double, double, double) : void\l
	+ rotate(double) : void\l
	+ rotate(double, double, double) : void\l
	+ rotate(double, double) : void\l
	+ concatenate(AffineTransform) : void\l
	+ preConcatenate(AffineTransform) : void\l
	+ _getRotateInstance(double, double, double, double) : AffineTransform_\l
	+ _getRotateInstance(double) : AffineTransform_\l
	+ _getRotateInstance(double, double, double) : AffineTransform_\l
	+ _getRotateInstance(double, double) : AffineTransform_\l
	+ translate(double, double) : void\l
	+ setToQuadrantRotation(int, double, double) : void\l
	+ setToQuadrantRotation(int) : void\l
	+ getMatrix(double[]) : void\l
	+ quadrantRotate(int, double, double) : void\l
	+ quadrantRotate(int) : void\l
	+ inverseTransform(double[], int, double[], int, int) : void\l
	+ inverseTransform(Point2D, Point2D) : Point2D\l
	+ getDeterminant() : double\l
	+ invert() : void\l
	- writeObject(ObjectOutputStream) : void\l
	- rotate180() : void\l
	+ isIdentity() : boolean\l
	- rotate90() : void\l
	+ createInverse() : AffineTransform\l
	- readObject(ObjectInputStream) : void\l
	+ getScaleY() : double\l
	+ getShearX() : double\l
	+ getScaleX() : double\l
	+ getShearY() : double\l
	+ getType() : int\l
	+ setToTranslation(double, double) : void\l
	+ _getShearInstance(double, double) : AffineTransform_\l
	+ setToIdentity() : void\l
	- calculateType() : void\l
	+ scale(double, double) : void\l
	+ _getScaleInstance(double, double) : AffineTransform_\l
	+ setToRotation(double, double, double, double) : void\l
	+ setToRotation(double) : void\l
	+ setToRotation(double, double, double) : void\l
	+ setToRotation(double, double) : void\l
	+ transform(double[], int, double[], int, int) : void\l
	+ transform(double[], int, float[], int, int) : void\l
	+ transform(Point2D, Point2D) : Point2D\l
	+ transform(float[], int, double[], int, int) : void\l
	+ transform(Point2D[], int, Point2D[], int, int) : void\l
	+ transform(float[], int, float[], int, int) : void\l
	+ setTransform(double, double, double, double, double, double) : void\l
	+ setTransform(AffineTransform) : void\l
	- rotate270() : void\l
	+ hashCode() : int\l
	+ setToShear(double, double) : void\l
	+ getTranslateY() : double\l
	+ getTranslateX() : double\l
	 updateState() : void\l
	- __matround(double) : double_\l
	+ shear(double, double) : void\l
	+ _getQuadrantRotateInstance(int, double, double) : AffineTransform_\l
	+ _getQuadrantRotateInstance(int) : AffineTransform_\l
	+ createTransformedShape(Shape) : Shape\l
	+ _getTranslateInstance(double, double) : AffineTransform_\l
	+ setToScale(double, double) : void\l
	- stateError() : void\l
	+ equals(Object) : boolean\l
	+ clone() : Object\l
	+ toString() : String\l
	+ deltaTransform(double[], int, double[], int, int) : void\l
	+ deltaTransform(Point2D, Point2D) : Point2D\l
	}"
	style = "filled"
fillcolor = "red"]
javaawtContainerOrderFocusTraversalPolicy [
	label = "{java.awt::ContainerOrderFocusTraversalPolicy|
	- _log: PlatformLogger_\l
	- FORWARD_TRAVERSAL: int\l
	- BACKWARD_TRAVERSAL: int\l
	- _serialVersionUID: long_\l
	- implicitDownCycleTraversal: boolean\l
	- cachedRoot: Container\l
	- cachedCycle: List\<Component\>\l
	|
	- getTopmostProvider(Container, Component) : Container\l
	+ setImplicitDownCycleTraversal(boolean) : void\l
	- getComponentIndex(List\<Component\>, Component) : int\l
	- getFocusTraversalCycle(Container) : List\<Component\>\l
	- getComponentDownCycle(Component, int) : Component\l
	+ getLastComponent(Container) : Component\l
	+ getComponentAfter(Container, Component) : Component\l
	+ getDefaultComponent(Container) : Component\l
	# accept(Component) : boolean\l
	+ getComponentBefore(Container, Component) : Component\l
	+ getFirstComponent(Container) : Component\l
	- enumerateCycle(Container, List\<Component\>) : void\l
	+ getImplicitDownCycleTraversal() : boolean\l
	}"
	]
javaawtTrayIcon [
	label = "{java.awt::TrayIcon|
	- image: Image\l
	- tooltip: String\l
	- popup: PopupMenu\l
	- autosize: boolean\l
	- id: int\l
	- actionCommand: String\l
	- peer: TrayIconPeer\l
	 mouseListener: MouseListener\l
	 mouseMotionListener: MouseMotionListener\l
	 actionListener: ActionListener\l
	- acc: AccessControlContext\l
	|
	+ getPopupMenu() : PopupMenu\l
	 processEvent(AWTEvent) : void\l
	- _initIDs() : void_\l
	 processActionEvent(ActionEvent) : void\l
	+ displayMessage(String, String, TrayIconMessageType) : void\l
	+ removeActionListener(ActionListener) : void\l
	+ getMouseListeners() : MouseListener\l
	 processMouseEvent(MouseEvent) : void\l
	+ removeMouseMotionListener(MouseMotionListener) : void\l
	 dispatchEvent(AWTEvent) : void\l
	 getAccessControlContext() : AccessControlContext\l
	+ addActionListener(ActionListener) : void\l
	+ setToolTip(String) : void\l
	+ addMouseMotionListener(MouseMotionListener) : void\l
	+ setActionCommand(String) : void\l
	+ setPopupMenu(PopupMenu) : void\l
	 getID() : int\l
	+ isImageAutoSize() : boolean\l
	+ setImageAutoSize(boolean) : void\l
	+ getSize() : Dimension\l
	+ getToolTip() : String\l
	 addNotify() : void\l
	+ getActionListeners() : ActionListener\l
	 processMouseMotionEvent(MouseEvent) : void\l
	 removeNotify() : void\l
	 setID(int) : void\l
	+ removeMouseListener(MouseListener) : void\l
	+ getActionCommand() : String\l
	+ getImage() : Image\l
	+ getMouseMotionListeners() : MouseMotionListener\l
	+ setImage(Image) : void\l
	+ addMouseListener(MouseListener) : void\l
	}"
	]
javaawtWindow [
	label = "{java.awt::Window|
	 warningString: String\l
	 icons: List\<Image\>\l
	- temporaryLostComponent: Component\l
	 _systemSyncLWRequests: boolean_\l
	 syncLWRequests: boolean\l
	 beforeFirstShow: boolean\l
	- disposing: boolean\l
	 disposerRecord: WindowWindowDisposerRecord\l
	 _OPENED: int_\l
	 state: int\l
	- alwaysOnTop: boolean\l
	- _allWindows: IdentityArrayList\<Window\>_\l
	 ownedWindowList: Vector\<WeakReference\<Window\>\>\l
	- weakThis: WeakReference\<Window\>\l
	 showWithParent: boolean\l
	 modalBlocker: Dialog\l
	 modalExclusionType: DialogModalExclusionType\l
	 windowListener: WindowListener\l
	 windowStateListener: WindowStateListener\l
	 windowFocusListener: WindowFocusListener\l
	 inputContext: InputContext\l
	- inputContextLock: Object\l
	- focusMgr: FocusManager\l
	- focusableWindowState: boolean\l
	- autoRequestFocus: boolean\l
	 isInShow: boolean\l
	- opacity: float\l
	- shape: Shape\l
	- _base: String_\l
	- _nameCounter: int_\l
	- _serialVersionUID: long_\l
	- _log: PlatformLogger_\l
	- _locationByPlatformProp: boolean_\l
	 isTrayIconWindow: boolean\l
	- securityWarningWidth: int\l
	- securityWarningHeight: int\l
	- securityWarningPointX: double\l
	- securityWarningPointY: double\l
	- securityWarningAlignmentX: float\l
	- securityWarningAlignmentY: float\l
	 anchor: Object\l
	- _beforeFirstWindowShown: AtomicBoolean_\l
	- type: WindowType\l
	- windowSerializedDataVersion: int\l
	- locationByPlatform: boolean\l
	|
	 _getAllWindows() : IdentityArrayList\<Window\>_\l
	+ isOpaque() : boolean\l
	 postProcessKeyEvent(KeyEvent) : void\l
	- initDeserializedWindow() : void\l
	+ setModalExclusionType(DialogModalExclusionType) : void\l
	# processEvent(AWTEvent) : void\l
	 setGraphicsConfiguration(GraphicsConfiguration) : void\l
	- setWarningString() : void\l
	+ paint(Graphics) : void\l
	+ removeWindowListener(WindowListener) : void\l
	+ getOwner() : Window\l
	- ownedInit(Window) : void\l
	+ setIconImages(List\<Image\>) : void\l
	+ getWindowStateListeners() : WindowStateListener\l
	- init(GraphicsConfiguration) : void\l
	 isDisposing() : boolean\l
	 _access400(Window) : float_\l
	 getContainer() : Container\l
	+ setFocusableWindowState(boolean) : void\l
	+ getMostRecentFocusOwner() : Component\l
	 _access000(Window) : WeakReference_\l
	+ reshape(int, int, int, int) : void\l
	+ pack() : void\l
	 _access802(Window, double) : double_\l
	 doDispose() : void\l
	+ toBack() : void\l
	+ postEvent(Event) : boolean\l
	- readObject(ObjectInputStream) : void\l
	+ setLocationByPlatform(boolean) : void\l
	 getDocumentRoot() : Window\l
	+ createBufferStrategy(int, BufferCapabilities) : void\l
	+ createBufferStrategy(int) : void\l
	- updateWindow() : void\l
	 isModalBlocked() : boolean\l
	+ getType() : WindowType\l
	- deserializeResources(ObjectInputStream) : void\l
	 _access1200(Window, double, double, double, double) : Point2D_\l
	+ setMinimumSize(Dimension) : void\l
	+ getModalExclusionType() : DialogModalExclusionType\l
	 isModalExcluded(DialogModalExclusionType) : boolean\l
	+ getListeners(, , , EventListener\>, , Class\<\>) : \l
	# processWindowEvent(WindowEvent) : void\l
	# processWindowStateEvent(WindowEvent) : void\l
	 removeOwnedWindow(WeakReference\<Window\>) : void\l
	 deliverMouseWheelToAncestor(MouseWheelEvent) : void\l
	 toBack_NoClientCode() : void\l
	 canContainFocusOwner(Component) : boolean\l
	 getModalBlocker() : Dialog\l
	+ removeWindowFocusListener(WindowFocusListener) : void\l
	+ addWindowListener(WindowListener) : void\l
	+ isAlwaysOnTopSupported() : boolean\l
	+ addWindowStateListener(WindowStateListener) : void\l
	 applyCurrentShape() : void\l
	+ getIconImages() : List\<Image\>\l
	+ getFocusableWindowState() : boolean\l
	- calculateSecurityWarningPosition(double, double, double, double) : Point2D\l
	 _access500(Window) : void_\l
	 applyCompoundShape(Region) : void\l
	 updateChildrenBlocking() : void\l
	+ getWindowFocusListeners() : WindowFocusListener\l
	 addOwnedWindow(WeakReference\<Window\>) : void\l
	 _access100(AppContext, WeakReference) : void_\l
	 toFront_NoClientCode() : void\l
	 postWindowEvent(int) : void\l
	 _access902(Window, double) : double_\l
	+ setBounds(Rectangle) : void\l
	+ setBounds(int, int, int, int) : void\l
	 isRecursivelyVisible() : boolean\l
	+ _getWindows() : Window_\l
	- _getWindows(AppContext) : Window_\l
	+ hide() : void\l
	+ isValidateRoot() : boolean\l
	 dispatchMouseWheelToAncestor(MouseWheelEvent) : boolean\l
	 setClientSize(int, int) : void\l
	+ addNotify() : void\l
	 eventEnabled(AWTEvent) : boolean\l
	 setTemporaryLostComponent(Component) : Component\l
	+ isFocusableWindow() : boolean\l
	+ getFocusCycleRootAncestor() : Container\l
	 _access1102(Window, float) : float_\l
	+ addWindowFocusListener(WindowFocusListener) : void\l
	+ setLocationRelativeTo(Component) : void\l
	- initGC(GraphicsConfiguration) : GraphicsConfiguration\l
	 getTemporaryLostComponent() : Component\l
	+ setIconImage(Image) : void\l
	- _initIDs() : void_\l
	+ isActive() : boolean\l
	 adjustDecendantsOnParent(int) : void\l
	- removeFromWindowList() : void\l
	- _removeFromWindowList(AppContext, WeakReference\<Window\>) : void_\l
	+ getInputContext() : InputContext\l
	+ getFocusTraversalKeys(int) : Set\<AWTKeyStroke\>\l
	+ getOpacity() : float\l
	+ isShowing() : boolean\l
	 setModalBlocked(Dialog, boolean, boolean) : void\l
	- _limit(double, double, double) : double_\l
	+ isLocationByPlatform() : boolean\l
	+ setAutoRequestFocus(boolean) : void\l
	+ setVisible(boolean) : void\l
	 _access600(Window) : int_\l
	 constructComponentName() : String\l
	 clearMostRecentFocusOwnerOnHide() : void\l
	+ toFront() : void\l
	 _access202(Window, boolean) : boolean_\l
	 disposeImpl() : void\l
	+ setFocusCycleRoot(boolean) : void\l
	- writeObject(ObjectOutputStream) : void\l
	# processWindowFocusEvent(WindowEvent) : void\l
	 getLocationOnWindow() : Point\l
	+ isFocused() : boolean\l
	 connectOwnedWindow(Window) : void\l
	 _access602(Window, int) : int_\l
	+ removeWindowStateListener(WindowStateListener) : void\l
	 mixOnReshaping() : void\l
	+ removeNotify() : void\l
	 _access1002(Window, float) : float_\l
	+ dispose() : void\l
	+ setCursor(Cursor) : void\l
	+ getWarningString() : String\l
	+ _getOwnerlessWindows() : Window_\l
	 updateZOrder() : void\l
	 _getAllUnblockedWindows() : IdentityArrayList\<Window\>_\l
	+ show() : void\l
	+ isAlwaysOnTop() : boolean\l
	+ getShape() : Shape\l
	+ isFocusCycleRoot() : boolean\l
	+ setBackground(Color) : void\l
	+ getToolkit() : Toolkit\l
	+ setSize(Dimension) : void\l
	+ setSize(int, int) : void\l
	 getOwnedWindows_NoClientCode() : Window\l
	+ setLocation(int, int) : void\l
	+ setLocation(Point) : void\l
	+ addPropertyChangeListener(String, PropertyChangeListener) : void\l
	+ addPropertyChangeListener(PropertyChangeListener) : void\l
	+ getWindowListeners() : WindowListener\l
	+ getOwnedWindows() : Window\l
	 _access700(Window) : int_\l
	 adjustListeningChildrenOnParent(long, int) : void\l
	- _setLayersOpaque(Component, boolean) : void_\l
	+ applyResourceBundle(String) : void\l
	+ applyResourceBundle(ResourceBundle) : void\l
	 getOwner_NoClientCode() : Window\l
	 _access300(Window) : Object_\l
	+ setType(WindowType) : void\l
	+ getBufferStrategy() : BufferStrategy\l
	+ getAccessibleContext() : AccessibleContext\l
	+ setShape(Shape) : void\l
	 _access702(Window, int) : int_\l
	 closeSplashScreen() : void\l
	- addToWindowList() : void\l
	 _updateChildFocusableWindowState(Window) : void_\l
	+ setAlwaysOnTop(boolean) : void\l
	+ isAutoRequestFocus() : boolean\l
	 preProcessKeyEvent(KeyEvent) : void\l
	+ getFocusOwner() : Component\l
	 _access1300(Window) : boolean_\l
	+ getLocale() : Locale\l
	+ getBackground() : Color\l
	 dispatchEventImpl(AWTEvent) : void\l
	+ setOpacity(float) : void\l
	}"
	]
javaawtGridLayout [
	label = "{java.awt::GridLayout|
	- _serialVersionUID: long_\l
	 hgap: int\l
	 vgap: int\l
	 rows: int\l
	 cols: int\l
	|
	+ preferredLayoutSize(Container) : Dimension\l
	+ setColumns(int) : void\l
	+ removeLayoutComponent(Component) : void\l
	+ getHgap() : int\l
	+ getRows() : int\l
	+ getColumns() : int\l
	+ getVgap() : int\l
	+ setVgap(int) : void\l
	+ setRows(int) : void\l
	+ minimumLayoutSize(Container) : Dimension\l
	+ layoutContainer(Container) : void\l
	+ addLayoutComponent(String, Component) : void\l
	+ toString() : String\l
	+ setHgap(int) : void\l
	}"
	]
javaawtMenuContainer [
	label = "{\<\<interface\>\>\njava.awt::MenuContainer\n\<\<target\>\>|
	|
	+ getFont() : Font\l
	+ remove(MenuComponent) : void\l
	+ postEvent(Event) : boolean\l
	}"
	style = "filled"
fillcolor = "red"]
javaawtStroke [
	label = "{\<\<interface\>\>\njava.awt::Stroke|
	|
	+ createStrokedShape(Shape) : Shape\l
	}"
	]
javaawtDialog [
	label = "{java.awt::Dialog\n\<\<target, adapter\>\>|
	 resizable: boolean\l
	 undecorated: boolean\l
	- initialized: boolean\l
	+ _DEFAULT_MODALITY_TYPE: DialogModalityType_\l
	 modal: boolean\l
	 modalityType: DialogModalityType\l
	 _modalDialogs: IdentityArrayList\<Dialog\>_\l
	 blockedWindows: IdentityArrayList\<Window\>\l
	 title: String\l
	- modalFilter: ModalEventFilter\l
	- secondaryLoop: SecondaryLoop\l
	 isInHide: boolean\l
	 isInDispose: boolean\l
	- _base: String_\l
	- _nameCounter: int_\l
	- _serialVersionUID: long_\l
	|
	 modalHide() : void\l
	+ show() : void\l
	- _initIDs() : void_\l
	+ setBackground(Color) : void\l
	 unblockWindow(Window) : void\l
	# paramString() : String\l
	+ getTitle() : String\l
	- checkModalityPermission(DialogModalityType) : void\l
	 _checkShouldBeBlocked(Window) : void_\l
	 modalityPopped() : void\l
	- hideAndDisposeHandler() : void\l
	 shouldBlock(Window) : boolean\l
	 interruptBlocking() : void\l
	 modalShow() : void\l
	+ setVisible(boolean) : void\l
	 constructComponentName() : String\l
	 modalityPushed() : void\l
	+ setResizable(boolean) : void\l
	 blockWindows(List\<Window\>) : void\l
	- conditionalShow(Component, AtomicLong) : boolean\l
	+ setTitle(String) : void\l
	 blockWindow(Window) : void\l
	+ setModalityType(DialogModalityType) : void\l
	+ isResizable() : boolean\l
	+ getAccessibleContext() : AccessibleContext\l
	+ setShape(Shape) : void\l
	 doDispose() : void\l
	+ toBack() : void\l
	- readObject(ObjectInputStream) : void\l
	+ hide() : void\l
	+ setModal(boolean) : void\l
	+ addNotify() : void\l
	- hideAndDisposePreHandler() : void\l
	+ setUndecorated(boolean) : void\l
	+ isUndecorated() : boolean\l
	 isModal_NoClientCode() : boolean\l
	+ isModal() : boolean\l
	+ getModalityType() : DialogModalityType\l
	+ setOpacity(float) : void\l
	}"
	style = "filled"
fillcolor = "red"]
javaawtIllegalComponentStateException [
	label = "{java.awt::IllegalComponentStateException|
	- _serialVersionUID: long_\l
	|
	}"
	]
javaawtCanvas [
	label = "{java.awt::Canvas\n\<\<Leaf\>\>|
	- _base: String_\l
	- _nameCounter: int_\l
	- _serialVersionUID: long_\l
	|
	+ createBufferStrategy(int, BufferCapabilities) : void\l
	+ createBufferStrategy(int) : void\l
	 constructComponentName() : String\l
	+ addNotify() : void\l
	 setGraphicsConfiguration(GraphicsConfiguration) : void\l
	 postsOldMouseEvents() : boolean\l
	+ paint(Graphics) : void\l
	+ update(Graphics) : void\l
	+ getBufferStrategy() : BufferStrategy\l
	+ getAccessibleContext() : AccessibleContext\l
	}"
	style = "filled"
fillcolor = "yellow"]
javaawtMenu [
	label = "{java.awt::Menu\n\<\<Composite, adaptee\>\>|
	 items: Vector\<MenuComponent\>\l
	 tearOff: boolean\l
	 isHelpMenu: boolean\l
	- _base: String_\l
	- _nameCounter: int_\l
	- _serialVersionUID: long_\l
	- menuSerializedDataVersion: int\l
	|
	+ getItemCount() : int\l
	 shortcuts() : Enumeration\<MenuShortcut\>\l
	- _initIDs() : void_\l
	+ getItem(int) : MenuItem\l
	+ insert(String, int) : void\l
	+ insert(MenuItem, int) : void\l
	+ isTearOff() : boolean\l
	 getItemImpl(int) : MenuItem\l
	+ remove(MenuComponent) : void\l
	+ remove(int) : void\l
	 getShortcutMenuItem(MenuShortcut) : MenuItem\l
	+ paramString() : String\l
	 getAccessibleChildIndex(MenuComponent) : int\l
	+ removeAll() : void\l
	+ addSeparator() : void\l
	 handleShortcut(KeyEvent) : boolean\l
	 countItemsImpl() : int\l
	+ add(String) : void\l
	+ add(MenuItem) : MenuItem\l
	 constructComponentName() : String\l
	 deleteShortcut(MenuShortcut) : void\l
	- writeObject(ObjectOutputStream) : void\l
	+ countItems() : int\l
	+ getAccessibleContext() : AccessibleContext\l
	- readObject(ObjectInputStream) : void\l
	+ addNotify() : void\l
	+ removeNotify() : void\l
	+ insertSeparator(int) : void\l
	}"
	style = "filled"
fillcolor = "yellow"]
javalangRunnable [
	label = "{\<\<interface\>\>\njava.lang::Runnable\n\<\<adaptee\>\>|
	|
	+ run() : void\l
	}"
	style = "filled"
fillcolor = "red"]
javaawtComposite [
	label = "{\<\<interface\>\>\njava.awt::Composite|
	|
	+ createContext(ColorModel, ColorModel, RenderingHints) : CompositeContext\l
	}"
	]
javaawtPolygon [
	label = "{java.awt::Polygon|
	+ npoints: int\l
	+ xpoints: int[]\l
	+ ypoints: int[]\l
	# bounds: Rectangle\l
	- _serialVersionUID: long_\l
	- _MIN_LENGTH: int_\l
	|
	+ intersects(double, double, double, double) : boolean\l
	+ intersects(Rectangle2D) : boolean\l
	 calculateBounds(int[], int[], int) : void\l
	+ invalidate() : void\l
	+ inside(int, int) : boolean\l
	+ getBoundingBox() : Rectangle\l
	+ translate(int, int) : void\l
	+ addPoint(int, int) : void\l
	+ getBounds() : Rectangle\l
	+ contains(int, int) : boolean\l
	+ contains(Point) : boolean\l
	+ contains(double, double, double, double) : boolean\l
	+ contains(Rectangle2D) : boolean\l
	+ contains(Point2D) : boolean\l
	+ contains(double, double) : boolean\l
	 updateBounds(int, int) : void\l
	+ getPathIterator(AffineTransform, double) : PathIterator\l
	+ getPathIterator(AffineTransform) : PathIterator\l
	+ getBounds2D() : Rectangle2D\l
	+ reset() : void\l
	- getCrossings(double, double, double, double) : Crossings\l
	}"
	]
javaawtGridBagLayout [
	label = "{java.awt::GridBagLayout|
	 _EMPIRICMULTIPLIER: int_\l
	# _MAXGRIDSIZE: int_\l
	# _MINSIZE: int_\l
	# _PREFERREDSIZE: int_\l
	# comptable: Hashtable\<Component, GridBagConstraints\>\l
	# defaultConstraints: GridBagConstraints\l
	# layoutInfo: GridBagLayoutInfo\l
	+ columnWidths: int[]\l
	+ rowHeights: int[]\l
	+ columnWeights: double[]\l
	+ rowWeights: double[]\l
	- componentAdjusting: Component\l
	 rightToLeft: boolean\l
	 _serialVersionUID: long_\l
	|
	+ preferredLayoutSize(Container) : Dimension\l
	# ArrangeGrid(Container) : void\l
	+ setConstraints(Component, GridBagConstraints) : void\l
	+ removeLayoutComponent(Component) : void\l
	# AdjustForGravity(GridBagConstraints, Rectangle) : void\l
	# getMinSize(Container, GridBagLayoutInfo) : Dimension\l
	+ getConstraints(Component) : GridBagConstraints\l
	# GetMinSize(Container, GridBagLayoutInfo) : Dimension\l
	+ minimumLayoutSize(Container) : Dimension\l
	- alignAboveBaseline(GridBagConstraints, Rectangle, int, int) : void\l
	+ getLayoutOrigin() : Point\l
	+ addLayoutComponent(String, Component) : void\l
	+ addLayoutComponent(Component, Object) : void\l
	# arrangeGrid(Container) : void\l
	- calculateBaseline(Component, GridBagConstraints, Dimension) : boolean\l
	- centerVertically(GridBagConstraints, Rectangle, int) : void\l
	# lookupConstraints(Component) : GridBagConstraints\l
	- alignOnBaseline(GridBagConstraints, Rectangle, int, int) : void\l
	# adjustForGravity(GridBagConstraints, Rectangle) : void\l
	+ getLayoutDimensions() : \l
	+ invalidateLayout(Container) : void\l
	- preInitMaximumArraySizes(Container) : \l
	- alignBelowBaseline(GridBagConstraints, Rectangle, int, int) : void\l
	+ getLayoutAlignmentX(Container) : float\l
	# getLayoutInfo(Container, int) : GridBagLayoutInfo\l
	# GetLayoutInfo(Container, int) : GridBagLayoutInfo\l
	+ getLayoutAlignmentY(Container) : float\l
	+ maximumLayoutSize(Container) : Dimension\l
	+ layoutContainer(Container) : void\l
	- removeConstraints(Component) : void\l
	+ location(int, int) : Point\l
	+ toString() : String\l
	+ getLayoutWeights() : \l
	}"
	]
javaawteventAdjustmentListener [
	label = "{\<\<interface\>\>\njava.awt.event::AdjustmentListener\n\<\<decorator, target\>\>|
	|
	+ adjustmentValueChanged(AdjustmentEvent) : void\l
	}"
	style = "filled"
fillcolor = "green"]
javaawtLinearGradientPaintContext [
	label = "{java.awt::LinearGradientPaintContext|
	- dgdX: float\l
	- dgdY: float\l
	- gc: float\l
	|
	# fillRaster(int[], int, int, int, int, int, int) : void\l
	}"
	]
javabeansPropertyChangeListener [
	label = "{\<\<interface\>\>\njava.beans::PropertyChangeListener\n\<\<decorator\>\>|
	|
	+ propertyChange(PropertyChangeEvent) : void\l
	}"
	style = "filled"
fillcolor = "green"]
javaawtEventDispatchThread [
	label = "{java.awt::EventDispatchThread\n\<\<adaptee\>\>|
	- _eventLog: PlatformLogger_\l
	- theQueue: EventQueue\l
	- doDispatch: boolean\l
	- _ANY_EVENT: int_\l
	- eventFilters: ArrayList\<EventFilter\>\l
	|
	+ run() : void\l
	+ getEventQueue() : EventQueue\l
	 pumpEventsForFilter(Conditional, EventFilter) : void\l
	 pumpEventsForFilter(int, Conditional, EventFilter) : void\l
	 pumpOneEventForFilters(int) : void\l
	+ stopDispatching() : void\l
	 pumpEventsForHierarchy(Conditional, Component) : void\l
	 pumpEventsForHierarchy(int, Conditional, Component) : void\l
	 addEventFilter(EventFilter) : void\l
	 removeEventFilter(EventFilter) : void\l
	 pumpEvents(Conditional) : void\l
	 pumpEvents(int, Conditional) : void\l
	- processException(Throwable) : void\l
	+ setEventQueue(EventQueue) : void\l
	}"
	style = "filled"
fillcolor = "red"]
javaawtList [
	label = "{java.awt::List\n\<\<Leaf\>\>|
	 items: Vector\<String\>\l
	 rows: int\l
	 multipleMode: boolean\l
	 selected: int[]\l
	 visibleIndex: int\l
	 actionListener: ActionListener\l
	 itemListener: ItemListener\l
	- _base: String_\l
	- _nameCounter: int_\l
	- _serialVersionUID: long_\l
	 _DEFAULT_VISIBLE_ROWS: int_\l
	- listSerializedDataVersion: int\l
	|
	+ select(int) : void\l
	# processEvent(AWTEvent) : void\l
	+ getItem(int) : String\l
	+ getSelectedObjects() : Object\l
	# processItemEvent(ItemEvent) : void\l
	# processActionEvent(ActionEvent) : void\l
	+ makeVisible(int) : void\l
	+ getItems() : String\l
	# paramString() : String\l
	+ removeAll() : void\l
	+ isIndexSelected(int) : boolean\l
	+ getMinimumSize() : Dimension\l
	+ getMinimumSize(int) : Dimension\l
	+ preferredSize() : Dimension\l
	+ preferredSize(int) : Dimension\l
	+ allowsMultipleSelections() : boolean\l
	+ getSelectedItem() : String\l
	+ add(String) : void\l
	+ add(String, int) : void\l
	 constructComponentName() : String\l
	+ setMultipleMode(boolean) : void\l
	+ delItems(int, int) : void\l
	+ getSelectedIndexes() : \l
	- writeObject(ObjectOutputStream) : void\l
	+ addActionListener(ActionListener) : void\l
	+ removeItemListener(ItemListener) : void\l
	- readObject(ObjectInputStream) : void\l
	+ minimumSize() : Dimension\l
	+ minimumSize(int) : Dimension\l
	+ removeNotify() : void\l
	+ getSelectedIndex() : int\l
	+ getListeners(, , , EventListener\>, , Class\<\>) : \l
	+ setMultipleSelections(boolean) : void\l
	+ getItemCount() : int\l
	+ isMultipleMode() : boolean\l
	+ getRows() : int\l
	 getItemImpl(int) : String\l
	+ remove(String) : void\l
	+ remove(int) : void\l
	+ addItem(String) : void\l
	+ addItem(String, int) : void\l
	+ getSelectedItems() : String\l
	+ removeActionListener(ActionListener) : void\l
	+ isSelected(int) : boolean\l
	+ addItemListener(ItemListener) : void\l
	+ getItemListeners() : ItemListener\l
	+ getVisibleIndex() : int\l
	+ delItem(int) : void\l
	+ countItems() : int\l
	+ clear() : void\l
	+ getAccessibleContext() : AccessibleContext\l
	+ addNotify() : void\l
	+ getPreferredSize() : Dimension\l
	+ getPreferredSize(int) : Dimension\l
	 eventEnabled(AWTEvent) : boolean\l
	+ deselect(int) : void\l
	+ replaceItem(String, int) : void\l
	+ getActionListeners() : ActionListener\l
	}"
	style = "filled"
fillcolor = "yellow"]
javaawteventWindowListener [
	label = "{\<\<interface\>\>\njava.awt.event::WindowListener\n\<\<target, decorator\>\>|
	|
	+ windowDeactivated(WindowEvent) : void\l
	+ windowClosed(WindowEvent) : void\l
	+ windowOpened(WindowEvent) : void\l
	+ windowActivated(WindowEvent) : void\l
	+ windowClosing(WindowEvent) : void\l
	+ windowDeiconified(WindowEvent) : void\l
	+ windowIconified(WindowEvent) : void\l
	}"
	style = "filled"
fillcolor = "red"]
javaawteventContainerListener [
	label = "{\<\<interface\>\>\njava.awt.event::ContainerListener\n\<\<decorator, target, adaptee\>\>|
	|
	+ componentAdded(ContainerEvent) : void\l
	+ componentRemoved(ContainerEvent) : void\l
	}"
	style = "filled"
fillcolor = "green"]
javaawtMultipleGradientPaintColorSpaceType [
	label = "{java.awt::MultipleGradientPaintColorSpaceType\n\<\<adaptee\>\>|
	+ _SRGB: MultipleGradientPaintColorSpaceType_\l
	+ _LINEAR_RGB: MultipleGradientPaintColorSpaceType_\l
	- _VALUES: MultipleGradientPaintColorSpaceType[]_\l
	|
	+ _valueOf(String) : MultipleGradientPaintColorSpaceType_\l
	+ _values() : MultipleGradientPaintColorSpaceType_\l
	}"
	style = "filled"
fillcolor = "red"]
javaawtDisplayMode [
	label = "{java.awt::DisplayMode|
	- size: Dimension\l
	- bitDepth: int\l
	- refreshRate: int\l
	+ _BIT_DEPTH_MULTI: int_\l
	+ _REFRESH_RATE_UNKNOWN: int_\l
	|
	+ getRefreshRate() : int\l
	+ getHeight() : int\l
	+ hashCode() : int\l
	+ getBitDepth() : int\l
	+ equals(DisplayMode) : boolean\l
	+ equals(Object) : boolean\l
	+ getWidth() : int\l
	}"
	]
javaawtScrollPaneAdjustable [
	label = "{java.awt::ScrollPaneAdjustable\n\<\<adaptee\>\>|
	- sp: ScrollPane\l
	- orientation: int\l
	- value: int\l
	- minimum: int\l
	- maximum: int\l
	- visibleAmount: int\l
	- isAdjusting: boolean\l
	- unitIncrement: int\l
	- blockIncrement: int\l
	- adjustmentListener: AdjustmentListener\l
	- _SCROLLPANE_ONLY: String_\l
	- _serialVersionUID: long_\l
	|
	- setTypedValue(int, int) : void\l
	+ setMaximum(int) : void\l
	- _initIDs() : void_\l
	+ getMaximum() : int\l
	+ getBlockIncrement() : int\l
	+ getUnitIncrement() : int\l
	+ setVisibleAmount(int) : void\l
	+ paramString() : String\l
	+ getOrientation() : int\l
	+ setUnitIncrement(int) : void\l
	+ removeAdjustmentListener(AdjustmentListener) : void\l
	+ addAdjustmentListener(AdjustmentListener) : void\l
	+ getVisibleAmount() : int\l
	+ getMinimum() : int\l
	+ getAdjustmentListeners() : AdjustmentListener\l
	+ setBlockIncrement(int) : void\l
	 setSpan(int, int, int) : void\l
	 _access000(ScrollPaneAdjustable, int, int) : void_\l
	+ getValue() : int\l
	+ setValueIsAdjusting(boolean) : void\l
	+ setValue(int) : void\l
	+ toString() : String\l
	+ getValueIsAdjusting() : boolean\l
	+ setMinimum(int) : void\l
	}"
	style = "filled"
fillcolor = "red"]
javaawtTransparency [
	label = "{\<\<interface\>\>\njava.awt::Transparency|
	+ _OPAQUE: int_\l
	+ _BITMASK: int_\l
	+ _TRANSLUCENT: int_\l
	|
	+ getTransparency() : int\l
	}"
	]
javaawtPrintGraphics [
	label = "{\<\<interface\>\>\njava.awt::PrintGraphics|
	|
	+ getPrintJob() : PrintJob\l
	}"
	]
javaawtAdjustable [
	label = "{\<\<interface\>\>\njava.awt::Adjustable|
	+ _HORIZONTAL: int_\l
	+ _VERTICAL: int_\l
	+ _NO_ORIENTATION: int_\l
	|
	+ setMaximum(int) : void\l
	+ getMaximum() : int\l
	+ getBlockIncrement() : int\l
	+ getUnitIncrement() : int\l
	+ setVisibleAmount(int) : void\l
	+ getValue() : int\l
	+ getOrientation() : int\l
	+ setUnitIncrement(int) : void\l
	+ removeAdjustmentListener(AdjustmentListener) : void\l
	+ addAdjustmentListener(AdjustmentListener) : void\l
	+ getVisibleAmount() : int\l
	+ setValue(int) : void\l
	+ getMinimum() : int\l
	+ setBlockIncrement(int) : void\l
	+ setMinimum(int) : void\l
	}"
	]
javaawtDialogModalityType [
	label = "{java.awt::DialogModalityType\n\<\<adaptee\>\>|
	+ _MODELESS: DialogModalityType_\l
	+ _DOCUMENT_MODAL: DialogModalityType_\l
	+ _APPLICATION_MODAL: DialogModalityType_\l
	+ _TOOLKIT_MODAL: DialogModalityType_\l
	- _VALUES: DialogModalityType[]_\l
	|
	+ _valueOf(String) : DialogModalityType_\l
	+ _values() : DialogModalityType_\l
	}"
	style = "filled"
fillcolor = "red"]
javaawtGraphics [
	label = "{java.awt::Graphics|
	|
	+ drawOval(int, int, int, int) : void\l
	+ fillArc(int, int, int, int, int, int) : void\l
	+ getClipRect() : Rectangle\l
	+ fillRect(int, int, int, int) : void\l
	+ translate(int, int) : void\l
	+ drawString(AttributedCharacterIterator, int, int) : void\l
	+ drawString(String, int, int) : void\l
	+ getFontMetrics() : FontMetrics\l
	+ getFontMetrics(Font) : FontMetrics\l
	+ draw3DRect(int, int, int, int, boolean) : void\l
	+ fillPolygon(Polygon) : void\l
	+ fillPolygon(int[], int[], int) : void\l
	+ getClipBounds() : Rectangle\l
	+ getClipBounds(Rectangle) : Rectangle\l
	+ drawChars(char[], int, int, int, int) : void\l
	+ drawRoundRect(int, int, int, int, int, int) : void\l
	+ fill3DRect(int, int, int, int, boolean) : void\l
	+ create() : Graphics\l
	+ create(int, int, int, int) : Graphics\l
	+ setClip(int, int, int, int) : void\l
	+ setClip(Shape) : void\l
	+ setFont(Font) : void\l
	+ drawPolyline(int[], int[], int) : void\l
	+ fillRoundRect(int, int, int, int, int, int) : void\l
	+ clipRect(int, int, int, int) : void\l
	+ getColor() : Color\l
	+ drawLine(int, int, int, int) : void\l
	+ drawArc(int, int, int, int, int, int) : void\l
	+ copyArea(int, int, int, int, int, int) : void\l
	+ drawBytes(byte[], int, int, int, int) : void\l
	+ clearRect(int, int, int, int) : void\l
	+ setPaintMode() : void\l
	+ drawImage(Image, int, int, ImageObserver) : boolean\l
	+ drawImage(Image, int, int, int, int, int, int, int, int, ImageObserver) : boolean\l
	+ drawImage(Image, int, int, int, int, ImageObserver) : boolean\l
	+ drawImage(Image, int, int, int, int, Color, ImageObserver) : boolean\l
	+ drawImage(Image, int, int, Color, ImageObserver) : boolean\l
	+ drawImage(Image, int, int, int, int, int, int, int, int, Color, ImageObserver) : boolean\l
	+ setColor(Color) : void\l
	+ hitClip(int, int, int, int) : boolean\l
	+ getClip() : Shape\l
	+ getFont() : Font\l
	+ dispose() : void\l
	+ finalize() : void\l
	+ toString() : String\l
	+ fillOval(int, int, int, int) : void\l
	+ setXORMode(Color) : void\l
	+ drawRect(int, int, int, int) : void\l
	+ drawPolygon(Polygon) : void\l
	+ drawPolygon(int[], int[], int) : void\l
	}"
	]
javaawtMenuItem [
	label = "{java.awt::MenuItem\n\<\<Component\>\>|
	 enabled: boolean\l
	 label: String\l
	 actionCommand: String\l
	 eventMask: long\l
	 actionListener: ActionListener\l
	- shortcut: MenuShortcut\l
	- _base: String_\l
	- _nameCounter: int_\l
	- _serialVersionUID: long_\l
	- menuItemSerializedDataVersion: int\l
	|
	+ getListeners(, , , EventListener\>, , Class\<\>) : \l
	 doMenuEvent(long, int) : void\l
	+ getLabel() : String\l
	# processEvent(AWTEvent) : void\l
	- _initIDs() : void_\l
	# processActionEvent(ActionEvent) : void\l
	+ getShortcut() : MenuShortcut\l
	 getShortcutMenuItem(MenuShortcut) : MenuItem\l
	+ paramString() : String\l
	+ removeActionListener(ActionListener) : void\l
	- isItemEnabled() : boolean\l
	+ enable() : void\l
	+ enable(boolean) : void\l
	 handleShortcut(KeyEvent) : boolean\l
	# enableEvents(long) : void\l
	+ setShortcut(MenuShortcut) : void\l
	 constructComponentName() : String\l
	+ deleteShortcut() : void\l
	 deleteShortcut(MenuShortcut) : void\l
	- writeObject(ObjectOutputStream) : void\l
	 _access100(MenuItem) : boolean_\l
	+ addActionListener(ActionListener) : void\l
	 _access000(MenuItem) : MenuShortcut_\l
	+ setActionCommand(String) : void\l
	+ getAccessibleContext() : AccessibleContext\l
	# disableEvents(long) : void\l
	- readObject(ObjectInputStream) : void\l
	+ setEnabled(boolean) : void\l
	 getActionCommandImpl() : String\l
	+ addNotify() : void\l
	 eventEnabled(AWTEvent) : boolean\l
	+ disable() : void\l
	+ isEnabled() : boolean\l
	+ getActionListeners() : ActionListener\l
	+ setLabel(String) : void\l
	+ getActionCommand() : String\l
	}"
	style = "filled"
fillcolor = "yellow"]
javaawtLayoutManager2 [
	label = "{\<\<interface\>\>\njava.awt::LayoutManager2|
	|
	+ invalidateLayout(Container) : void\l
	+ getLayoutAlignmentX(Container) : float\l
	+ getLayoutAlignmentY(Container) : float\l
	+ maximumLayoutSize(Container) : Dimension\l
	+ addLayoutComponent(Component, Object) : void\l
	}"
	]
javaioFilenameFilter [
	label = "{\<\<interface\>\>\njava.io::FilenameFilter\n\<\<adaptee\>\>|
	|
	+ accept(File, String) : boolean\l
	}"
	style = "filled"
fillcolor = "red"]
javaawtimageColorModel [
	label = "{java.awt.image::ColorModel\n\<\<adaptee\>\>|
	- pData: long\l
	# pixel_bits: int\l
	 nBits: int[]\l
	 transparency: int\l
	 supportsAlpha: boolean\l
	 isAlphaPremultiplied: boolean\l
	 numComponents: int\l
	 numColorComponents: int\l
	 colorSpace: ColorSpace\l
	 colorSpaceType: int\l
	 maxBits: int\l
	 is_sRGB: boolean\l
	# transferType: int\l
	- _loaded: boolean_\l
	- _RGBdefault: ColorModel_\l
	 _l8Tos8: byte[]_\l
	 _s8Tol8: byte[]_\l
	 _l16Tos8: byte[]_\l
	 _s8Tol16: short[]_\l
	 _g8Tos8Map: Map\<ICC_ColorSpace, \>_\l
	 _lg16Toog8Map: Map\<ICC_ColorSpace, \>_\l
	 _g16Tos8Map: Map\<ICC_ColorSpace, \>_\l
	 _lg16Toog16Map: Map\<ICC_ColorSpace, \>_\l
	|
	 _getsRGB8ToLinearRGB8LUT() : _\l
	+ getNumColorComponents() : int\l
	 _getGray8TosRGB8LUT(ICC_ColorSpace) : _\l
	- _initIDs() : void_\l
	 _getLinearRGB8TosRGB8LUT() : _\l
	+ coerceData(WritableRaster, boolean) : ColorModel\l
	+ getAlpha(Object) : int\l
	+ getAlpha(int) : int\l
	 _getDefaultTransferType(int) : int_\l
	+ getUnnormalizedComponents(float[], int, int[], int) : \l
	 _isLinearRGBspace(ColorSpace) : boolean_\l
	+ getRed(Object) : int\l
	+ getRed(int) : int\l
	+ getDataElement(float[], int) : int\l
	+ getDataElement(int[], int) : int\l
	+ getTransferType() : int\l
	 _getLinearGray16ToOtherGray16LUT(ICC_ColorSpace) : _\l
	+ hashCode() : int\l
	+ createCompatibleSampleModel(int, int) : SampleModel\l
	 _getLinearGray16ToOtherGray8LUT(ICC_ColorSpace) : _\l
	+ getComponents(Object, int[], int) : \l
	+ getComponents(int, int[], int) : \l
	 _loadLibraries() : void_\l
	+ _getRGBdefault() : ColorModel_\l
	+ hasAlpha() : boolean\l
	+ getAlphaRaster(WritableRaster) : WritableRaster\l
	+ getRGB(Object) : int\l
	+ getRGB(int) : int\l
	+ isCompatibleSampleModel(SampleModel) : boolean\l
	+ getNumComponents() : int\l
	 _getGray16TosRGB8LUT(ICC_ColorSpace) : _\l
	+ getPixelSize() : int\l
	+ getBlue(Object) : int\l
	+ getBlue(int) : int\l
	+ getColorSpace() : ColorSpace\l
	+ createCompatibleWritableRaster(int, int) : WritableRaster\l
	+ isAlphaPremultiplied() : boolean\l
	+ getTransparency() : int\l
	 _isLinearGRAYspace(ColorSpace) : boolean_\l
	+ getNormalizedComponents(Object, float[], int) : \l
	+ getNormalizedComponents(int[], int, float[], int) : \l
	+ getGreen(Object) : int\l
	+ getGreen(int) : int\l
	 _getLinearRGB16TosRGB8LUT() : _\l
	+ equals(Object) : boolean\l
	 _getsRGB8ToLinearRGB16LUT() : _\l
	+ getDataElements(int[], int, Object) : Object\l
	+ getDataElements(float[], int, Object) : Object\l
	+ getDataElements(int, Object) : Object\l
	+ finalize() : void\l
	+ toString() : String\l
	+ isCompatibleRaster(Raster) : boolean\l
	+ getComponentSize() : \l
	+ getComponentSize(int) : int\l
	}"
	style = "filled"
fillcolor = "red"]
javaawtTexturePaint [
	label = "{java.awt::TexturePaint\n\<\<adapter\>\>|
	 bufImg: BufferedImage\l
	 tx: double\l
	 ty: double\l
	 sx: double\l
	 sy: double\l
	|
	+ getAnchorRect() : Rectangle2D\l
	+ getImage() : BufferedImage\l
	+ createContext(ColorModel, Rectangle, Rectangle2D, AffineTransform, RenderingHints) : PaintContext\l
	+ getTransparency() : int\l
	}"
	style = "filled"
fillcolor = "red"]
javaawtPointerInfo [
	label = "{java.awt::PointerInfo|
	- device: GraphicsDevice\l
	- location: Point\l
	|
	+ getLocation() : Point\l
	+ getDevice() : GraphicsDevice\l
	}"
	]
javalangComparable [
	label = "{\<\<interface\>\>\njava.lang::Comparable\n\<\<component\>\>|
	|
	+ compareTo(, ) : int\l
	}"
	style = "filled"
fillcolor = "green"]
javaawtGraphicsConfiguration [
	label = "{java.awt::GraphicsConfiguration|
	- _defaultBufferCaps: BufferCapabilities_\l
	- _defaultImageCaps: ImageCapabilities_\l
	 _assertionsDisabled: boolean_\l
	|
	+ createCompatibleVolatileImage(int, int, int) : VolatileImage\l
	+ createCompatibleVolatileImage(int, int) : VolatileImage\l
	+ createCompatibleVolatileImage(int, int, ImageCapabilities) : VolatileImage\l
	+ createCompatibleVolatileImage(int, int, ImageCapabilities, int) : VolatileImage\l
	+ getColorModel() : ColorModel\l
	+ getColorModel(int) : ColorModel\l
	+ getNormalizingTransform() : AffineTransform\l
	+ getImageCapabilities() : ImageCapabilities\l
	+ createCompatibleImage(int, int, int) : BufferedImage\l
	+ createCompatibleImage(int, int) : BufferedImage\l
	+ getBufferCapabilities() : BufferCapabilities\l
	+ getDefaultTransform() : AffineTransform\l
	+ isTranslucencyCapable() : boolean\l
	+ getDevice() : GraphicsDevice\l
	+ getBounds() : Rectangle\l
	}"
	]
javaawtMultipleGradientPaintContext [
	label = "{java.awt::MultipleGradientPaintContext|
	# model: ColorModel\l
	- _xrgbmodel: ColorModel_\l
	# _cachedModel: ColorModel_\l
	# _cached: WeakReference\<Raster\>_\l
	# saved: Raster\l
	# cycleMethod: MultipleGradientPaintCycleMethod\l
	# colorSpace: MultipleGradientPaintColorSpaceType\l
	# a00: float\l
	# a01: float\l
	# a10: float\l
	# a11: float\l
	# a02: float\l
	# a12: float\l
	# isSimpleLookup: boolean\l
	# fastGradientArraySize: int\l
	# gradient: int[]\l
	- gradients: \l
	- normalizedIntervals: float[]\l
	- fractions: float[]\l
	- transparencyTest: int\l
	- _SRGBtoLinearRGB: int[]_\l
	- _LinearRGBtoSRGB: int[]_\l
	# _GRADIENT_SIZE: int_\l
	# _GRADIENT_SIZE_INDEX: int_\l
	- _MAX_GRADIENT_ARRAY_SIZE: int_\l
	|
	+ getColorModel() : ColorModel\l
	- calculateMultipleArrayGradient(Color[]) : void\l
	- interpolate(int, int, int[]) : void\l
	# fillRaster(int[], int, int, int, int, int, int) : void\l
	- calculateSingleArrayGradient(Color[], float) : void\l
	- _convertSRGBtoLinearRGB(int) : int_\l
	- _getCachedRaster(ColorModel, int, int) : Raster_\l
	- calculateLookupData(Color[]) : void\l
	- _convertLinearRGBtoSRGB(int) : int_\l
	- _putCachedRaster(ColorModel, Raster) : void_\l
	+ dispose() : void\l
	- convertEntireColorLinearRGBtoSRGB(int) : int\l
	# indexIntoGradientsArrays(float) : int\l
	+ getRaster(int, int, int, int) : Raster\l
	}"
	]
javaawtGridBagLayoutInfo [
	label = "{java.awt::GridBagLayoutInfo|
	- _serialVersionUID: long_\l
	 width: int\l
	 height: int\l
	 startx: int\l
	 starty: int\l
	 minWidth: int[]\l
	 minHeight: int[]\l
	 weightX: double[]\l
	 weightY: double[]\l
	 hasBaseline: boolean\l
	 baselineType: short[]\l
	 maxAscent: int[]\l
	 maxDescent: int[]\l
	|
	 hasBaseline(int) : boolean\l
	 hasConstantDescent(int) : boolean\l
	}"
	]
javaawtConditional [
	label = "{\<\<interface\>\>\njava.awt::Conditional\n\<\<adaptee\>\>|
	|
	+ evaluate() : boolean\l
	}"
	style = "filled"
fillcolor = "red"]
javaawtLabel [
	label = "{java.awt::Label\n\<\<Leaf\>\>|
	+ _LEFT: int_\l
	+ _CENTER: int_\l
	+ _RIGHT: int_\l
	 text: String\l
	 alignment: int\l
	- _base: String_\l
	- _nameCounter: int_\l
	- _serialVersionUID: long_\l
	|
	+ getAlignment() : int\l
	+ setAlignment(int) : void\l
	# paramString() : String\l
	 constructComponentName() : String\l
	+ addNotify() : void\l
	+ getText() : String\l
	- _initIDs() : void_\l
	+ getAccessibleContext() : AccessibleContext\l
	- readObject(ObjectInputStream) : void\l
	+ setText(String) : void\l
	}"
	style = "filled"
fillcolor = "yellow"]
javaawtAWTEvent [
	label = "{java.awt::AWTEvent|
	- _log: PlatformLogger_\l
	- bdata: byte[]\l
	# id: int\l
	# consumed: boolean\l
	- acc: AccessControlContext\l
	 focusManagerIsDispatching: boolean\l
	 isPosted: boolean\l
	- isSystemGenerated: boolean\l
	+ _COMPONENT_EVENT_MASK: long_\l
	+ _CONTAINER_EVENT_MASK: long_\l
	+ _FOCUS_EVENT_MASK: long_\l
	+ _KEY_EVENT_MASK: long_\l
	+ _MOUSE_EVENT_MASK: long_\l
	+ _MOUSE_MOTION_EVENT_MASK: long_\l
	+ _WINDOW_EVENT_MASK: long_\l
	+ _ACTION_EVENT_MASK: long_\l
	+ _ADJUSTMENT_EVENT_MASK: long_\l
	+ _ITEM_EVENT_MASK: long_\l
	+ _TEXT_EVENT_MASK: long_\l
	+ _INPUT_METHOD_EVENT_MASK: long_\l
	 _INPUT_METHODS_ENABLED_MASK: long_\l
	+ _PAINT_EVENT_MASK: long_\l
	+ _INVOCATION_EVENT_MASK: long_\l
	+ _HIERARCHY_EVENT_MASK: long_\l
	+ _HIERARCHY_BOUNDS_EVENT_MASK: long_\l
	+ _MOUSE_WHEEL_EVENT_MASK: long_\l
	+ _WINDOW_STATE_EVENT_MASK: long_\l
	+ _WINDOW_FOCUS_EVENT_MASK: long_\l
	+ _RESERVED_ID_MAX: int_\l
	- _inputEvent_CanAccessSystemClipboard_Field: Field_\l
	- _serialVersionUID: long_\l
	|
	+ setSource(Object) : void\l
	 convertToOld() : Event\l
	 dispatched() : void\l
	 _access102(AWTEvent, byte[]) : _\l
	 getAccessControlContext() : AccessControlContext\l
	 _access002(AWTEvent, boolean) : boolean_\l
	 _access200() : PlatformLogger_\l
	 _access100(AWTEvent) : _\l
	 _access000(AWTEvent) : boolean_\l
	- _initIDs() : void_\l
	+ getID() : int\l
	# consume() : void\l
	+ paramString() : String\l
	# isConsumed() : boolean\l
	- _get_InputEvent_CanAccessSystemClipboard() : Field_\l
	- nativeSetSource(ComponentPeer) : void\l
	+ toString() : String\l
	 copyPrivateDataInto(AWTEvent) : void\l
	}"
	]
javautilTimerTask [
	label = "{java.util::TimerTask\n\<\<adaptee\>\>|
	 lock: Object\l
	 state: int\l
	 _VIRGIN: int_\l
	 _SCHEDULED: int_\l
	 _EXECUTED: int_\l
	 _CANCELLED: int_\l
	 nextExecutionTime: long\l
	 period: long\l
	|
	+ cancel() : boolean\l
	+ run() : void\l
	+ scheduledExecutionTime() : long\l
	}"
	style = "filled"
fillcolor = "red"]
javaawtEvent [
	label = "{java.awt::Event|
	- data: long\l
	+ _SHIFT_MASK: int_\l
	+ _CTRL_MASK: int_\l
	+ _META_MASK: int_\l
	+ _ALT_MASK: int_\l
	+ _HOME: int_\l
	+ _END: int_\l
	+ _PGUP: int_\l
	+ _PGDN: int_\l
	+ _UP: int_\l
	+ _DOWN: int_\l
	+ _LEFT: int_\l
	+ _RIGHT: int_\l
	+ _F1: int_\l
	+ _F2: int_\l
	+ _F3: int_\l
	+ _F4: int_\l
	+ _F5: int_\l
	+ _F6: int_\l
	+ _F7: int_\l
	+ _F8: int_\l
	+ _F9: int_\l
	+ _F10: int_\l
	+ _F11: int_\l
	+ _F12: int_\l
	+ _PRINT_SCREEN: int_\l
	+ _SCROLL_LOCK: int_\l
	+ _CAPS_LOCK: int_\l
	+ _NUM_LOCK: int_\l
	+ _PAUSE: int_\l
	+ _INSERT: int_\l
	+ _ENTER: int_\l
	+ _BACK_SPACE: int_\l
	+ _TAB: int_\l
	+ _ESCAPE: int_\l
	+ _DELETE: int_\l
	- _WINDOW_EVENT: int_\l
	+ _WINDOW_DESTROY: int_\l
	+ _WINDOW_EXPOSE: int_\l
	+ _WINDOW_ICONIFY: int_\l
	+ _WINDOW_DEICONIFY: int_\l
	+ _WINDOW_MOVED: int_\l
	- _KEY_EVENT: int_\l
	+ _KEY_PRESS: int_\l
	+ _KEY_RELEASE: int_\l
	+ _KEY_ACTION: int_\l
	+ _KEY_ACTION_RELEASE: int_\l
	- _MOUSE_EVENT: int_\l
	+ _MOUSE_DOWN: int_\l
	+ _MOUSE_UP: int_\l
	+ _MOUSE_MOVE: int_\l
	+ _MOUSE_ENTER: int_\l
	+ _MOUSE_EXIT: int_\l
	+ _MOUSE_DRAG: int_\l
	- _SCROLL_EVENT: int_\l
	+ _SCROLL_LINE_UP: int_\l
	+ _SCROLL_LINE_DOWN: int_\l
	+ _SCROLL_PAGE_UP: int_\l
	+ _SCROLL_PAGE_DOWN: int_\l
	+ _SCROLL_ABSOLUTE: int_\l
	+ _SCROLL_BEGIN: int_\l
	+ _SCROLL_END: int_\l
	- _LIST_EVENT: int_\l
	+ _LIST_SELECT: int_\l
	+ _LIST_DESELECT: int_\l
	- _MISC_EVENT: int_\l
	+ _ACTION_EVENT: int_\l
	+ _LOAD_FILE: int_\l
	+ _SAVE_FILE: int_\l
	+ _GOT_FOCUS: int_\l
	+ _LOST_FOCUS: int_\l
	+ target: Object\l
	+ when: long\l
	+ id: int\l
	+ x: int\l
	+ y: int\l
	+ key: int\l
	+ modifiers: int\l
	+ clickCount: int\l
	+ arg: Object\l
	+ evt: Event\l
	- _actionKeyCodes: _\l
	- consumed: boolean\l
	- _serialVersionUID: long_\l
	|
	+ controlDown() : boolean\l
	- _initIDs() : void_\l
	 consume() : void\l
	 getKeyEventChar() : char\l
	+ translate(int, int) : void\l
	# paramString() : String\l
	 isConsumed() : boolean\l
	 _getOldEventKey(KeyEvent) : int_\l
	+ shiftDown() : boolean\l
	+ metaDown() : boolean\l
	+ toString() : String\l
	}"
	]
javaawtCompositeContext [
	label = "{\<\<interface\>\>\njava.awt::CompositeContext|
	|
	+ compose(Raster, Raster, WritableRaster) : void\l
	+ dispose() : void\l
	}"
	]
javaawteventComponentListener [
	label = "{\<\<interface\>\>\njava.awt.event::ComponentListener\n\<\<decorator, target\>\>|
	|
	+ componentHidden(ComponentEvent) : void\l
	+ componentResized(ComponentEvent) : void\l
	+ componentMoved(ComponentEvent) : void\l
	+ componentShown(ComponentEvent) : void\l
	}"
	style = "filled"
fillcolor = "green"]
javaawtPrintJob [
	label = "{java.awt::PrintJob|
	|
	+ end() : void\l
	+ finalize() : void\l
	+ getGraphics() : Graphics\l
	+ getPageDimension() : Dimension\l
	+ getPageResolution() : int\l
	+ lastPageFirst() : boolean\l
	}"
	]
javaawtKeyboardFocusManager [
	label = "{java.awt::KeyboardFocusManager\n\<\<decorator, Composite\>\>|
	- _focusLog: PlatformLogger_\l
	 peer: KeyboardFocusManagerPeer\l
	- _log: PlatformLogger_\l
	+ _FORWARD_TRAVERSAL_KEYS: int_\l
	+ _BACKWARD_TRAVERSAL_KEYS: int_\l
	+ _UP_CYCLE_TRAVERSAL_KEYS: int_\l
	+ _DOWN_CYCLE_TRAVERSAL_KEYS: int_\l
	 _TRAVERSAL_KEY_LENGTH: int_\l
	- _focusOwner: Component_\l
	- _permanentFocusOwner: Component_\l
	- _focusedWindow: Window_\l
	- _activeWindow: Window_\l
	- defaultPolicy: FocusTraversalPolicy\l
	- _defaultFocusTraversalKeyPropertyNames: String[]_\l
	- _defaultFocusTraversalKeyStrokes: AWTKeyStroke[]_\l
	- defaultFocusTraversalKeys: Set\<AWTKeyStroke\>\l
	- _currentFocusCycleRoot: Container_\l
	- vetoableSupport: VetoableChangeSupport\l
	- changeSupport: PropertyChangeSupport\l
	- keyEventDispatchers: LinkedList\<KeyEventDispatcher\>\l
	- keyEventPostProcessors: LinkedList\<KeyEventPostProcessor\>\l
	- _mostRecentFocusOwners: Map\<Window, WeakReference\<Component\>\>_\l
	- _replaceKeyboardFocusManagerPermission: AWTPermission_\l
	 currentSequencedEvent: SequencedEvent\l
	- _heavyweightRequests: LinkedList\<KeyboardFocusManagerHeavyweightFocusRequest\>_\l
	- _currentLightweightRequests: LinkedList\<KeyboardFocusManagerLightweightFocusRequest\>_\l
	- _clearingCurrentLightweightRequests: boolean_\l
	- _allowSyncFocusRequests: boolean_\l
	- _newFocusOwner: Component_\l
	- _disableRestoreFocus: boolean_\l
	 _SNFH_FAILURE: int_\l
	 _SNFH_SUCCESS_HANDLED: int_\l
	 _SNFH_SUCCESS_PROCEED: int_\l
	 _proxyActive: Field_\l
	 _assertionsDisabled: boolean_\l
	|
	 getCurrentSequencedEvent() : SequencedEvent\l
	+ getFocusedWindow() : Window\l
	+ addKeyEventDispatcher(KeyEventDispatcher) : void\l
	# dequeueKeyEvents(long, Component) : void\l
	 _retargetFocusLost(FocusEvent) : FocusEvent_\l
	+ postProcessKeyEvent(KeyEvent) : boolean\l
	 _retargetUnexpectedFocusEvent(FocusEvent) : FocusEvent_\l
	- _initIDs() : void_\l
	+ setDefaultFocusTraversalPolicy(FocusTraversalPolicy) : void\l
	 _isAutoFocusTransferEnabledFor(Component) : boolean_\l
	# getKeyEventDispatchers() : List\<KeyEventDispatcher\>\l
	 _removeLastFocusRequest(Component) : void_\l
	+ processKeyEvent(Component, KeyEvent) : void\l
	+ getActiveWindow() : Window\l
	# getGlobalCurrentFocusCycleRoot() : Container\l
	- _handleException(Throwable) : void_\l
	 _retargetFocusGained(FocusEvent) : FocusEvent_\l
	+ upFocusCycle() : void\l
	+ upFocusCycle(Component) : void\l
	+ setGlobalCurrentFocusCycleRoot(Container) : void\l
	- _isProxyActiveImpl(KeyEvent) : boolean_\l
	- _clearGlobalFocusOwner() : void\l
	# getGlobalFocusOwner() : Component\l
	# firePropertyChange(String, Object, Object) : void\l
	+ dispatchEvent(AWTEvent) : boolean\l
	- checkKFMSecurity() : void\l
	 _getMostRecentFocusOwner(Window) : Component_\l
	 _isAutoFocusTransferEnabled() : boolean_\l
	 _access000() : Container_\l
	+ removePropertyChangeListener(String, PropertyChangeListener) : void\l
	+ removePropertyChangeListener(PropertyChangeListener) : void\l
	+ getPermanentFocusOwner() : Component\l
	# fireVetoableChange(String, Object, Object) : void\l
	# setGlobalFocusedWindow(Window) : void\l
	- _getLastHWRequest() : KeyboardFocusManagerHeavyweightFocusRequest_\l
	 _initFocusTraversalKeysSet(String, Set\<AWTKeyStroke\>) : Set\<AWTKeyStroke\>_\l
	+ removeVetoableChangeListener(VetoableChangeListener) : void\l
	+ removeVetoableChangeListener(String, VetoableChangeListener) : void\l
	+ clearGlobalFocusOwner() : void\l
	+ removeKeyEventDispatcher(KeyEventDispatcher) : void\l
	# getGlobalPermanentFocusOwner() : Component\l
	# setGlobalActiveWindow(Window) : void\l
	 clearGlobalFocusOwnerPriv() : void\l
	+ addVetoableChangeListener(VetoableChangeListener) : void\l
	+ addVetoableChangeListener(String, VetoableChangeListener) : void\l
	+ focusNextComponent() : void\l
	+ focusNextComponent(Component) : void\l
	+ clearFocusOwner() : void\l
	+ dispatchKeyEvent(KeyEvent) : boolean\l
	 _markClearGlobalFocusOwner() : Window_\l
	- _isTemporary(Component, Component) : boolean_\l
	- _dispatchAndCatchException(Throwable, Component, FocusEvent) : Throwable_\l
	 getCurrentWaitingRequest(Component) : Component\l
	 setGlobalCurrentFocusCycleRootPriv(Container) : void\l
	+ downFocusCycle() : void\l
	+ downFocusCycle(Container) : void\l
	+ _getCurrentKeyboardFocusManager() : KeyboardFocusManager_\l
	 _getCurrentKeyboardFocusManager(AppContext) : KeyboardFocusManager_\l
	# setGlobalFocusOwner(Component) : void\l
	+ getVetoableChangeListeners() : VetoableChangeListener\l
	+ getVetoableChangeListeners(String) : VetoableChangeListener\l
	 dumpRequests() : void\l
	 _clearMostRecentFocusOwner(Component) : void_\l
	 getNativeFocusedWindow() : Window\l
	+ getCurrentFocusCycleRoot() : Container\l
	+ setDefaultFocusTraversalKeys(int, Set\<AWTKeyStroke\>) : void\l
	+ getDefaultFocusTraversalKeys(int) : Set\<AWTKeyStroke\>\l
	+ addPropertyChangeListener(String, PropertyChangeListener) : void\l
	+ addPropertyChangeListener(PropertyChangeListener) : void\l
	 _isProxyActive(KeyEvent) : boolean_\l
	 _processCurrentLightweightRequests() : void_\l
	 _getHeavyweight(Component) : Component_\l
	- _checkReplaceKFMPermission() : void_\l
	 setCurrentSequencedEvent(SequencedEvent) : void\l
	+ getPropertyChangeListeners() : PropertyChangeListener\l
	+ getPropertyChangeListeners(String) : PropertyChangeListener\l
	# enqueueKeyEvents(long, Component) : void\l
	+ getDefaultFocusTraversalPolicy() : FocusTraversalPolicy\l
	# getGlobalFocusedWindow() : Window\l
	# discardKeyEvents(Component) : void\l
	- _getFirstHWRequest() : KeyboardFocusManagerHeavyweightFocusRequest_\l
	 _access100() : PlatformLogger_\l
	 _setMostRecentFocusOwner(Window, Component) : void_\l
	 _setMostRecentFocusOwner(Component) : void_\l
	 setNativeFocusOwner(Component) : void\l
	 _removeFirstRequest() : boolean_\l
	- initPeer() : void\l
	# getKeyEventPostProcessors() : List\<KeyEventPostProcessor\>\l
	+ addKeyEventPostProcessor(KeyEventPostProcessor) : void\l
	+ _setCurrentKeyboardFocusManager(KeyboardFocusManager) : void_\l
	# getGlobalActiveWindow() : Window\l
	+ redispatchEvent(Component, AWTEvent) : void\l
	- _focusedWindowChanged(Component, Component) : boolean_\l
	+ removeKeyEventPostProcessor(KeyEventPostProcessor) : void\l
	 clearMarkers() : void\l
	 getNativeFocusOwner() : Component\l
	+ focusPreviousComponent() : void\l
	+ focusPreviousComponent(Component) : void\l
	+ getFocusOwner() : Component\l
	 _shouldNativelyFocusHeavyweight(Component, Component, boolean, boolean, long, CausedFocusEventCause) : int_\l
	 _processSynchronousLightweightTransfer(Component, Component, boolean, boolean, long) : boolean_\l
	# setGlobalPermanentFocusOwner(Component) : void\l
	 _retargetFocusEvent(AWTEvent) : AWTEvent_\l
	}"
	style = "filled"
fillcolor = "green"]
javaawtPaint [
	label = "{\<\<interface\>\>\njava.awt::Paint|
	|
	+ createContext(ColorModel, Rectangle, Rectangle2D, AffineTransform, RenderingHints) : PaintContext\l
	}"
	]
javaawtTexturePaintContext [
	label = "{java.awt::TexturePaintContext|
	+ _xrgbmodel: ColorModel_\l
	+ _argbmodel: ColorModel_\l
	 colorModel: ColorModel\l
	 bWidth: int\l
	 bHeight: int\l
	 maxWidth: int\l
	 outRas: WritableRaster\l
	 xOrg: double\l
	 yOrg: double\l
	 incXAcross: double\l
	 incYAcross: double\l
	 incXDown: double\l
	 incYDown: double\l
	 colincx: int\l
	 colincy: int\l
	 colincxerr: int\l
	 colincyerr: int\l
	 rowincx: int\l
	 rowincy: int\l
	 rowincxerr: int\l
	 rowincyerr: int\l
	- _xrgbRasRef: WeakReference\<Raster\>_\l
	- _argbRasRef: WeakReference\<Raster\>_\l
	- _byteRasRef: WeakReference\<Raster\>_\l
	|
	+ _isFilterableDCM(ColorModel) : boolean_\l
	 _mod(double, double) : double_\l
	+ getColorModel() : ColorModel\l
	 _dropByteRaster(Raster) : void_\l
	 _fractAsInt(double) : int_\l
	+ _isFilterableICM(ColorModel) : boolean_\l
	+ _blend(int[], int, int) : int_\l
	+ _isMaskOK(int, boolean) : boolean_\l
	+ _getInternedColorModel(ColorModel) : ColorModel_\l
	 _makeRaster(ColorModel, Raster, int, int) : WritableRaster_\l
	+ makeRaster(int, int) : WritableRaster\l
	 _dropRaster(ColorModel, Raster) : void_\l
	+ dispose() : void\l
	+ _getContext(BufferedImage, AffineTransform, RenderingHints, Rectangle) : PaintContext_\l
	 _makeByteRaster(Raster, int, int) : WritableRaster_\l
	+ setRaster(int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int) : void\l
	+ getRaster(int, int, int, int) : Raster\l
	}"
	]
javaawtComponent [
	label = "{java.awt::Component|
	- _log: PlatformLogger_\l
	- _eventLog: PlatformLogger_\l
	- _focusLog: PlatformLogger_\l
	- _mixingLog: PlatformLogger_\l
	 peer: ComponentPeer\l
	 parent: Container\l
	 appContext: AppContext\l
	 x: int\l
	 y: int\l
	 width: int\l
	 height: int\l
	 foreground: Color\l
	 background: Color\l
	 font: Font\l
	 peerFont: Font\l
	 cursor: Cursor\l
	 locale: Locale\l
	- graphicsConfig: GraphicsConfiguration\l
	 bufferStrategy: BufferStrategy\l
	 ignoreRepaint: boolean\l
	 visible: boolean\l
	 enabled: boolean\l
	- valid: boolean\l
	 dropTarget: DropTarget\l
	 popups: Vector\<PopupMenu\>\l
	- name: String\l
	- nameExplicitlySet: boolean\l
	- focusable: boolean\l
	- _FOCUS_TRAVERSABLE_UNKNOWN: int_\l
	- _FOCUS_TRAVERSABLE_DEFAULT: int_\l
	- _FOCUS_TRAVERSABLE_SET: int_\l
	- isFocusTraversableOverridden: int\l
	 focusTraversalKeys: Set\<AWTKeyStroke\>\l
	- _focusTraversalKeyPropertyNames: String[]_\l
	- focusTraversalKeysEnabled: boolean\l
	 _LOCK: Object_\l
	- acc: AccessControlContext\l
	 minSize: Dimension\l
	 minSizeSet: boolean\l
	 prefSize: Dimension\l
	 prefSizeSet: boolean\l
	 maxSize: Dimension\l
	 maxSizeSet: boolean\l
	 componentOrientation: ComponentOrientation\l
	 newEventsOnly: boolean\l
	 componentListener: ComponentListener\l
	 focusListener: FocusListener\l
	 hierarchyListener: HierarchyListener\l
	 hierarchyBoundsListener: HierarchyBoundsListener\l
	 keyListener: KeyListener\l
	 mouseListener: MouseListener\l
	 mouseMotionListener: MouseMotionListener\l
	 mouseWheelListener: MouseWheelListener\l
	 inputMethodListener: InputMethodListener\l
	 windowClosingException: RuntimeException\l
	 _actionListenerK: String_\l
	 _adjustmentListenerK: String_\l
	 _componentListenerK: String_\l
	 _containerListenerK: String_\l
	 _focusListenerK: String_\l
	 _itemListenerK: String_\l
	 _keyListenerK: String_\l
	 _mouseListenerK: String_\l
	 _mouseMotionListenerK: String_\l
	 _mouseWheelListenerK: String_\l
	 _textListenerK: String_\l
	 _ownedWindowK: String_\l
	 _windowListenerK: String_\l
	 _inputMethodListenerK: String_\l
	 _hierarchyListenerK: String_\l
	 _hierarchyBoundsListenerK: String_\l
	 _windowStateListenerK: String_\l
	 _windowFocusListenerK: String_\l
	 eventMask: long\l
	 _isInc: boolean_\l
	 _incRate: int_\l
	+ _TOP_ALIGNMENT: float_\l
	+ _CENTER_ALIGNMENT: float_\l
	+ _BOTTOM_ALIGNMENT: float_\l
	+ _LEFT_ALIGNMENT: float_\l
	+ _RIGHT_ALIGNMENT: float_\l
	- _serialVersionUID: long_\l
	- changeSupport: PropertyChangeSupport\l
	- objectLock: Object\l
	 isPacked: boolean\l
	- boundsOp: int\l
	- compoundShape: Region\l
	- mixingCutoutRegion: Region\l
	- isAddNotifyComplete: boolean\l
	 backgroundEraseDisabled: boolean\l
	 eventCache: EventQueueItem[]\l
	- coalescingEnabled: boolean\l
	- _coalesceMap: Map\<Class\<\> Boolean\>_\l
	- _coalesceEventsParams: Class[]_\l
	- _requestFocusController: RequestFocusController_\l
	- autoFocusTransferOnDisposal: boolean\l
	- componentSerializedDataVersion: int\l
	# accessibleContext: AccessibleContext\l
	 _assertionsDisabled: boolean_\l
	|
	- notifyNewBounds(boolean, boolean) : void\l
	 getFont_NoClientCode() : Font\l
	+ getLocation() : Point\l
	+ getLocation(Point) : Point\l
	+ requestFocusInWindow() : boolean\l
	 requestFocusInWindow(CausedFocusEventCause) : boolean\l
	 requestFocusInWindow(boolean, CausedFocusEventCause) : boolean\l
	# requestFocusInWindow(boolean) : boolean\l
	+ isOpaque() : boolean\l
	# processComponentEvent(ComponentEvent) : void\l
	# processEvent(AWTEvent) : void\l
	 isNonOpaqueForMixing() : boolean\l
	+ paint(Graphics) : void\l
	+ getInputMethodListeners() : InputMethodListener\l
	+ mouseDown(Event, int, int) : boolean\l
	+ getInputMethodRequests() : InputMethodRequests\l
	 mixOnValidating() : void\l
	# paramString() : String\l
	+ addHierarchyBoundsListener(HierarchyBoundsListener) : void\l
	+ getMinimumSize() : Dimension\l
	+ getAlignmentY() : float\l
	# processMouseEvent(MouseEvent) : void\l
	+ getAlignmentX() : float\l
	 getNextFocusCandidate() : Component\l
	+ dispatchEvent(AWTEvent) : void\l
	 _access400(Component) : Insets_\l
	 getBackBuffer() : Image\l
	+ reshape(int, int, int, int) : void\l
	# disableEvents(long) : void\l
	+ postEvent(Event) : boolean\l
	- readObject(ObjectInputStream) : void\l
	 createBufferStrategy(int, BufferCapabilities) : void\l
	 createBufferStrategy(int) : void\l
	+ contains(int, int) : boolean\l
	+ contains(Point) : boolean\l
	+ size() : Dimension\l
	 getContainingWindow() : Window\l
	+ enableInputMethods(boolean) : void\l
	+ mouseUp(Event, int, int) : boolean\l
	# processMouseMotionEvent(MouseEvent) : void\l
	 getParent_NoClientCode() : Container\l
	 clearCurrentFocusCycleRootOnHide() : void\l
	+ addComponentListener(ComponentListener) : void\l
	 getSiblingIndexAbove() : int\l
	+ setName(String) : void\l
	+ removeInputMethodListener(InputMethodListener) : void\l
	+ removeHierarchyListener(HierarchyListener) : void\l
	 subtractAndApplyShapeBelowMe() : void\l
	+ getFontMetrics(Font) : FontMetrics\l
	 createHierarchyEvents(int, Component, Container, long, boolean) : int\l
	+ getHeight() : int\l
	 getNormalShape() : Region\l
	+ getBaselineResizeBehavior() : ComponentBaselineResizeBehavior\l
	+ getIgnoreRepaint() : boolean\l
	+ removeMouseWheelListener(MouseWheelListener) : void\l
	 canBeFocusOwner() : boolean\l
	+ getPeer() : ComponentPeer\l
	- isRequestFocusAccepted(boolean, boolean, CausedFocusEventCause) : boolean\l
	+ applyComponentOrientation(ComponentOrientation) : void\l
	+ validate() : void\l
	 applyCurrentShape() : void\l
	 eventTypeEnabled(int) : boolean\l
	+ getParent() : Container\l
	 _access500(Class) : boolean_\l
	+ isMinimumSizeSet() : boolean\l
	 applyCompoundShape(Region) : void\l
	+ setComponentOrientation(ComponentOrientation) : void\l
	 autoProcessMouseWheel(MouseWheelEvent) : void\l
	+ setBounds(Rectangle) : void\l
	+ setBounds(int, int, int, int) : void\l
	 isRecursivelyVisible() : boolean\l
	 isMixingNeeded() : boolean\l
	 lightweightPaint(Graphics) : void\l
	- applyCurrentShapeBelowMe() : void\l
	 dispatchMouseWheelToAncestor(MouseWheelEvent) : boolean\l
	- getAppliedShape() : Region\l
	+ addNotify() : void\l
	+ addInputMethodListener(InputMethodListener) : void\l
	+ getFocusCycleRootAncestor() : Container\l
	+ toString() : String\l
	 invalidateParent() : void\l
	+ getName() : String\l
	 getFocusTraversalKeys_NoIDCheck(int) : Set\<AWTKeyStroke\>\l
	 areInputMethodsEnabled() : boolean\l
	+ isFocusTraversable() : boolean\l
	+ inside(int, int) : boolean\l
	# processKeyEvent(KeyEvent) : void\l
	+ getInputContext() : InputContext\l
	+ getFocusTraversalKeys(int) : Set\<AWTKeyStroke\>\l
	+ nextFocus() : void\l
	+ isCursorSet() : boolean\l
	+ getMouseWheelListeners() : MouseWheelListener\l
	+ doLayout() : void\l
	+ removeMouseMotionListener(MouseMotionListener) : void\l
	+ setVisible(boolean) : void\l
	+ add(PopupMenu) : void\l
	 constructComponentName() : String\l
	 clearMostRecentFocusOwnerOnHide() : void\l
	+ removeKeyListener(KeyListener) : void\l
	# processInputMethodEvent(InputMethodEvent) : void\l
	 getAccessibleIndexInParent() : int\l
	+ isVisible() : boolean\l
	+ setDropTarget(DropTarget) : void\l
	+ list() : void\l
	+ list(PrintWriter, int) : void\l
	+ list(PrintWriter) : void\l
	+ list(PrintStream, int) : void\l
	+ list(PrintStream) : void\l
	+ removePropertyChangeListener(String, PropertyChangeListener) : void\l
	+ removePropertyChangeListener(PropertyChangeListener) : void\l
	- _isCoalesceEventsOverriden(Class\<\>) : boolean_\l
	+ revalidate() : void\l
	+ removeNotify() : void\l
	 setAutoFocusTransferOnDisposal(boolean) : void\l
	 clearLightweightDispatcherOnRemove(Component) : void\l
	 relocateComponent() : void\l
	 updateZOrder() : void\l
	+ gotFocus(Event, Object) : boolean\l
	 mixOnShowing() : void\l
	+ handleEvent(Event) : boolean\l
	+ isForegroundSet() : boolean\l
	+ show() : void\l
	+ show(boolean) : void\l
	+ update(Graphics) : void\l
	# processFocusEvent(FocusEvent) : void\l
	+ setMaximumSize(Dimension) : void\l
	# coalesceEvents(AWTEvent, AWTEvent) : AWTEvent\l
	+ remove(MenuComponent) : void\l
	+ imageUpdate(Image, int, int, int, int, int) : boolean\l
	+ addMouseWheelListener(MouseWheelListener) : void\l
	 printHeavyweightComponents(Graphics) : void\l
	+ checkImage(Image, ImageObserver) : int\l
	+ checkImage(Image, int, int, ImageObserver) : int\l
	 getObjectLock() : Object\l
	+ addKeyListener(KeyListener) : void\l
	+ getComponentListeners() : ComponentListener\l
	+ isMaximumSizeSet() : boolean\l
	+ addPropertyChangeListener(String, PropertyChangeListener) : void\l
	+ addPropertyChangeListener(PropertyChangeListener) : void\l
	- location_NoClientCode() : Point\l
	+ getCursor() : Cursor\l
	 adjustListeningChildrenOnParent(long, int) : void\l
	+ createImage(int, int) : Image\l
	+ createImage(ImageProducer) : Image\l
	+ mouseMove(Event, int, int) : boolean\l
	+ areFocusTraversalKeysSet(int) : boolean\l
	+ getKeyListeners() : KeyListener\l
	 checkWindowClosingException() : boolean\l
	+ layout() : void\l
	+ getBaseline(int, int) : int\l
	+ print(Graphics) : void\l
	+ getFocusListeners() : FocusListener\l
	+ resize(Dimension) : void\l
	+ resize(int, int) : void\l
	+ createVolatileImage(int, int) : VolatileImage\l
	+ createVolatileImage(int, int, ImageCapabilities) : VolatileImage\l
	+ location() : Point\l
	+ lostFocus(Event, Object) : boolean\l
	+ getDropTarget() : DropTarget\l
	+ keyDown(Event, int) : boolean\l
	+ getLocale() : Locale\l
	 subtractAndApplyShape(Region) : void\l
	+ getHierarchyBoundsListeners() : HierarchyBoundsListener\l
	 getOpaqueShape() : Region\l
	 setGraphicsConfiguration(GraphicsConfiguration) : void\l
	+ getBounds() : Rectangle\l
	+ getBounds(Rectangle) : Rectangle\l
	+ setPreferredSize(Dimension) : void\l
	+ enable() : void\l
	+ enable(boolean) : void\l
	 getCursor_NoClientCode() : Cursor\l
	+ getMousePosition() : Point\l
	 postsOldMouseEvents() : boolean\l
	+ action(Event, Object) : boolean\l
	 countHierarchyMembers() : int\l
	+ firePropertyChange(String, byte, byte) : void\l
	# firePropertyChange(String, boolean, boolean) : void\l
	+ firePropertyChange(String, short, short) : void\l
	# firePropertyChange(String, Object, Object) : void\l
	+ firePropertyChange(String, double, double) : void\l
	+ firePropertyChange(String, float, float) : void\l
	+ firePropertyChange(String, char, char) : void\l
	# firePropertyChange(String, int, int) : void\l
	+ firePropertyChange(String, long, long) : void\l
	 getAccessControlContext() : AccessControlContext\l
	 getContainer() : Container\l
	 _access002(Component, Region) : Region_\l
	+ addMouseMotionListener(MouseMotionListener) : void\l
	 getBoundsOp() : int\l
	+ setFocusable(boolean) : void\l
	+ getComponentOrientation() : ComponentOrientation\l
	+ getTreeLock() : Object\l
	+ isBackgroundSet() : boolean\l
	+ addHierarchyListener(HierarchyListener) : void\l
	- doSwingSerialization() : void\l
	+ setEnabled(boolean) : void\l
	 revalidateSynchronously() : void\l
	+ isLightweight() : boolean\l
	+ isEnabled() : boolean\l
	+ minimumSize() : Dimension\l
	 areBoundsValid() : boolean\l
	+ bounds() : Rectangle\l
	 numListening(long) : int\l
	 _isInstanceOf(Object, String) : boolean_\l
	 containsFocus() : boolean\l
	 isSameOrAncestorOf(Component, boolean) : boolean\l
	+ repaint() : void\l
	+ repaint(long) : void\l
	+ repaint(int, int, int, int) : void\l
	+ repaint(long, int, int, int, int) : void\l
	+ getMouseMotionListeners() : MouseMotionListener\l
	+ setMinimumSize(Dimension) : void\l
	+ transferFocus() : void\l
	 transferFocus(boolean) : boolean\l
	+ getListeners(, , , EventListener\>, , Class\<\>) : \l
	 getAccessibleStateSet() : AccessibleStateSet\l
	 updateGraphicsData(GraphicsConfiguration) : boolean\l
	+ getMaximumSize() : Dimension\l
	 isVisible_NoClientCode() : boolean\l
	+ getLocationOnScreen() : Point\l
	+ keyUp(Event, int) : boolean\l
	+ getWidth() : int\l
	 pointRelativeToComponent(Point) : Point\l
	- reshapeNativePeer(int, int, int, int, int) : void\l
	+ paintAll(Graphics) : void\l
	 paintHeavyweightComponents(Graphics) : void\l
	+ setFocusTraversalKeys(int, Set\<AWTKeyStroke\>) : void\l
	+ hasFocus() : boolean\l
	+ isPreferredSizeSet() : boolean\l
	+ isDoubleBuffered() : boolean\l
	+ getColorModel() : ColorModel\l
	# processHierarchyEvent(HierarchyEvent) : void\l
	+ getPropertyChangeListeners() : PropertyChangeListener\l
	+ getPropertyChangeListeners(String) : PropertyChangeListener\l
	 _access100(Component) : Point_\l
	+ isValid() : boolean\l
	 mixOnZOrderChanging(int, int) : void\l
	 mixOnHiding(boolean) : void\l
	+ getFocusTraversalKeysEnabled() : boolean\l
	 invalidateIfValid() : void\l
	 setFocusTraversalKeys_NoIDCheck(int, Set\<AWTKeyStroke\>) : void\l
	+ hide() : void\l
	+ getPreferredSize() : Dimension\l
	 eventEnabled(AWTEvent) : boolean\l
	+ disable() : void\l
	 isFocusTraversableOverridden() : boolean\l
	+ prepareImage(Image, ImageObserver) : boolean\l
	+ prepareImage(Image, int, int, ImageObserver) : boolean\l
	 updateCursorImmediately() : void\l
	+ isFocusable() : boolean\l
	 getLocationOnScreen_NoTreeLock() : Point\l
	 setBoundsOp(int) : void\l
	- _initIDs() : void_\l
	 isEnabledImpl() : boolean\l
	+ mouseExit(Event, int, int) : boolean\l
	+ getHierarchyListeners() : HierarchyListener\l
	+ isShowing() : boolean\l
	+ mouseEnter(Event, int, int) : boolean\l
	 getSiblingIndexBelow() : int\l
	+ mouseDrag(Event, int, int) : boolean\l
	+ preferredSize() : Dimension\l
	 checkTreeLock() : void\l
	+ getMouseListeners() : MouseListener\l
	 getHWPeerAboveMe() : ComponentPeer\l
	+ setFont(Font) : void\l
	- getInsets_NoClientCode() : Insets\l
	- writeObject(ObjectOutputStream) : void\l
	 getTraversalRoot() : Container\l
	 isAutoFocusTransferOnDisposal() : boolean\l
	 getLocationOnWindow() : Point\l
	+ deliverEvent(Event) : void\l
	 getToolkitImpl() : Toolkit\l
	+ getForeground() : Color\l
	 getNativeContainer() : Container\l
	 mixOnReshaping() : void\l
	 lightweightPrint(Graphics) : void\l
	 findUnderMouseInWindow(PointerInfo) : Component\l
	+ getFont() : Font\l
	+ setCursor(Cursor) : void\l
	+ getGraphicsConfiguration() : GraphicsConfiguration\l
	+ isDisplayable() : boolean\l
	+ setLocale(Locale) : void\l
	+ removeComponentListener(ComponentListener) : void\l
	- calculateCurrentShape() : Region\l
	+ requestFocus() : void\l
	 requestFocus(CausedFocusEventCause) : boolean\l
	 requestFocus(boolean, CausedFocusEventCause) : boolean\l
	# requestFocus(boolean) : boolean\l
	+ locate(int, int) : Component\l
	+ addFocusListener(FocusListener) : void\l
	 initializeFocusTraversalKeys() : void\l
	+ getComponentAt(int, int) : Component\l
	+ getComponentAt(Point) : Component\l
	# processHierarchyBoundsEvent(HierarchyEvent) : void\l
	 _setRequestFocusController(RequestFocusController) : void_\l
	+ isFocusCycleRoot(Container) : boolean\l
	+ setFocusTraversalKeysEnabled(boolean) : void\l
	+ setBackground(Color) : void\l
	+ printAll(Graphics) : void\l
	+ getToolkit() : Toolkit\l
	+ transferFocusUpCycle() : void\l
	+ isFontSet() : boolean\l
	+ setSize(Dimension) : void\l
	+ setSize(int, int) : void\l
	- repaintParentIfNeeded(int, int, int, int) : void\l
	+ setLocation(int, int) : void\l
	+ setLocation(Point) : void\l
	 isCoalescingEnabled() : boolean\l
	 requestFocusHelper(boolean, boolean) : boolean\l
	 requestFocusHelper(boolean, boolean, CausedFocusEventCause) : boolean\l
	 checkGD(String) : void\l
	+ getGraphics() : Graphics\l
	+ setIgnoreRepaint(boolean) : void\l
	+ removeFocusListener(FocusListener) : void\l
	# enableEvents(long) : void\l
	+ transferFocusBackward() : void\l
	 transferFocusBackward(boolean) : boolean\l
	 getGraphicsConfiguration_NoClientCode() : GraphicsConfiguration\l
	+ move(int, int) : void\l
	+ setForeground(Color) : void\l
	+ invalidate() : void\l
	 getBufferStrategy() : BufferStrategy\l
	+ getAccessibleContext() : AccessibleContext\l
	- checkCoalescing() : boolean\l
	+ isFocusOwner() : boolean\l
	+ getSize(Dimension) : Dimension\l
	+ getSize() : Dimension\l
	+ getX() : int\l
	 getGraphics_NoClientCode() : Graphics\l
	+ getY() : int\l
	+ removeHierarchyBoundsListener(HierarchyBoundsListener) : void\l
	# processMouseWheelEvent(MouseWheelEvent) : void\l
	 canBeFocusOwnerRecursively() : boolean\l
	+ removeMouseListener(MouseListener) : void\l
	+ getBackground() : Color\l
	 dispatchEventImpl(AWTEvent) : void\l
	+ addMouseListener(MouseListener) : void\l
	}"
	]
javaawteventFocusListener [
	label = "{\<\<interface\>\>\njava.awt.event::FocusListener\n\<\<decorator, target\>\>|
	|
	+ focusGained(FocusEvent) : void\l
	+ focusLost(FocusEvent) : void\l
	}"
	style = "filled"
fillcolor = "green"]
javaawtPopupMenu [
	label = "{java.awt::PopupMenu\n\<\<Composite\>\>|
	- _base: String_\l
	 _nameCounter: int_\l
	 isTrayIconPopup: boolean\l
	- _serialVersionUID: long_\l
	|
	+ getParent() : MenuContainer\l
	 constructComponentName() : String\l
	+ addNotify() : void\l
	+ show(Component, int, int) : void\l
	+ getAccessibleContext() : AccessibleContext\l
	}"
	style = "filled"
fillcolor = "yellow"]
javaawtCheckboxGroup [
	label = "{java.awt::CheckboxGroup|
	 selectedCheckbox: Checkbox\l
	- _serialVersionUID: long_\l
	|
	+ getSelectedCheckbox() : Checkbox\l
	+ toString() : String\l
	+ getCurrent() : Checkbox\l
	+ setSelectedCheckbox(Checkbox) : void\l
	+ setCurrent(Checkbox) : void\l
	}"
	]
javaawtTextArea [
	label = "{java.awt::TextArea|
	 rows: int\l
	 columns: int\l
	- _base: String_\l
	- _nameCounter: int_\l
	+ _SCROLLBARS_BOTH: int_\l
	+ _SCROLLBARS_VERTICAL_ONLY: int_\l
	+ _SCROLLBARS_HORIZONTAL_ONLY: int_\l
	+ _SCROLLBARS_NONE: int_\l
	- scrollbarVisibility: int\l
	- _forwardTraversalKeys: Set\<AWTKeyStroke\>_\l
	- _backwardTraversalKeys: Set\<AWTKeyStroke\>_\l
	- _serialVersionUID: long_\l
	- textAreaSerializedDataVersion: int\l
	|
	+ getScrollbarVisibility() : int\l
	+ setColumns(int) : void\l
	 constructComponentName() : String\l
	+ replaceText(String, int, int) : void\l
	- _initIDs() : void_\l
	+ insert(String, int) : void\l
	+ getRows() : int\l
	+ getAccessibleContext() : AccessibleContext\l
	+ getColumns() : int\l
	- readObject(ObjectInputStream) : void\l
	+ insertText(String, int) : void\l
	# paramString() : String\l
	+ setRows(int) : void\l
	+ addNotify() : void\l
	+ replaceRange(String, int, int) : void\l
	+ getPreferredSize() : Dimension\l
	+ getPreferredSize(int, int) : Dimension\l
	+ getMinimumSize() : Dimension\l
	+ getMinimumSize(int, int) : Dimension\l
	+ minimumSize() : Dimension\l
	+ minimumSize(int, int) : Dimension\l
	+ preferredSize() : Dimension\l
	+ preferredSize(int, int) : Dimension\l
	+ appendText(String) : void\l
	+ append(String) : void\l
	}"
	]
javaawtGridBagConstraints [
	label = "{java.awt::GridBagConstraints|
	+ _RELATIVE: int_\l
	+ _REMAINDER: int_\l
	+ _NONE: int_\l
	+ _BOTH: int_\l
	+ _HORIZONTAL: int_\l
	+ _VERTICAL: int_\l
	+ _CENTER: int_\l
	+ _NORTH: int_\l
	+ _NORTHEAST: int_\l
	+ _EAST: int_\l
	+ _SOUTHEAST: int_\l
	+ _SOUTH: int_\l
	+ _SOUTHWEST: int_\l
	+ _WEST: int_\l
	+ _NORTHWEST: int_\l
	+ _PAGE_START: int_\l
	+ _PAGE_END: int_\l
	+ _LINE_START: int_\l
	+ _LINE_END: int_\l
	+ _FIRST_LINE_START: int_\l
	+ _FIRST_LINE_END: int_\l
	+ _LAST_LINE_START: int_\l
	+ _LAST_LINE_END: int_\l
	+ _BASELINE: int_\l
	+ _BASELINE_LEADING: int_\l
	+ _BASELINE_TRAILING: int_\l
	+ _ABOVE_BASELINE: int_\l
	+ _ABOVE_BASELINE_LEADING: int_\l
	+ _ABOVE_BASELINE_TRAILING: int_\l
	+ _BELOW_BASELINE: int_\l
	+ _BELOW_BASELINE_LEADING: int_\l
	+ _BELOW_BASELINE_TRAILING: int_\l
	+ gridx: int\l
	+ gridy: int\l
	+ gridwidth: int\l
	+ gridheight: int\l
	+ weightx: double\l
	+ weighty: double\l
	+ anchor: int\l
	+ fill: int\l
	+ insets: Insets\l
	+ ipadx: int\l
	+ ipady: int\l
	 tempX: int\l
	 tempY: int\l
	 tempWidth: int\l
	 tempHeight: int\l
	 minWidth: int\l
	 minHeight: int\l
	 ascent: int\l
	 descent: int\l
	 baselineResizeBehavior: ComponentBaselineResizeBehavior\l
	 centerPadding: int\l
	 centerOffset: int\l
	- _serialVersionUID: long_\l
	|
	+ clone() : Object\l
	 isVerticallyResizable() : boolean\l
	}"
	]
javaawtSequencedEvent [
	label = "{java.awt::SequencedEvent|
	- _serialVersionUID: long_\l
	- _ID: int_\l
	- _list: LinkedList\<SequencedEvent\>_\l
	- nested: AWTEvent\l
	- appContext: AppContext\l
	- disposed: boolean\l
	|
	+ isFirstOrDisposed() : boolean\l
	+ dispatch() : void\l
	- _getFirst() : SequencedEvent_\l
	- _getFirstWithContext() : SequencedEvent_\l
	 _access000(SequencedEvent) : AWTEvent_\l
	 dispose() : void\l
	- _isOwnerAppContextDisposed(SequencedEvent) : boolean_\l
	}"
	]
javaniofilePath [
	label = "{\<\<interface\>\>\njava.nio.file::Path\n\<\<decorator\>\>|
	|
	+ getParent() : Path\l
	+ getNameCount() : int\l
	+ getName(int) : Path\l
	+ resolve(String) : Path\l
	+ resolve(Path) : Path\l
	+ resolveSibling(String) : Path\l
	+ resolveSibling(Path) : Path\l
	+ toUri() : URI\l
	+ subpath(int, int) : Path\l
	+ toAbsolutePath() : Path\l
	+ getFileSystem() : FileSystem\l
	+ compareTo(Path) : int\l
	+ compareTo(Object) : int\l
	+ iterator() : Iterator\<Path\>\l
	+ hashCode() : int\l
	+ normalize() : Path\l
	+ equals(Object) : boolean\l
	+ endsWith(String) : boolean\l
	+ endsWith(Path) : boolean\l
	+ toRealPath(LinkOption[]) : Path\l
	+ toFile() : File\l
	+ isAbsolute() : boolean\l
	+ toString() : String\l
	+ relativize(Path) : Path\l
	+ getRoot() : Path\l
	+ getFileName() : Path\l
	+ startsWith(String) : boolean\l
	+ startsWith(Path) : boolean\l
	+ register(WatchService, WatchEventKind\<\>, WatchEventModifier[]) : WatchKey\l
	+ register(WatchService, WatchEventKind\<\>) : WatchKey\l
	}"
	style = "filled"
fillcolor = "green"]
javaawtBufferCapabilities [
	label = "{java.awt::BufferCapabilities|
	- frontCaps: ImageCapabilities\l
	- backCaps: ImageCapabilities\l
	- flipContents: BufferCapabilitiesFlipContents\l
	|
	+ isPageFlipping() : boolean\l
	+ getFlipContents() : BufferCapabilitiesFlipContents\l
	+ getBackBufferCapabilities() : ImageCapabilities\l
	+ isFullScreenRequired() : boolean\l
	+ clone() : Object\l
	+ isMultiBufferAvailable() : boolean\l
	+ getFrontBufferCapabilities() : ImageCapabilities\l
	}"
	]
javaawtAlphaComposite [
	label = "{java.awt::AlphaComposite|
	+ _CLEAR: int_\l
	+ _SRC: int_\l
	+ _DST: int_\l
	+ _SRC_OVER: int_\l
	+ _DST_OVER: int_\l
	+ _SRC_IN: int_\l
	+ _DST_IN: int_\l
	+ _SRC_OUT: int_\l
	+ _DST_OUT: int_\l
	+ _SRC_ATOP: int_\l
	+ _DST_ATOP: int_\l
	+ _XOR: int_\l
	+ _Clear: AlphaComposite_\l
	+ _Src: AlphaComposite_\l
	+ _Dst: AlphaComposite_\l
	+ _SrcOver: AlphaComposite_\l
	+ _DstOver: AlphaComposite_\l
	+ _SrcIn: AlphaComposite_\l
	+ _DstIn: AlphaComposite_\l
	+ _SrcOut: AlphaComposite_\l
	+ _DstOut: AlphaComposite_\l
	+ _SrcAtop: AlphaComposite_\l
	+ _DstAtop: AlphaComposite_\l
	+ _Xor: AlphaComposite_\l
	- _MIN_RULE: int_\l
	- _MAX_RULE: int_\l
	 extraAlpha: float\l
	 rule: int\l
	|
	+ getRule() : int\l
	+ hashCode() : int\l
	+ equals(Object) : boolean\l
	+ _getInstance(int) : AlphaComposite_\l
	+ _getInstance(int, float) : AlphaComposite_\l
	+ createContext(ColorModel, ColorModel, RenderingHints) : CompositeContext\l
	+ derive(float) : AlphaComposite\l
	+ derive(int) : AlphaComposite\l
	+ getAlpha() : float\l
	}"
	]
javaawteventTextListener [
	label = "{\<\<interface\>\>\njava.awt.event::TextListener\n\<\<decorator, target\>\>|
	|
	+ textValueChanged(TextEvent) : void\l
	}"
	style = "filled"
fillcolor = "green"]
javaawtMouseInfo [
	label = "{java.awt::MouseInfo|
	 _assertionsDisabled: boolean_\l
	|
	- _areScreenDevicesIndependent(GraphicsDevice[]) : boolean_\l
	+ _getPointerInfo() : PointerInfo_\l
	+ _getNumberOfButtons() : int_\l
	}"
	]
javaawtScrollbar [
	label = "{java.awt::Scrollbar\n\<\<Leaf\>\>|
	+ _HORIZONTAL: int_\l
	+ _VERTICAL: int_\l
	 value: int\l
	 maximum: int\l
	 minimum: int\l
	 visibleAmount: int\l
	 orientation: int\l
	 lineIncrement: int\l
	 pageIncrement: int\l
	 isAdjusting: boolean\l
	 adjustmentListener: AdjustmentListener\l
	- _base: String_\l
	- _nameCounter: int_\l
	- _serialVersionUID: long_\l
	- scrollbarSerializedDataVersion: int\l
	|
	+ getListeners(, , , EventListener\>, , Class\<\>) : \l
	# processAdjustmentEvent(AdjustmentEvent) : void\l
	+ setMaximum(int) : void\l
	- _initIDs() : void_\l
	# processEvent(AWTEvent) : void\l
	+ getMaximum() : int\l
	+ getBlockIncrement() : int\l
	+ setVisibleAmount(int) : void\l
	+ getUnitIncrement() : int\l
	# paramString() : String\l
	+ getOrientation() : int\l
	+ setUnitIncrement(int) : void\l
	+ setValues(int, int, int, int) : void\l
	+ removeAdjustmentListener(AdjustmentListener) : void\l
	+ addAdjustmentListener(AdjustmentListener) : void\l
	+ getVisibleAmount() : int\l
	+ getMinimum() : int\l
	+ getAdjustmentListeners() : AdjustmentListener\l
	+ setBlockIncrement(int) : void\l
	+ setOrientation(int) : void\l
	 constructComponentName() : String\l
	+ getVisible() : int\l
	- writeObject(ObjectOutputStream) : void\l
	+ setLineIncrement(int) : void\l
	+ getAccessibleContext() : AccessibleContext\l
	- readObject(ObjectInputStream) : void\l
	+ setPageIncrement(int) : void\l
	+ getValue() : int\l
	+ getPageIncrement() : int\l
	+ setValueIsAdjusting(boolean) : void\l
	+ addNotify() : void\l
	 eventEnabled(AWTEvent) : boolean\l
	+ setValue(int) : void\l
	+ getValueIsAdjusting() : boolean\l
	+ setMinimum(int) : void\l
	+ getLineIncrement() : int\l
	}"
	style = "filled"
fillcolor = "yellow"]
javaawtMenuItem [
	label = "{java.awt::MenuItem|
	 enabled: boolean\l
	 label: String\l
	 actionCommand: String\l
	 eventMask: long\l
	 actionListener: ActionListener\l
	- shortcut: MenuShortcut\l
	- _base: String_\l
	- _nameCounter: int_\l
	- _serialVersionUID: long_\l
	- menuItemSerializedDataVersion: int\l
	|
	+ getListeners(, , , EventListener\>, , Class\<\>) : \l
	 doMenuEvent(long, int) : void\l
	+ getLabel() : String\l
	# processEvent(AWTEvent) : void\l
	- _initIDs() : void_\l
	# processActionEvent(ActionEvent) : void\l
	+ getShortcut() : MenuShortcut\l
	 getShortcutMenuItem(MenuShortcut) : MenuItem\l
	+ paramString() : String\l
	+ removeActionListener(ActionListener) : void\l
	- isItemEnabled() : boolean\l
	+ enable() : void\l
	+ enable(boolean) : void\l
	 handleShortcut(KeyEvent) : boolean\l
	# enableEvents(long) : void\l
	+ setShortcut(MenuShortcut) : void\l
	 constructComponentName() : String\l
	+ deleteShortcut() : void\l
	 deleteShortcut(MenuShortcut) : void\l
	- writeObject(ObjectOutputStream) : void\l
	 _access100(MenuItem) : boolean_\l
	+ addActionListener(ActionListener) : void\l
	 _access000(MenuItem) : MenuShortcut_\l
	+ setActionCommand(String) : void\l
	+ getAccessibleContext() : AccessibleContext\l
	# disableEvents(long) : void\l
	- readObject(ObjectInputStream) : void\l
	+ setEnabled(boolean) : void\l
	 getActionCommandImpl() : String\l
	+ addNotify() : void\l
	 eventEnabled(AWTEvent) : boolean\l
	+ disable() : void\l
	+ isEnabled() : boolean\l
	+ getActionListeners() : ActionListener\l
	+ setLabel(String) : void\l
	+ getActionCommand() : String\l
	}"
	]
javaawtScrollPane [
	label = "{java.awt::ScrollPane\n\<\<decorator, adapter, Composite\>\>|
	+ _SCROLLBARS_AS_NEEDED: int_\l
	+ _SCROLLBARS_ALWAYS: int_\l
	+ _SCROLLBARS_NEVER: int_\l
	- scrollbarDisplayPolicy: int\l
	- vAdjustable: ScrollPaneAdjustable\l
	- hAdjustable: ScrollPaneAdjustable\l
	- _base: String_\l
	- _nameCounter: int_\l
	- _defaultWheelScroll: boolean_\l
	- wheelScrollingEnabled: boolean\l
	- _serialVersionUID: long_\l
	|
	- _initIDs() : void_\l
	 calculateChildSize() : Dimension\l
	+ getVScrollbarWidth() : int\l
	+ setLayout(LayoutManager) : void\l
	+ getScrollbarDisplayPolicy() : int\l
	+ paramString() : String\l
	+ setWheelScrollingEnabled(boolean) : void\l
	+ getHAdjustable() : Adjustable\l
	+ getHScrollbarHeight() : int\l
	+ doLayout() : void\l
	+ isWheelScrollingEnabled() : boolean\l
	# eventTypeEnabled(int) : boolean\l
	 constructComponentName() : String\l
	# addImpl(Component, Object, int) : void\l
	- writeObject(ObjectOutputStream) : void\l
	- addToPanel(Component, Object, int) : void\l
	+ getViewportSize() : Dimension\l
	 autoProcessMouseWheel(MouseWheelEvent) : void\l
	+ getVAdjustable() : Adjustable\l
	+ getAccessibleContext() : AccessibleContext\l
	- readObject(ObjectInputStream) : void\l
	+ layout() : void\l
	+ addNotify() : void\l
	# processMouseWheelEvent(MouseWheelEvent) : void\l
	+ getScrollPosition() : Point\l
	+ setScrollPosition(int, int) : void\l
	+ setScrollPosition(Point) : void\l
	+ printComponents(Graphics) : void\l
	}"
	style = "filled"
fillcolor = "green"]
javaawtDefaultFocusTraversalPolicy [
	label = "{java.awt::DefaultFocusTraversalPolicy|
	- _serialVersionUID: long_\l
	|
	# accept(Component) : boolean\l
	}"
	]
javaawtSentEvent [
	label = "{java.awt::SentEvent|
	- _serialVersionUID: long_\l
	 _ID: int_\l
	 dispatched: boolean\l
	- nested: AWTEvent\l
	- toNotify: AppContext\l
	|
	+ dispatch() : void\l
	 dispose() : void\l
	}"
	]
sunutilloggingPlatformLogger [
	label = "{sun.util.logging::PlatformLogger\n\<\<adaptee\>\>|
	- _OFF: int_\l
	- _SEVERE: int_\l
	- _WARNING: int_\l
	- _INFO: int_\l
	- _CONFIG: int_\l
	- _FINE: int_\l
	- _FINER: int_\l
	- _FINEST: int_\l
	- _ALL: int_\l
	- _DEFAULT_LEVEL: PlatformLoggerLevel_\l
	- _loggingEnabled: boolean_\l
	- _loggers: Map\<String, WeakReference\<PlatformLogger\>\>_\l
	- loggerProxy: PlatformLoggerLoggerProxy\l
	- javaLoggerProxy: PlatformLoggerJavaLoggerProxy\l
	|
	+ isLoggable(PlatformLoggerLevel) : boolean\l
	+ getName() : String\l
	+ level() : PlatformLoggerLevel\l
	 _access000() : PlatformLoggerLevel_\l
	+ _getLogger(String) : PlatformLogger_\l
	- redirectToJavaLoggerProxy() : void\l
	+ setLevel(PlatformLoggerLevel) : void\l
	+ finest(String) : void\l
	+ finest(String, Throwable) : void\l
	+ finest(String, Object[]) : void\l
	+ _redirectPlatformLoggers() : void_\l
	+ fine(String) : void\l
	+ fine(String, Throwable) : void\l
	+ fine(String, Object[]) : void\l
	+ finer(String) : void\l
	+ finer(String, Throwable) : void\l
	+ finer(String, Object[]) : void\l
	+ isEnabled() : boolean\l
	+ severe(String) : void\l
	+ severe(String, Throwable) : void\l
	+ severe(String, Object[]) : void\l
	+ warning(String) : void\l
	+ warning(String, Throwable) : void\l
	+ warning(String, Object[]) : void\l
	+ config(String) : void\l
	+ config(String, Throwable) : void\l
	+ config(String, Object[]) : void\l
	+ info(String) : void\l
	+ info(String, Throwable) : void\l
	+ info(String, Object[]) : void\l
	}"
	style = "filled"
fillcolor = "red"]
javaawtBorderLayout [
	label = "{java.awt::BorderLayout|
	 hgap: int\l
	 vgap: int\l
	 north: Component\l
	 west: Component\l
	 east: Component\l
	 south: Component\l
	 center: Component\l
	 firstLine: Component\l
	 lastLine: Component\l
	 firstItem: Component\l
	 lastItem: Component\l
	+ _NORTH: String_\l
	+ _SOUTH: String_\l
	+ _EAST: String_\l
	+ _WEST: String_\l
	+ _CENTER: String_\l
	+ _BEFORE_FIRST_LINE: String_\l
	+ _AFTER_LAST_LINE: String_\l
	+ _BEFORE_LINE_BEGINS: String_\l
	+ _AFTER_LINE_ENDS: String_\l
	+ _PAGE_START: String_\l
	+ _PAGE_END: String_\l
	+ _LINE_START: String_\l
	+ _LINE_END: String_\l
	- _serialVersionUID: long_\l
	|
	+ preferredLayoutSize(Container) : Dimension\l
	+ getLayoutComponent(Container, Object) : Component\l
	+ getLayoutComponent(Object) : Component\l
	+ removeLayoutComponent(Component) : void\l
	+ getHgap() : int\l
	- getChild(String, boolean) : Component\l
	+ getVgap() : int\l
	+ getConstraints(Component) : Object\l
	+ invalidateLayout(Container) : void\l
	+ setVgap(int) : void\l
	+ getLayoutAlignmentX(Container) : float\l
	+ minimumLayoutSize(Container) : Dimension\l
	+ getLayoutAlignmentY(Container) : float\l
	+ maximumLayoutSize(Container) : Dimension\l
	+ layoutContainer(Container) : void\l
	+ addLayoutComponent(String, Component) : void\l
	+ addLayoutComponent(Component, Object) : void\l
	+ toString() : String\l
	+ setHgap(int) : void\l
	}"
	]
javaawtDesktop [
	label = "{java.awt::Desktop|
	- peer: DesktopPeer\l
	|
	- checkExec() : void\l
	+ mail() : void\l
	+ mail(URI) : void\l
	+ edit(File) : void\l
	- checkActionSupport(DesktopAction) : void\l
	- checkAWTPermission() : void\l
	+ isSupported(DesktopAction) : boolean\l
	- _checkFileValidation(File) : void_\l
	+ print(File) : void\l
	+ _getDesktop() : Desktop_\l
	+ _isDesktopSupported() : boolean_\l
	+ open(File) : void\l
	+ browse(URI) : void\l
	}"
	]
javaawtPoint [
	label = "{java.awt::Point|
	+ x: int\l
	+ y: int\l
	- _serialVersionUID: long_\l
	|
	+ getX() : double\l
	+ getLocation() : Point\l
	+ move(int, int) : void\l
	+ getY() : double\l
	+ setLocation(int, int) : void\l
	+ setLocation(Point) : void\l
	+ setLocation(double, double) : void\l
	+ equals(Object) : boolean\l
	+ toString() : String\l
	+ translate(int, int) : void\l
	}"
	]
javaawtRobot [
	label = "{java.awt::Robot|
	- _MAX_DELAY: int_\l
	- peer: RobotPeer\l
	- isAutoWaitForIdle: boolean\l
	- autoDelay: int\l
	- _LEGAL_BUTTON_MASK: int_\l
	- screenCapCM: DirectColorModel\l
	- anchor: Object\l
	- disposer: RobotRobotDisposer\l
	|
	+ mouseRelease(int) : void\l
	- autoWaitForIdle() : void\l
	+ waitForIdle() : void\l
	- _initLegalButtonMask() : void_\l
	+ setAutoDelay(int) : void\l
	- checkRobotAllowed() : void\l
	- checkDelayArgument(int) : void\l
	- checkNotDispatchThread() : void\l
	- checkButtonsArgument(int) : void\l
	+ isAutoWaitForIdle() : boolean\l
	- autoDelay() : void\l
	+ setAutoWaitForIdle(boolean) : void\l
	- afterEvent() : void\l
	- checkKeycodeArgument(int) : void\l
	- init(GraphicsDevice) : void\l
	- checkIsScreenDevice(GraphicsDevice) : void\l
	+ mousePress(int) : void\l
	+ mouseMove(int, int) : void\l
	- _checkValidRect(Rectangle) : void_\l
	+ createScreenCapture(Rectangle) : BufferedImage\l
	+ mouseWheel(int) : void\l
	+ keyPress(int) : void\l
	+ getAutoDelay() : int\l
	+ keyRelease(int) : void\l
	- _checkScreenCaptureAllowed() : void_\l
	+ delay(int) : void\l
	+ getPixelColor(int, int) : Color\l
	+ toString() : String\l
	}"
	]
javaawtColor [
	label = "{java.awt::Color\n\<\<adaptee\>\>|
	+ _white: Color_\l
	+ _WHITE: Color_\l
	+ _lightGray: Color_\l
	+ _LIGHT_GRAY: Color_\l
	+ _gray: Color_\l
	+ _GRAY: Color_\l
	+ _darkGray: Color_\l
	+ _DARK_GRAY: Color_\l
	+ _black: Color_\l
	+ _BLACK: Color_\l
	+ _red: Color_\l
	+ _RED: Color_\l
	+ _pink: Color_\l
	+ _PINK: Color_\l
	+ _orange: Color_\l
	+ _ORANGE: Color_\l
	+ _yellow: Color_\l
	+ _YELLOW: Color_\l
	+ _green: Color_\l
	+ _GREEN: Color_\l
	+ _magenta: Color_\l
	+ _MAGENTA: Color_\l
	+ _cyan: Color_\l
	+ _CYAN: Color_\l
	+ _blue: Color_\l
	+ _BLUE: Color_\l
	 value: int\l
	- frgbvalue: float[]\l
	- fvalue: float[]\l
	- falpha: float\l
	- cs: ColorSpace\l
	- _serialVersionUID: long_\l
	- _FACTOR: double_\l
	|
	- _initIDs() : void_\l
	+ _decode(String) : Color_\l
	+ createContext(ColorModel, Rectangle, Rectangle2D, AffineTransform, RenderingHints) : PaintContext\l
	+ getAlpha() : int\l
	+ getColorComponents(ColorSpace, float[]) : \l
	+ getColorComponents(float[]) : \l
	+ getRed() : int\l
	+ darker() : Color\l
	+ getRGBComponents(float[]) : \l
	+ hashCode() : int\l
	+ getComponents(ColorSpace, float[]) : \l
	+ getComponents(float[]) : \l
	- _testColorValueRange(float, float, float, float) : void_\l
	- _testColorValueRange(int, int, int, int) : void_\l
	+ getRGB() : int\l
	+ _RGBtoHSB(int, int, int, float[]) : _\l
	+ _getHSBColor(float, float, float) : Color_\l
	+ brighter() : Color\l
	+ _getColor(String) : Color_\l
	+ _getColor(String, int) : Color_\l
	+ _getColor(String, Color) : Color_\l
	+ _HSBtoRGB(float, float, float) : int_\l
	+ getBlue() : int\l
	+ getColorSpace() : ColorSpace\l
	+ getRGBColorComponents(float[]) : \l
	+ getTransparency() : int\l
	+ getGreen() : int\l
	+ equals(Object) : boolean\l
	+ toString() : String\l
	}"
	style = "filled"
fillcolor = "red"]
javautilconcurrentatomicAtomicBoolean [
	label = "{java.util.concurrent.atomic::AtomicBoolean\n\<\<adaptee\>\>|
	- _serialVersionUID: long_\l
	- _unsafe: Unsafe_\l
	- _valueOffset: long_\l
	- value: int\l
	|
	+ set(boolean) : void\l
	+ compareAndSet(boolean, boolean) : boolean\l
	+ weakCompareAndSet(boolean, boolean) : boolean\l
	+ get() : boolean\l
	+ lazySet(boolean) : void\l
	+ toString() : String\l
	+ getAndSet(boolean) : boolean\l
	}"
	style = "filled"
fillcolor = "red"]
javaawtFileDialog [
	label = "{java.awt::FileDialog\n\<\<adapter\>\>|
	+ _LOAD: int_\l
	+ _SAVE: int_\l
	 mode: int\l
	 dir: String\l
	 file: String\l
	- files: File[]\l
	- multipleMode: boolean\l
	 filter: FilenameFilter\l
	- _base: String_\l
	- _nameCounter: int_\l
	- _serialVersionUID: long_\l
	|
	 constructComponentName() : String\l
	+ setMultipleMode(boolean) : void\l
	 _access100(FileDialog) : boolean_\l
	+ isMultipleMode() : boolean\l
	 _access000(FileDialog, File[]) : void_\l
	- _initIDs() : void_\l
	+ setMode(int) : void\l
	+ setDirectory(String) : void\l
	+ getFilenameFilter() : FilenameFilter\l
	+ getFile() : String\l
	+ getFiles() : File\l
	- setFiles(File[]) : void\l
	- readObject(ObjectInputStream) : void\l
	# paramString() : String\l
	+ setFile(String) : void\l
	+ addNotify() : void\l
	+ setFilenameFilter(FilenameFilter) : void\l
	 postsOldMouseEvents() : boolean\l
	+ getDirectory() : String\l
	+ getMode() : int\l
	}"
	style = "filled"
fillcolor = "red"]
javaawtEventFilter [
	label = "{\<\<interface\>\>\njava.awt::EventFilter|
	|
	+ acceptEvent(AWTEvent) : EventFilterFilterAction\l
	}"
	]
javaawtAWTKeyStroke [
	label = "{java.awt::AWTKeyStroke|
	 _serialVersionUID: long_\l
	- _modifierKeywords: Map\<String, Integer\>_\l
	- _vks: VKCollection_\l
	- _APP_CONTEXT_CACHE_KEY: Object_\l
	- _APP_CONTEXT_KEYSTROKE_KEY: AWTKeyStroke_\l
	- keyChar: char\l
	- keyCode: int\l
	- modifiers: int\l
	- onKeyRelease: boolean\l
	 _assertionsDisabled: boolean_\l
	|
	 _getVKText(int) : String_\l
	# readResolve() : Object\l
	# _registerSubclass(Class\<\>) : void_\l
	+ isOnKeyRelease() : boolean\l
	- _getAWTKeyStrokeClass() : Class\<AWTKeyStroke\>_\l
	+ _getAWTKeyStroke(String) : AWTKeyStroke_\l
	+ _getAWTKeyStroke(int, int) : AWTKeyStroke_\l
	+ _getAWTKeyStroke(char) : AWTKeyStroke_\l
	+ _getAWTKeyStroke(Character, int) : AWTKeyStroke_\l
	+ _getAWTKeyStroke(int, int, boolean) : AWTKeyStroke_\l
	 _getModifiersText(int) : String_\l
	- _getCachedStroke(char, int, int, boolean) : AWTKeyStroke_\l
	- _mapNewModifiers(int) : int_\l
	- _getCtor(Class) : Constructor_\l
	- _getVKCollection() : VKCollection_\l
	+ getKeyChar() : char\l
	+ hashCode() : int\l
	- _getVKValue(String) : int_\l
	+ equals(Object) : boolean\l
	+ _getAWTKeyStrokeForEvent(KeyEvent) : AWTKeyStroke_\l
	- _mapOldModifiers(int) : int_\l
	+ toString() : String\l
	+ getModifiers() : int\l
	+ getKeyCode() : int\l
	+ getKeyEventType() : int\l
	}"
	]
javaawtDimension [
	label = "{java.awt::Dimension|
	+ width: int\l
	+ height: int\l
	- _serialVersionUID: long_\l
	|
	+ getHeight() : double\l
	+ getSize() : Dimension\l
	+ setSize(Dimension) : void\l
	+ setSize(int, int) : void\l
	+ setSize(double, double) : void\l
	+ hashCode() : int\l
	+ equals(Object) : boolean\l
	- _initIDs() : void_\l
	+ toString() : String\l
	+ getWidth() : double\l
	}"
	]
javaawtAWTError [
	label = "{java.awt::AWTError|
	- _serialVersionUID: long_\l
	|
	}"
	]
javaawtgeomPoint2DFloat [
	label = "{java.awt.geom::Point2DFloat\n\<\<adaptee\>\>|
	+ x: float\l
	+ y: float\l
	- _serialVersionUID: long_\l
	|
	+ getX() : double\l
	+ getY() : double\l
	+ setLocation(float, float) : void\l
	+ setLocation(double, double) : void\l
	+ toString() : String\l
	}"
	style = "filled"
fillcolor = "red"]
javaawtimageBufferedImage [
	label = "{java.awt.image::BufferedImage\n\<\<adaptee\>\>|
	 imageType: int\l
	 colorModel: ColorModel\l
	 raster: WritableRaster\l
	 osis: OffScreenImageSource\l
	 properties: Hashtable\l
	 isAlphaPremultiplied: boolean\l
	+ _TYPE_CUSTOM: int_\l
	+ _TYPE_INT_RGB: int_\l
	+ _TYPE_INT_ARGB: int_\l
	+ _TYPE_INT_ARGB_PRE: int_\l
	+ _TYPE_INT_BGR: int_\l
	+ _TYPE_3BYTE_BGR: int_\l
	+ _TYPE_4BYTE_ABGR: int_\l
	+ _TYPE_4BYTE_ABGR_PRE: int_\l
	+ _TYPE_USHORT_565_RGB: int_\l
	+ _TYPE_USHORT_555_RGB: int_\l
	+ _TYPE_BYTE_GRAY: int_\l
	+ _TYPE_USHORT_GRAY: int_\l
	+ _TYPE_BYTE_BINARY: int_\l
	+ _TYPE_BYTE_INDEXED: int_\l
	- _DCM_RED_MASK: int_\l
	- _DCM_GREEN_MASK: int_\l
	- _DCM_BLUE_MASK: int_\l
	- _DCM_ALPHA_MASK: int_\l
	- _DCM_565_RED_MASK: int_\l
	- _DCM_565_GRN_MASK: int_\l
	- _DCM_565_BLU_MASK: int_\l
	- _DCM_555_RED_MASK: int_\l
	- _DCM_555_GRN_MASK: int_\l
	- _DCM_555_BLU_MASK: int_\l
	- _DCM_BGR_RED_MASK: int_\l
	- _DCM_BGR_GRN_MASK: int_\l
	- _DCM_BGR_BLU_MASK: int_\l
	|
	+ getMinTileX() : int\l
	+ getMinTileY() : int\l
	+ getTileWidth() : int\l
	- _initIDs() : void_\l
	+ isTileWritable(int, int) : boolean\l
	+ setRGB(int, int, int) : void\l
	+ setRGB(int, int, int, int, int[], int, int) : void\l
	+ coerceData(boolean) : void\l
	+ getNumYTiles() : int\l
	+ getWidth() : int\l
	+ getWidth(ImageObserver) : int\l
	+ getSources() : Vector\<RenderedImage\>\l
	+ addTileObserver(TileObserver) : void\l
	+ getTileGridXOffset() : int\l
	+ getWritableTileIndices() : Point\l
	+ getSampleModel() : SampleModel\l
	+ getHeight() : int\l
	+ getHeight(ImageObserver) : int\l
	+ getWritableTile(int, int) : WritableRaster\l
	+ removeTileObserver(TileObserver) : void\l
	+ getPropertyNames() : String\l
	+ createGraphics() : Graphics2D\l
	+ getGraphics() : Graphics\l
	+ getNumXTiles() : int\l
	+ getAlphaRaster() : WritableRaster\l
	+ getData() : Raster\l
	+ getData(Rectangle) : Raster\l
	+ getRaster() : WritableRaster\l
	+ getRGB(int, int) : int\l
	+ getRGB(int, int, int, int, int[], int, int) : \l
	+ getTileHeight() : int\l
	+ getSubimage(int, int, int, int) : BufferedImage\l
	+ getTile(int, int) : Raster\l
	+ getColorModel() : ColorModel\l
	+ getProperty(String) : Object\l
	+ getProperty(String, ImageObserver) : Object\l
	+ setData(Raster) : void\l
	+ hasTileWriters() : boolean\l
	+ isAlphaPremultiplied() : boolean\l
	+ copyData(WritableRaster) : WritableRaster\l
	+ getTransparency() : int\l
	+ getTileGridYOffset() : int\l
	- _isStandard(ColorModel, WritableRaster) : boolean_\l
	+ getType() : int\l
	+ getSource() : ImageProducer\l
	+ toString() : String\l
	+ releaseWritableTile(int, int) : void\l
	+ getMinX() : int\l
	+ getMinY() : int\l
	}"
	style = "filled"
fillcolor = "red"]
javautilTimer [
	label = "{java.util::Timer\n\<\<adaptee\>\>|
	- queue: TaskQueue\l
	- thread: TimerThread\l
	- threadReaper: Object\l
	- _nextSerialNumber: AtomicInteger_\l
	|
	+ scheduleAtFixedRate(TimerTask, Date, long) : void\l
	+ scheduleAtFixedRate(TimerTask, long, long) : void\l
	+ cancel() : void\l
	+ schedule(TimerTask, Date) : void\l
	+ schedule(TimerTask, Date, long) : void\l
	+ schedule(TimerTask, long, long) : void\l
	+ schedule(TimerTask, long) : void\l
	- _serialNumber() : int_\l
	- sched(TimerTask, long, long) : void\l
	 _access100(Timer) : TimerThread_\l
	 _access000(Timer) : TaskQueue_\l
	+ purge() : int\l
	}"
	style = "filled"
fillcolor = "red"]
javaawtMenuShortcut [
	label = "{java.awt::MenuShortcut|
	 key: int\l
	 usesShift: boolean\l
	- _serialVersionUID: long_\l
	|
	+ getKey() : int\l
	# paramString() : String\l
	+ usesShiftModifier() : boolean\l
	+ hashCode() : int\l
	+ equals(MenuShortcut) : boolean\l
	+ equals(Object) : boolean\l
	+ toString() : String\l
	}"
	]
javaawtEventQueue [
	label = "{java.awt::EventQueue|
	- _threadInitNumber: AtomicInteger_\l
	- _LOW_PRIORITY: int_\l
	- _NORM_PRIORITY: int_\l
	- _HIGH_PRIORITY: int_\l
	- _ULTIMATE_PRIORITY: int_\l
	- _NUM_PRIORITIES: int_\l
	- queues: Queue[]\l
	- nextQueue: EventQueue\l
	- previousQueue: EventQueue\l
	- pushPopLock: Lock\l
	- pushPopCond: Condition\l
	- _dummyRunnable: Runnable_\l
	- dispatchThread: EventDispatchThread\l
	- threadGroup: ThreadGroup\l
	- classLoader: ClassLoader\l
	- mostRecentEventTime: long\l
	- mostRecentKeyEventTime: long\l
	- currentEvent: WeakReference\<AWTEvent\>\l
	- waitForID: int\l
	- appContext: AppContext\l
	- name: String\l
	- fwDispatcher: FwDispatcher\l
	- _eventLog: PlatformLogger_\l
	- _PAINT: int_\l
	- _UPDATE: int_\l
	- _MOVE: int_\l
	- _DRAG: int_\l
	- _PEER: int_\l
	- _CACHE_LENGTH: int_\l
	- _javaSecurityAccess: JavaSecurityAccess_\l
	|
	- cacheEQItem(EventQueueItem) : void\l
	- _getAccessControlContextFrom(Object) : AccessControlContext_\l
	- setFwDispatcher(FwDispatcher) : void\l
	+ _getCurrentEvent() : AWTEvent_\l
	 getNextEventPrivate() : AWTEvent\l
	+ _invokeLater(Runnable) : void_\l
	 getDispatchThread() : EventDispatchThread\l
	 getMostRecentKeyEventTime() : long\l
	 initDispatchThread() : void\l
	 _access600(EventQueue) : ThreadGroup_\l
	- mergePaintEvents(PaintEvent, PaintEvent) : PaintEvent\l
	# dispatchEvent(AWTEvent) : void\l
	 _access400(EventQueue, AWTEvent, Object) : void_\l
	 isDispatchThreadImpl() : boolean\l
	 _access200(EventQueue, FwDispatcher) : void_\l
	- wakeup(boolean) : void\l
	 _access000(EventQueue) : boolean_\l
	+ push(EventQueue) : void\l
	- postEvent(AWTEvent, int) : void\l
	+ postEvent(AWTEvent) : void\l
	 _access800(EventQueue) : ClassLoader_\l
	- uncacheEQItem(EventQueueItem) : void\l
	- coalescePaintEvent(PaintEvent) : boolean\l
	 detachDispatchThread(EventDispatchThread) : void\l
	- noEvents() : boolean\l
	+ getNextEvent() : AWTEvent\l
	 getNextEvent(int) : AWTEvent\l
	- getMostRecentEventTimeImpl() : long\l
	- _eventToCacheIndex(AWTEvent) : int_\l
	- getCurrentEventImpl() : AWTEvent\l
	+ createSecondaryLoop() : SecondaryLoop\l
	 createSecondaryLoop(Conditional, EventFilter, long) : SecondaryLoop\l
	- coalesceOtherEvent(AWTEvent, int) : boolean\l
	+ peekEvent() : AWTEvent\l
	+ peekEvent(int) : AWTEvent\l
	- setCurrentEventAndMostRecentTimeImpl(AWTEvent) : void\l
	+ _isDispatchThread() : boolean_\l
	+ _invokeAndWait(Runnable) : void_\l
	 _invokeAndWait(Object, Runnable) : void_\l
	# pop() : void\l
	- coalesceEvent(AWTEvent, int) : boolean\l
	- coalescePeerEvent(PeerEvent) : boolean\l
	 getMostRecentEventTimeEx() : long\l
	- coalesceMouseEvent(MouseEvent) : boolean\l
	 _setCurrentEventAndMostRecentTime(AWTEvent) : void_\l
	 _access700(EventQueue) : String_\l
	 _access500() : JavaSecurityAccess_\l
	 _access300(EventQueue) : FwDispatcher_\l
	 _access100(EventQueue, boolean) : void_\l
	- postEventPrivate(AWTEvent) : void\l
	 removeSourceEvents(Object, boolean) : void\l
	- _getPriority(AWTEvent) : int_\l
	+ _getMostRecentEventTime() : long_\l
	- dispatchEventImpl(AWTEvent, Object) : void\l
	}"
	]
javaawtGraphicsCallback [
	label = "{java.awt::GraphicsCallback|
	|
	}"
	]
javaawtColor [
	label = "{java.awt::Color|
	+ _white: Color_\l
	+ _WHITE: Color_\l
	+ _lightGray: Color_\l
	+ _LIGHT_GRAY: Color_\l
	+ _gray: Color_\l
	+ _GRAY: Color_\l
	+ _darkGray: Color_\l
	+ _DARK_GRAY: Color_\l
	+ _black: Color_\l
	+ _BLACK: Color_\l
	+ _red: Color_\l
	+ _RED: Color_\l
	+ _pink: Color_\l
	+ _PINK: Color_\l
	+ _orange: Color_\l
	+ _ORANGE: Color_\l
	+ _yellow: Color_\l
	+ _YELLOW: Color_\l
	+ _green: Color_\l
	+ _GREEN: Color_\l
	+ _magenta: Color_\l
	+ _MAGENTA: Color_\l
	+ _cyan: Color_\l
	+ _CYAN: Color_\l
	+ _blue: Color_\l
	+ _BLUE: Color_\l
	 value: int\l
	- frgbvalue: float[]\l
	- fvalue: float[]\l
	- falpha: float\l
	- cs: ColorSpace\l
	- _serialVersionUID: long_\l
	- _FACTOR: double_\l
	|
	- _initIDs() : void_\l
	+ _decode(String) : Color_\l
	+ createContext(ColorModel, Rectangle, Rectangle2D, AffineTransform, RenderingHints) : PaintContext\l
	+ getAlpha() : int\l
	+ getColorComponents(ColorSpace, float[]) : \l
	+ getColorComponents(float[]) : \l
	+ getRed() : int\l
	+ darker() : Color\l
	+ getRGBComponents(float[]) : \l
	+ hashCode() : int\l
	+ getComponents(ColorSpace, float[]) : \l
	+ getComponents(float[]) : \l
	- _testColorValueRange(float, float, float, float) : void_\l
	- _testColorValueRange(int, int, int, int) : void_\l
	+ getRGB() : int\l
	+ _RGBtoHSB(int, int, int, float[]) : _\l
	+ _getHSBColor(float, float, float) : Color_\l
	+ brighter() : Color\l
	+ _getColor(String) : Color_\l
	+ _getColor(String, int) : Color_\l
	+ _getColor(String, Color) : Color_\l
	+ _HSBtoRGB(float, float, float) : int_\l
	+ getBlue() : int\l
	+ getColorSpace() : ColorSpace\l
	+ getRGBColorComponents(float[]) : \l
	+ getTransparency() : int\l
	+ getGreen() : int\l
	+ equals(Object) : boolean\l
	+ toString() : String\l
	}"
	]
javaawtModalEventFilter [
	label = "{java.awt::ModalEventFilter|
	# modalDialog: Dialog\l
	# disabled: boolean\l
	|
	 getModalDialog() : Dialog\l
	# acceptWindow(Window) : EventFilterFilterAction\l
	 disable() : void\l
	+ acceptEvent(AWTEvent) : EventFilterFilterAction\l
	 compareTo(ModalEventFilter) : int\l
	 _createFilterForDialog(Dialog) : ModalEventFilter_\l
	}"
	]
javaawtSplashScreen [
	label = "{java.awt::SplashScreen|
	- image: BufferedImage\l
	- splashPtr: long\l
	- _wasClosed: boolean_\l
	- imageURL: URL\l
	- _theInstance: SplashScreen_\l
	- _log: PlatformLogger_\l
	|
	- __getImageJarName(long) : String_\l
	+ setImageURL(URL) : void\l
	- __setImageData(long, byte[]) : boolean_\l
	+ update() : void\l
	- __getBounds(long) : Rectangle_\l
	+ isVisible() : boolean\l
	- __isVisible(long) : boolean_\l
	+ getBounds() : Rectangle\l
	- __getInstance() : long_\l
	+ getSize() : Dimension\l
	- __getImageFileName(long) : String_\l
	+ getImageURL() : URL\l
	 _markClosed() : void_\l
	+ _getSplashScreen() : SplashScreen_\l
	- __update(long, int[], int, int, int, int, int) : void_\l
	+ createGraphics() : Graphics2D\l
	- __close(long) : void_\l
	+ close() : void\l
	- checkVisible() : void\l
	}"
	]
javaawtInsets [
	label = "{java.awt::Insets|
	+ top: int\l
	+ left: int\l
	+ bottom: int\l
	+ right: int\l
	- _serialVersionUID: long_\l
	|
	+ set(int, int, int, int) : void\l
	+ hashCode() : int\l
	+ equals(Object) : boolean\l
	+ clone() : Object\l
	- _initIDs() : void_\l
	+ toString() : String\l
	}"
	]
javaawtLightweightDispatcher [
	label = "{java.awt::LightweightDispatcher\n\<\<adaptee\>\>|
	- _serialVersionUID: long_\l
	- _LWD_MOUSE_DRAGGED_OVER: int_\l
	- _eventLog: PlatformLogger_\l
	- nativeContainer: Container\l
	- focus: Component\l
	- mouseEventTarget: Component\l
	- targetLastEntered: Component\l
	- targetLastEnteredDT: Component\l
	- isCleaned: boolean\l
	- isMouseInNativeContainer: boolean\l
	- isMouseDTInNativeContainer: boolean\l
	- nativeCursor: Cursor\l
	- eventMask: long\l
	- _PROXY_EVENT_MASK: long_\l
	- _MOUSE_MASK: long_\l
	 _assertionsDisabled: boolean_\l
	|
	 dispatchEvent(AWTEvent) : boolean\l
	- trackMouseEnterExit(Component, MouseEvent) : void\l
	 retargetMouseEvent(Component, int, MouseEvent) : void\l
	 _access100(LightweightDispatcher, Component, MouseEvent) : void_\l
	 _access000(LightweightDispatcher) : Container_\l
	- processDropTargetEvent(SunDropTargetEvent) : boolean\l
	+ eventDispatched(AWTEvent) : void\l
	- isMouseGrab(MouseEvent) : boolean\l
	- retargetMouseEnterExit(Component, MouseEvent, Component, boolean) : Component\l
	 removeReferences(Component) : void\l
	- stopListeningForOtherDrags() : void\l
	 dispose() : void\l
	- processMouseEvent(MouseEvent) : boolean\l
	- trackDropTargetEnterExit(Component, MouseEvent) : void\l
	 enableEvents(long) : void\l
	- startListeningForOtherDrags() : void\l
	}"
	style = "filled"
fillcolor = "red"]
javaawtCursor [
	label = "{java.awt::Cursor|
	+ _DEFAULT_CURSOR: int_\l
	+ _CROSSHAIR_CURSOR: int_\l
	+ _TEXT_CURSOR: int_\l
	+ _WAIT_CURSOR: int_\l
	+ _SW_RESIZE_CURSOR: int_\l
	+ _SE_RESIZE_CURSOR: int_\l
	+ _NW_RESIZE_CURSOR: int_\l
	+ _NE_RESIZE_CURSOR: int_\l
	+ _N_RESIZE_CURSOR: int_\l
	+ _S_RESIZE_CURSOR: int_\l
	+ _W_RESIZE_CURSOR: int_\l
	+ _E_RESIZE_CURSOR: int_\l
	+ _HAND_CURSOR: int_\l
	+ _MOVE_CURSOR: int_\l
	# _predefined: Cursor[]_\l
	- _predefinedPrivate: Cursor[]_\l
	 _cursorProperties: String[]_\l
	 type: int\l
	+ _CUSTOM_CURSOR: int_\l
	- _systemCustomCursors: Hashtable\<String, Cursor\>_\l
	- _systemCustomCursorDirPrefix: String_\l
	- _systemCustomCursorPropertiesFile: String_\l
	- _systemCustomCursorProperties: Properties_\l
	- _CursorDotPrefix: String_\l
	- _DotFileSuffix: String_\l
	- _DotHotspotSuffix: String_\l
	- _DotNameSuffix: String_\l
	- _serialVersionUID: long_\l
	- _log: PlatformLogger_\l
	- pData: long\l
	- anchor: Object\l
	 disposer: CursorCursorDisposer\l
	# name: String\l
	|
	+ getName() : String\l
	 _access400() : Properties_\l
	 _access300() : String_\l
	 _access002(Cursor, long) : long_\l
	 _access200() : String_\l
	 _access100(long) : void_\l
	 _access000(Cursor) : long_\l
	- _initIDs() : void_\l
	- _initCursorDir() : String_\l
	+ _getDefaultCursor() : Cursor_\l
	- setPData(long) : void\l
	+ getType() : int\l
	+ _getSystemCustomCursor(String) : Cursor_\l
	- _loadSystemCustomCursorProperties() : void_\l
	+ _getPredefinedCursor(int) : Cursor_\l
	+ toString() : String\l
	- _finalizeImpl(long) : void_\l
	}"
	]
javaawtActiveEvent [
	label = "{\<\<interface\>\>\njava.awt::ActiveEvent|
	|
	+ dispatch() : void\l
	}"
	]
javaawtCheckbox [
	label = "{java.awt::Checkbox\n\<\<Leaf\>\>|
	 label: String\l
	 state: boolean\l
	 group: CheckboxGroup\l
	 itemListener: ItemListener\l
	- _base: String_\l
	- _nameCounter: int_\l
	- _serialVersionUID: long_\l
	- checkboxSerializedDataVersion: int\l
	|
	+ getListeners(, , , EventListener\>, , Class\<\>) : \l
	 constructComponentName() : String\l
	+ getLabel() : String\l
	- writeObject(ObjectOutputStream) : void\l
	+ setCheckboxGroup(CheckboxGroup) : void\l
	+ removeItemListener(ItemListener) : void\l
	# processEvent(AWTEvent) : void\l
	- _initIDs() : void_\l
	+ getSelectedObjects() : Object\l
	# processItemEvent(ItemEvent) : void\l
	+ getAccessibleContext() : AccessibleContext\l
	- readObject(ObjectInputStream) : void\l
	# paramString() : String\l
	+ getState() : boolean\l
	 setStateInternal(boolean) : void\l
	+ addNotify() : void\l
	 eventEnabled(AWTEvent) : boolean\l
	+ setLabel(String) : void\l
	+ setState(boolean) : void\l
	+ addItemListener(ItemListener) : void\l
	+ getCheckboxGroup() : CheckboxGroup\l
	+ getItemListeners() : ItemListener\l
	}"
	style = "filled"
fillcolor = "yellow"]
javaawtHeadlessException [
	label = "{java.awt::HeadlessException|
	- _serialVersionUID: long_\l
	|
	+ getMessage() : String\l
	}"
	]
javaawtGraphicsDevice [
	label = "{java.awt::GraphicsDevice|
	- fullScreenWindow: Window\l
	- fullScreenAppContext: AppContext\l
	- fsAppContextLock: Object\l
	- windowedModeBounds: Rectangle\l
	+ _TYPE_RASTER_SCREEN: int_\l
	+ _TYPE_PRINTER: int_\l
	+ _TYPE_IMAGE_BUFFER: int_\l
	|
	+ getConfigurations() : GraphicsConfiguration\l
	+ isFullScreenSupported() : boolean\l
	+ setDisplayMode(DisplayMode) : void\l
	 _isWindowOpacitySupported() : boolean_\l
	+ setFullScreenWindow(Window) : void\l
	+ getFullScreenWindow() : Window\l
	+ getAvailableAcceleratedMemory() : int\l
	 _isWindowShapingSupported() : boolean_\l
	+ getDefaultConfiguration() : GraphicsConfiguration\l
	+ isDisplayChangeSupported() : boolean\l
	+ getDisplayMode() : DisplayMode\l
	+ getIDstring() : String\l
	 getTranslucencyCapableGC() : GraphicsConfiguration\l
	+ getType() : int\l
	+ getBestConfiguration(GraphicsConfigTemplate) : GraphicsConfiguration\l
	+ isWindowTranslucencySupported(GraphicsDeviceWindowTranslucency) : boolean\l
	 isWindowPerpixelTranslucencySupported() : boolean\l
	+ getDisplayModes() : DisplayMode\l
	}"
	]
javaawtRenderingHints [
	label = "{java.awt::RenderingHints|
	 hintmap: HashMap\<Object, Object\>\l
	+ _KEY_ANTIALIASING: RenderingHintsKey_\l
	+ _VALUE_ANTIALIAS_ON: Object_\l
	+ _VALUE_ANTIALIAS_OFF: Object_\l
	+ _VALUE_ANTIALIAS_DEFAULT: Object_\l
	+ _KEY_RENDERING: RenderingHintsKey_\l
	+ _VALUE_RENDER_SPEED: Object_\l
	+ _VALUE_RENDER_QUALITY: Object_\l
	+ _VALUE_RENDER_DEFAULT: Object_\l
	+ _KEY_DITHERING: RenderingHintsKey_\l
	+ _VALUE_DITHER_DISABLE: Object_\l
	+ _VALUE_DITHER_ENABLE: Object_\l
	+ _VALUE_DITHER_DEFAULT: Object_\l
	+ _KEY_TEXT_ANTIALIASING: RenderingHintsKey_\l
	+ _VALUE_TEXT_ANTIALIAS_ON: Object_\l
	+ _VALUE_TEXT_ANTIALIAS_OFF: Object_\l
	+ _VALUE_TEXT_ANTIALIAS_DEFAULT: Object_\l
	+ _VALUE_TEXT_ANTIALIAS_GASP: Object_\l
	+ _VALUE_TEXT_ANTIALIAS_LCD_HRGB: Object_\l
	+ _VALUE_TEXT_ANTIALIAS_LCD_HBGR: Object_\l
	+ _VALUE_TEXT_ANTIALIAS_LCD_VRGB: Object_\l
	+ _VALUE_TEXT_ANTIALIAS_LCD_VBGR: Object_\l
	+ _KEY_TEXT_LCD_CONTRAST: RenderingHintsKey_\l
	+ _KEY_FRACTIONALMETRICS: RenderingHintsKey_\l
	+ _VALUE_FRACTIONALMETRICS_OFF: Object_\l
	+ _VALUE_FRACTIONALMETRICS_ON: Object_\l
	+ _VALUE_FRACTIONALMETRICS_DEFAULT: Object_\l
	+ _KEY_INTERPOLATION: RenderingHintsKey_\l
	+ _VALUE_INTERPOLATION_NEAREST_NEIGHBOR: Object_\l
	+ _VALUE_INTERPOLATION_BILINEAR: Object_\l
	+ _VALUE_INTERPOLATION_BICUBIC: Object_\l
	+ _KEY_ALPHA_INTERPOLATION: RenderingHintsKey_\l
	+ _VALUE_ALPHA_INTERPOLATION_SPEED: Object_\l
	+ _VALUE_ALPHA_INTERPOLATION_QUALITY: Object_\l
	+ _VALUE_ALPHA_INTERPOLATION_DEFAULT: Object_\l
	+ _KEY_COLOR_RENDERING: RenderingHintsKey_\l
	+ _VALUE_COLOR_RENDER_SPEED: Object_\l
	+ _VALUE_COLOR_RENDER_QUALITY: Object_\l
	+ _VALUE_COLOR_RENDER_DEFAULT: Object_\l
	+ _KEY_STROKE_CONTROL: RenderingHintsKey_\l
	+ _VALUE_STROKE_DEFAULT: Object_\l
	+ _VALUE_STROKE_NORMALIZE: Object_\l
	+ _VALUE_STROKE_PURE: Object_\l
	|
	+ add(RenderingHints) : void\l
	+ entrySet() : Set\<MapEntry\<Object, Object\>\>\l
	+ containsKey(Object) : boolean\l
	+ values() : Collection\<Object\>\l
	+ isEmpty() : boolean\l
	+ clear() : void\l
	+ containsValue(Object) : boolean\l
	+ put(Object, Object) : Object\l
	+ remove(Object) : Object\l
	+ size() : int\l
	+ hashCode() : int\l
	+ get(Object) : Object\l
	+ putAll(Map\<\>) : void\l
	+ equals(Object) : boolean\l
	+ clone() : Object\l
	+ toString() : String\l
	+ keySet() : Set\<Object\>\l
	}"
	]
javaawtShape [
	label = "{\<\<interface\>\>\njava.awt::Shape|
	|
	+ contains(double, double, double, double) : boolean\l
	+ contains(Rectangle2D) : boolean\l
	+ contains(Point2D) : boolean\l
	+ contains(double, double) : boolean\l
	+ getPathIterator(AffineTransform, double) : PathIterator\l
	+ getPathIterator(AffineTransform) : PathIterator\l
	+ intersects(double, double, double, double) : boolean\l
	+ intersects(Rectangle2D) : boolean\l
	+ getBounds2D() : Rectangle2D\l
	+ getBounds() : Rectangle\l
	}"
	]
javaawteventHierarchyListener [
	label = "{\<\<interface\>\>\njava.awt.event::HierarchyListener\n\<\<target, decorator\>\>|
	|
	+ hierarchyChanged(HierarchyEvent) : void\l
	}"
	style = "filled"
fillcolor = "red"]
javaawtCardLayout [
	label = "{java.awt::CardLayout|
	- _serialVersionUID: long_\l
	 vector: Vector\<CardLayoutCard\>\l
	 currentCard: int\l
	 hgap: int\l
	 vgap: int\l
	- _serialPersistentFields: ObjectStreamField[]_\l
	|
	+ preferredLayoutSize(Container) : Dimension\l
	+ next(Container) : void\l
	+ removeLayoutComponent(Component) : void\l
	 checkLayout(Container) : void\l
	+ show(Container, String) : void\l
	+ getVgap() : int\l
	+ minimumLayoutSize(Container) : Dimension\l
	+ addLayoutComponent(String, Component) : void\l
	+ addLayoutComponent(Component, Object) : void\l
	+ getHgap() : int\l
	+ previous(Container) : void\l
	+ last(Container) : void\l
	- writeObject(ObjectOutputStream) : void\l
	- readObject(ObjectInputStream) : void\l
	+ invalidateLayout(Container) : void\l
	+ setVgap(int) : void\l
	 showDefaultComponent(Container) : void\l
	+ getLayoutAlignmentX(Container) : float\l
	+ getLayoutAlignmentY(Container) : float\l
	+ maximumLayoutSize(Container) : Dimension\l
	+ layoutContainer(Container) : void\l
	+ toString() : String\l
	+ setHgap(int) : void\l
	+ first(Container) : void\l
	}"
	]
javaawteventHierarchyBoundsListener [
	label = "{\<\<interface\>\>\njava.awt.event::HierarchyBoundsListener\n\<\<decorator, target\>\>|
	|
	+ ancestorMoved(HierarchyEvent) : void\l
	+ ancestorResized(HierarchyEvent) : void\l
	}"
	style = "filled"
fillcolor = "green"]
javaawtMenuContainer [
	label = "{\<\<interface\>\>\njava.awt::MenuContainer|
	|
	+ getFont() : Font\l
	+ remove(MenuComponent) : void\l
	+ postEvent(Event) : boolean\l
	}"
	]
javaawtTextField [
	label = "{java.awt::TextField|
	 columns: int\l
	 echoChar: char\l
	 actionListener: ActionListener\l
	- _base: String_\l
	- _nameCounter: int_\l
	- _serialVersionUID: long_\l
	- textFieldSerializedDataVersion: int\l
	|
	+ getListeners(, , , EventListener\>, , Class\<\>) : \l
	+ setColumns(int) : void\l
	- _initIDs() : void_\l
	# processEvent(AWTEvent) : void\l
	# processActionEvent(ActionEvent) : void\l
	+ setEchoCharacter(char) : void\l
	+ getColumns() : int\l
	# paramString() : String\l
	+ removeActionListener(ActionListener) : void\l
	+ getMinimumSize() : Dimension\l
	+ getMinimumSize(int) : Dimension\l
	+ preferredSize() : Dimension\l
	+ preferredSize(int) : Dimension\l
	 constructComponentName() : String\l
	- writeObject(ObjectOutputStream) : void\l
	+ addActionListener(ActionListener) : void\l
	+ getAccessibleContext() : AccessibleContext\l
	- readObject(ObjectInputStream) : void\l
	+ addNotify() : void\l
	+ getPreferredSize() : Dimension\l
	+ getPreferredSize(int) : Dimension\l
	 eventEnabled(AWTEvent) : boolean\l
	+ minimumSize() : Dimension\l
	+ minimumSize(int) : Dimension\l
	+ getActionListeners() : ActionListener\l
	+ echoCharIsSet() : boolean\l
	+ setEchoChar(char) : void\l
	+ getEchoChar() : char\l
	+ setText(String) : void\l
	}"
	]
javaawteventKeyListener [
	label = "{\<\<interface\>\>\njava.awt.event::KeyListener\n\<\<target, decorator\>\>|
	|
	+ keyPressed(KeyEvent) : void\l
	+ keyReleased(KeyEvent) : void\l
	+ keyTyped(KeyEvent) : void\l
	}"
	style = "filled"
fillcolor = "red"]
javaawtAWTEventMulticaster [
	label = "{java.awt::AWTEventMulticaster\n\<\<decorator, adapter\>\>|
	# a: EventListener\l
	# b: EventListener\l
	|
	+ _getListeners(, , , EventListener\>, , EventListener, Class\<\>) : _\l
	+ windowOpened(WindowEvent) : void\l
	+ mouseExited(MouseEvent) : void\l
	+ mouseDragged(MouseEvent) : void\l
	+ adjustmentValueChanged(AdjustmentEvent) : void\l
	# _save(ObjectOutputStream, String, EventListener) : void_\l
	+ _remove(WindowListener, WindowListener) : WindowListener_\l
	+ _remove(HierarchyListener, HierarchyListener) : HierarchyListener_\l
	+ _remove(ActionListener, ActionListener) : ActionListener_\l
	+ _remove(AdjustmentListener, AdjustmentListener) : AdjustmentListener_\l
	+ _remove(MouseListener, MouseListener) : MouseListener_\l
	+ _remove(WindowStateListener, WindowStateListener) : WindowStateListener_\l
	# remove(EventListener) : EventListener\l
	+ _remove(FocusListener, FocusListener) : FocusListener_\l
	+ _remove(ItemListener, ItemListener) : ItemListener_\l
	+ _remove(TextListener, TextListener) : TextListener_\l
	+ _remove(ComponentListener, ComponentListener) : ComponentListener_\l
	+ _remove(InputMethodListener, InputMethodListener) : InputMethodListener_\l
	+ _remove(MouseWheelListener, MouseWheelListener) : MouseWheelListener_\l
	+ _remove(MouseMotionListener, MouseMotionListener) : MouseMotionListener_\l
	+ _remove(WindowFocusListener, WindowFocusListener) : WindowFocusListener_\l
	+ _remove(HierarchyBoundsListener, HierarchyBoundsListener) : HierarchyBoundsListener_\l
	+ _remove(ContainerListener, ContainerListener) : ContainerListener_\l
	+ _remove(KeyListener, KeyListener) : KeyListener_\l
	+ keyTyped(KeyEvent) : void\l
	+ mousePressed(MouseEvent) : void\l
	- _getListenerCount(EventListener, Class\<\>) : int_\l
	+ mouseReleased(MouseEvent) : void\l
	+ windowLostFocus(WindowEvent) : void\l
	+ actionPerformed(ActionEvent) : void\l
	+ componentResized(ComponentEvent) : void\l
	+ focusLost(FocusEvent) : void\l
	# _addInternal(EventListener, EventListener) : EventListener_\l
	+ windowActivated(WindowEvent) : void\l
	+ mouseEntered(MouseEvent) : void\l
	+ windowClosing(WindowEvent) : void\l
	+ caretPositionChanged(InputMethodEvent) : void\l
	# _removeInternal(EventListener, EventListener) : EventListener_\l
	+ hierarchyChanged(HierarchyEvent) : void\l
	+ ancestorMoved(HierarchyEvent) : void\l
	+ ancestorResized(HierarchyEvent) : void\l
	+ componentMoved(ComponentEvent) : void\l
	+ keyReleased(KeyEvent) : void\l
	+ mouseMoved(MouseEvent) : void\l
	+ windowDeactivated(WindowEvent) : void\l
	+ _add(WindowListener, WindowListener) : WindowListener_\l
	+ _add(HierarchyListener, HierarchyListener) : HierarchyListener_\l
	+ _add(ActionListener, ActionListener) : ActionListener_\l
	+ _add(AdjustmentListener, AdjustmentListener) : AdjustmentListener_\l
	+ _add(MouseListener, MouseListener) : MouseListener_\l
	+ _add(WindowStateListener, WindowStateListener) : WindowStateListener_\l
	+ _add(FocusListener, FocusListener) : FocusListener_\l
	+ _add(ItemListener, ItemListener) : ItemListener_\l
	+ _add(TextListener, TextListener) : TextListener_\l
	+ _add(ComponentListener, ComponentListener) : ComponentListener_\l
	+ _add(InputMethodListener, InputMethodListener) : InputMethodListener_\l
	+ _add(MouseWheelListener, MouseWheelListener) : MouseWheelListener_\l
	+ _add(MouseMotionListener, MouseMotionListener) : MouseMotionListener_\l
	+ _add(WindowFocusListener, WindowFocusListener) : WindowFocusListener_\l
	+ _add(HierarchyBoundsListener, HierarchyBoundsListener) : HierarchyBoundsListener_\l
	+ _add(ContainerListener, ContainerListener) : ContainerListener_\l
	+ _add(KeyListener, KeyListener) : KeyListener_\l
	+ componentHidden(ComponentEvent) : void\l
	+ textValueChanged(TextEvent) : void\l
	+ inputMethodTextChanged(InputMethodEvent) : void\l
	+ focusGained(FocusEvent) : void\l
	+ itemStateChanged(ItemEvent) : void\l
	+ keyPressed(KeyEvent) : void\l
	- _populateListenerArray(EventListener[], EventListener, int) : int_\l
	+ windowStateChanged(WindowEvent) : void\l
	+ componentShown(ComponentEvent) : void\l
	+ componentRemoved(ContainerEvent) : void\l
	+ windowIconified(WindowEvent) : void\l
	+ windowClosed(WindowEvent) : void\l
	# saveInternal(ObjectOutputStream, String) : void\l
	+ windowDeiconified(WindowEvent) : void\l
	+ mouseWheelMoved(MouseWheelEvent) : void\l
	+ mouseClicked(MouseEvent) : void\l
	+ componentAdded(ContainerEvent) : void\l
	+ windowGainedFocus(WindowEvent) : void\l
	}"
	style = "filled"
fillcolor = "green"]
javaawtComponentOrientation [
	label = "{java.awt::ComponentOrientation|
	- _serialVersionUID: long_\l
	- _UNK_BIT: int_\l
	- _HORIZ_BIT: int_\l
	- _LTR_BIT: int_\l
	+ _LEFT_TO_RIGHT: ComponentOrientation_\l
	+ _RIGHT_TO_LEFT: ComponentOrientation_\l
	+ _UNKNOWN: ComponentOrientation_\l
	- orientation: int\l
	|
	+ isLeftToRight() : boolean\l
	+ _getOrientation(Locale) : ComponentOrientation_\l
	+ _getOrientation(ResourceBundle) : ComponentOrientation_\l
	+ isHorizontal() : boolean\l
	}"
	]
javaawtMenu [
	label = "{java.awt::Menu|
	 items: Vector\<MenuComponent\>\l
	 tearOff: boolean\l
	 isHelpMenu: boolean\l
	- _base: String_\l
	- _nameCounter: int_\l
	- _serialVersionUID: long_\l
	- menuSerializedDataVersion: int\l
	|
	+ getItemCount() : int\l
	 shortcuts() : Enumeration\<MenuShortcut\>\l
	- _initIDs() : void_\l
	+ getItem(int) : MenuItem\l
	+ insert(String, int) : void\l
	+ insert(MenuItem, int) : void\l
	+ isTearOff() : boolean\l
	 getItemImpl(int) : MenuItem\l
	+ remove(MenuComponent) : void\l
	+ remove(int) : void\l
	 getShortcutMenuItem(MenuShortcut) : MenuItem\l
	+ paramString() : String\l
	 getAccessibleChildIndex(MenuComponent) : int\l
	+ removeAll() : void\l
	+ addSeparator() : void\l
	 handleShortcut(KeyEvent) : boolean\l
	 countItemsImpl() : int\l
	+ add(String) : void\l
	+ add(MenuItem) : MenuItem\l
	 constructComponentName() : String\l
	 deleteShortcut(MenuShortcut) : void\l
	- writeObject(ObjectOutputStream) : void\l
	+ countItems() : int\l
	+ getAccessibleContext() : AccessibleContext\l
	- readObject(ObjectInputStream) : void\l
	+ addNotify() : void\l
	+ removeNotify() : void\l
	+ insertSeparator(int) : void\l
	}"
	]
javaawtGraphicsConfigTemplate [
	label = "{java.awt::GraphicsConfigTemplate|
	- _serialVersionUID: long_\l
	+ _REQUIRED: int_\l
	+ _PREFERRED: int_\l
	+ _UNNECESSARY: int_\l
	|
	+ isGraphicsConfigSupported(GraphicsConfiguration) : boolean\l
	+ getBestConfiguration(GraphicsConfiguration[]) : GraphicsConfiguration\l
	}"
	]
javaawtImage [
	label = "{java.awt::Image|
	- _defaultImageCaps: ImageCapabilities_\l
	# accelerationPriority: float\l
	+ _UndefinedProperty: Object_\l
	+ _SCALE_DEFAULT: int_\l
	+ _SCALE_FAST: int_\l
	+ _SCALE_SMOOTH: int_\l
	+ _SCALE_REPLICATE: int_\l
	+ _SCALE_AREA_AVERAGING: int_\l
	 surfaceManager: SurfaceManager\l
	|
	+ getScaledInstance(int, int, int) : Image\l
	+ setAccelerationPriority(float) : void\l
	+ getHeight(ImageObserver) : int\l
	+ getProperty(String, ImageObserver) : Object\l
	+ flush() : void\l
	+ getSource() : ImageProducer\l
	+ getAccelerationPriority() : float\l
	+ getWidth(ImageObserver) : int\l
	+ getGraphics() : Graphics\l
	+ getCapabilities(GraphicsConfiguration) : ImageCapabilities\l
	}"
	]
javaawtTextComponent [
	label = "{java.awt::TextComponent|
	 text: String\l
	 editable: boolean\l
	 selectionStart: int\l
	 selectionEnd: int\l
	 backgroundSetByClientCode: boolean\l
	# textListener: TextListener\l
	- _serialVersionUID: long_\l
	- textComponentSerializedDataVersion: int\l
	- checkForEnableIM: boolean\l
	|
	+ getSelectionStart() : int\l
	+ getListeners(, , , EventListener\>, , Class\<\>) : \l
	+ getSelectedText() : String\l
	+ getTextListeners() : TextListener\l
	+ select(int, int) : void\l
	 areInputMethodsEnabled() : boolean\l
	# processEvent(AWTEvent) : void\l
	- enableInputMethodsIfNecessary() : void\l
	+ getInputMethodRequests() : InputMethodRequests\l
	+ setBackground(Color) : void\l
	+ getCaretPosition() : int\l
	# paramString() : String\l
	+ setSelectionEnd(int) : void\l
	+ isEditable() : boolean\l
	+ removeTextListener(TextListener) : void\l
	+ setSelectionStart(int) : void\l
	- canAccessClipboard() : boolean\l
	+ getText() : String\l
	- writeObject(ObjectOutputStream) : void\l
	# processTextEvent(TextEvent) : void\l
	+ getAccessibleContext() : AccessibleContext\l
	- readObject(ObjectInputStream) : void\l
	+ selectAll() : void\l
	+ setEditable(boolean) : void\l
	+ addNotify() : void\l
	 eventEnabled(AWTEvent) : boolean\l
	+ enableInputMethods(boolean) : void\l
	+ removeNotify() : void\l
	+ setCaretPosition(int) : void\l
	+ getSelectionEnd() : int\l
	+ getBackground() : Color\l
	+ addTextListener(TextListener) : void\l
	+ setText(String) : void\l
	}"
	]
javaawtColorPaintContext [
	label = "{java.awt::ColorPaintContext|
	 color: int\l
	 savedTile: WritableRaster\l
	|
	+ getColorModel() : ColorModel\l
	+ dispose() : void\l
	 getRGB() : int\l
	+ getRaster(int, int, int, int) : Raster\l
	}"
	]
javaawtAttributeValue [
	label = "{java.awt::AttributeValue|
	- _log: PlatformLogger_\l
	- value: int\l
	- names: String[]\l
	|
	+ hashCode() : int\l
	+ toString() : String\l
	}"
	]
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtMenuBar->javaawtMenuComponent
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtMenuBar->javaawtMenuContainer
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtMenuBar->javaxaccessibilityAccessible
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<adapts, adapts, adapts\>\>"]javaawtMenuBar->javaawtMenu
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtMenuBar->javaawtMenuShortcut
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtStroke->javaawtShape
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtAdjustable->javaawteventAdjustmentListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtJobAttributes->javaawtJobAttributesDialogType
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtJobAttributes->javaawtJobAttributesDefaultSelectionType
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtJobAttributes->javaawtJobAttributesDestinationType
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtJobAttributes->javaawtJobAttributesMultipleDocumentHandlingType
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtJobAttributes->javaawtJobAttributesSidesType
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtJobAttributes->javaawtJobAttributes
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawteventMouseListener->javautilEventListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtFocusTraversalPolicy->javaawtWindow
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtFocusTraversalPolicy->javaawtContainer
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtFocusTraversalPolicy->javaawtComponent
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawteventInputMethodListener->javautilEventListener
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawteventMouseWheelListener->javautilEventListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtfontNumericShaper->javaawtfontNumericShaperRange
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtfontNumericShaper->javaawtfontNumericShaper
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtpeerMenuComponentPeer->javaawtFont
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtLayoutManager->javaawtContainer
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtLayoutManager->javaawtComponent
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtComposite->javaawtRenderingHints
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtComposite->javaawtimageColorModel
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtSystemTray->javaawtpeerSystemTrayPeer
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtSystemTray->javaawtSystemTray
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtSystemTray->javabeansPropertyChangeListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtSystemTray->javaawtHeadlessException
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtSystemTray->javaawtTrayIcon
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtpeerRobotPeer->javaawtRectangle
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtdndAutoscroll->javaawtPoint
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtMenuComponent->javaawtFont
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtMenuComponent->javaawtpeerMenuComponentPeer
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtMenuComponent->javaawtMenuContainer
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtMenuComponent->javaawtEvent
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtMenuComponent->javaawtMenuComponent
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtMenuComponent->javaawtAWTEvent
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtFontMetrics->javaawtfontFontRenderContext
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtFontMetrics->javaawtFont
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtFontMetrics->javaawtGraphics
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtDefaultKeyboardFocusManager->javaawtKeyboardFocusManager
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtDefaultKeyboardFocusManager->javaawtContainer
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtDefaultKeyboardFocusManager->javaawtSequencedEvent
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawteventActionListener->javautilEventListener
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtComponent->javaawtimageImageObserver
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtComponent->javaawtMenuContainer
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawtpeerComponentPeer
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawtimageBufferStrategy
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawtDimension
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtComponent->sunutilloggingPlatformLogger
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawteventHierarchyListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawteventFocusListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawteventMouseListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawteventInputMethodListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawteventMouseWheelListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawteventHierarchyBoundsListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawtPopupMenu
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawtContainer
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawtColor
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawtdndDropTarget
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawteventKeyListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawteventComponentListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawtGraphicsConfiguration
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawtAWTKeyStroke
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawteventMouseMotionListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawtComponentOrientation
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawtFont
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawtCursor
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawtGraphics
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javabeansPropertyChangeListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawtImageCapabilities
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawtHeadlessException
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawtIllegalComponentStateException
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawtBufferCapabilities
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawtPoint
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawtRectangle
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawtPointerInfo
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawtimageImageObserver
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawtimageImageProducer
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawtInsets
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawtComponent
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtComponent->javaawtAWTEvent
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtModalEventFilter->javaawtEventFilter
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtModalEventFilter->javaawtDialog
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtModalEventFilter->javaawtWindow
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtModalEventFilter->javaawtModalEventFilter
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtRadialGradientPaintContext->javaawtMultipleGradientPaintContext
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtRadialGradientPaintContext->javaawtRadialGradientPaint
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtRadialGradientPaintContext->javaawtMultipleGradientPaintCycleMethod
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtRadialGradientPaintContext->javaawtMultipleGradientPaintContext
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtRadialGradientPaintContext->javaawtMultipleGradientPaintColorSpaceType
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtRadialGradientPaintContext->javaawtimageColorModel
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtGraphics2D->javaawtGraphics
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGraphics2D->javaawtGraphics
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGraphics2D->javaawtimageBufferedImage
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGraphics2D->javaawtStroke
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGraphics2D->javaawtgeomAffineTransform
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGraphics2D->javaawtComposite
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGraphics2D->javaawtPaint
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGraphics2D->javaawtimageRenderedImage
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGraphics2D->javaawtRenderingHintsKey
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtDimension->javaawtgeomDimension2D
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtDimension->javaawtDimension
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtdndDropTargetListener->javautilEventListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtMenuShortcut->javaawtMenuShortcut
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtCheckboxMenuItem->javaawtMenuItem
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtCheckboxMenuItem->javaawtItemSelectable
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtCheckboxMenuItem->javaxaccessibilityAccessible
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtCheckboxMenuItem->javaawteventItemListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtCheckboxMenuItem->javaawtCheckboxMenuItem
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtGradientPaint->javaawtPaint
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<adapts, adapts, adapts\>\>"]javaawtGradientPaint->javaawtColor
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<adapts, adapts, adapts\>\>"]javaawtGradientPaint->javaawtgeomPoint2DFloat
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGradientPaint->javaawtGradientPaint
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGradientPaint->javaawtgeomPoint2D
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGradientPaint->javaawtGradientPaintContext
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawteventWindowStateListener->javautilEventListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtGraphicsEnvironment->javaawtGraphicsEnvironment
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGraphicsEnvironment->javaawtimageBufferedImage
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGraphicsEnvironment->javaawtFont
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGraphicsEnvironment->javaawtHeadlessException
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGraphicsEnvironment->javaawtPoint
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawteventAWTEventListener->javautilEventListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawteventAWTEventListener->javaawtAWTEvent
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawteventItemListener->javautilEventListener
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javabeansVetoableChangeListener->javautilEventListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtItemSelectable->javaawteventItemListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtFont->javaawtpeerFontPeer
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtFont->javaawtgeomAffineTransform
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtFont->javaawtFont
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtFont->javaawtfontFontRenderContext
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtFont->javalangrefSoftReference
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtFont->javaawtgeomPoint2DFloat
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtJobAttributesDialogType->javaawtAttributeValue
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtJobAttributesDialogType->javaawtJobAttributesDialogType
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtJobAttributesDialogType->javaawtAttributeValue
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtBasicStroke->javaawtStroke
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtBasicStroke->javaawtBasicStroke
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtPageAttributesPrintQualityType->javaawtAttributeValue
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtPageAttributesPrintQualityType->javaawtPageAttributesPrintQualityType
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtPageAttributesPrintQualityType->javaawtAttributeValue
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtpeerComponentPeer->javaawtGraphics
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtpeerComponentPeer->javaawtColor
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtpeerComponentPeer->javaawtpeerComponentPeer
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtpeerComponentPeer->javaawtGraphicsConfiguration
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtpeerComponentPeer->javaawtBufferCapabilities
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtpeerComponentPeer->javaawtImage
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtpeerComponentPeer->javaawtFont
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtpeerComponentPeer->javaawtimageImageObserver
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtpeerComponentPeer->javaawtBufferCapabilitiesFlipContents
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtpeerComponentPeer->javaawtimageImageProducer
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtpeerComponentPeer->javaawtComponent
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtpeerComponentPeer->javaawtAWTEvent
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtPageAttributesOriginType->javaawtAttributeValue
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtPageAttributesOriginType->javaawtPageAttributesOriginType
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtPageAttributesOriginType->javaawtAttributeValue
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtComponentBaselineResizeBehavior->javaawtComponentBaselineResizeBehavior
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtMultipleGradientPaint->javaawtPaint
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<adapts, adapts, adapts\>\>"]javaawtMultipleGradientPaint->javaawtMultipleGradientPaintCycleMethod
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<adapts, adapts, adapts\>\>"]javaawtMultipleGradientPaint->javaawtgeomAffineTransform
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<adapts, adapts, adapts\>\>"]javaawtMultipleGradientPaint->javalangrefSoftReference
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<adapts, adapts, adapts\>\>"]javaawtMultipleGradientPaint->javaawtMultipleGradientPaintColorSpaceType
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<adapts, adapts, adapts\>\>"]javaawtMultipleGradientPaint->javaawtimageColorModel
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtEventFilter->javaawtAWTEvent
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtWaitDispatchSupport->javaawtSecondaryLoop
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<adapts, adapts, adapts\>\>"]javaawtWaitDispatchSupport->javautilconcurrentatomicAtomicBoolean
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<adapts, adapts, adapts\>\>"]javaawtWaitDispatchSupport->javaawtEventDispatchThread
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<adapts, adapts, adapts\>\>"]javaawtWaitDispatchSupport->javautilTimer
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<adapts, adapts, adapts\>\>"]javaawtWaitDispatchSupport->javautilTimerTask
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<adapts, adapts, adapts\>\>"]javaawtWaitDispatchSupport->javaawtConditional
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<adapts, adapts, adapts\>\>"]javaawtWaitDispatchSupport->sunutilloggingPlatformLogger
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<adapts, adapts, adapts\>\>"]javaawtWaitDispatchSupport->javalangRunnable
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<adapts, adapts, adapts\>\>"]javaawtWaitDispatchSupport->javaawtEventFilter
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtWaitDispatchSupport->javaawtWaitDispatchSupport
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtMultipleGradientPaintCycleMethod->javaawtMultipleGradientPaintCycleMethod
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtPanel->javaawtContainer
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtPanel->javaxaccessibilityAccessible
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtPanel->javaawtPanel
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtPanel->javaawtLayoutManager
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtPanel->javaawtFlowLayout
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawteventWindowFocusListener->javautilEventListener
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtFrame->javaawtWindow
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtFrame->javaawtMenuContainer
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<adapts, adapts, adapts\>\>"]javaawtFrame->javaawtMenuBar
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<adapts, adapts, adapts\>\>"]javaawtFrame->javaawtRectangle
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtFrame->javaawtImage
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtFrame->javaawtShape
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtMediaTracker->javaawtMediaEntry
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtMediaTracker->javaawtComponent
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtMediaTracker->javaawtImage
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtChoice->javaawtComponent
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtChoice->javaawtItemSelectable
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtChoice->javaxaccessibilityAccessible
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtChoice->javaawteventItemListener
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtButton->javaawtComponent
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtButton->javaxaccessibilityAccessible
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<adapts, adapts, adapts\>\>"]javaawtButton->javaawteventActionListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtButton->javaawtButton
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtLinearGradientPaint->javaawtMultipleGradientPaint
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtLinearGradientPaint->javaawtgeomPoint2D
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtLinearGradientPaint->javaawtMultipleGradientPaintCycleMethod
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtLinearGradientPaint->javaawtgeomAffineTransform
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtLinearGradientPaint->javaawtRenderingHints
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtLinearGradientPaint->javaawtMultipleGradientPaintColorSpaceType
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtLinearGradientPaint->javaawtgeomRectangle2D
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtLinearGradientPaint->javaawtLinearGradientPaint
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtLinearGradientPaint->javaawtGradientPaintContext
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtLinearGradientPaint->javaawtLinearGradientPaintContext
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtLinearGradientPaint->javaawtMultipleGradientPaint
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtLinearGradientPaint->javaawtimageColorModel
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtLinearGradientPaint->javaawtgeomPoint2DFloat
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtLinearGradientPaint->javaawtRectangle
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtRectangle->javaawtgeomRectangle2D
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtRectangle->javaawtShape
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtRectangle->javaawtDimension
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtRectangle->javaawtPoint
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtRectangle->javaawtRectangle
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtPaint->javaawtTransparency
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtPaint->javaawtgeomAffineTransform
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtPaint->javaawtRenderingHints
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtPaint->javaawtgeomRectangle2D
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtPaint->javaawtimageColorModel
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtPaint->javaawtRectangle
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtContainer->javaawtComponent
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<adapts, adapts, adapts\>\>"]javaawtContainer->javaawteventContainerListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<adapts, adapts, adapts\>\>"]javaawtContainer->javaawtLayoutManager
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<adapts, decorates, decorates, adapts, adapts\>\>"]javaawtContainer->javaawtComponent
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<adapts, adapts, adapts\>\>"]javaawtContainer->javaawtLightweightDispatcher
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<adapts, adapts, adapts\>\>"]javaawtContainer->javaawtFocusTraversalPolicy
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtContainer->javaawtContainer
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtContainer->javaawtFont
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtContainer->javaawtDimension
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtContainer->javaawtGraphicsConfiguration
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtContainer->javaawtComponentOrientation
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtSystemColor->javaawtColor
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtSystemColor->javaawtSystemColor
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtSystemColor->javaawtColor
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawteventMouseMotionListener->javautilEventListener
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtgeomRectangle2D->javaawtgeomRectangularShape
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtgeomRectangle2D->javaawtgeomRectangularShape
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtRadialGradientPaint->javaawtMultipleGradientPaint
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtRadialGradientPaint->javaawtgeomPoint2D
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtRadialGradientPaint->javaawtRadialGradientPaintContext
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtRadialGradientPaint->javaawtRadialGradientPaint
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtRadialGradientPaint->javaawtMultipleGradientPaintCycleMethod
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtRadialGradientPaint->javaawtgeomAffineTransform
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtRadialGradientPaint->javaawtRenderingHints
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtRadialGradientPaint->javaawtMultipleGradientPaintColorSpaceType
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtRadialGradientPaint->javaawtgeomRectangle2D
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtRadialGradientPaint->javaawtMultipleGradientPaint
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtRadialGradientPaint->javaawtimageColorModel
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtRadialGradientPaint->javaawtgeomPoint2DFloat
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtRadialGradientPaint->javaawtRectangle
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtMediaEntry->javaawtMediaTracker
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtMediaEntry->javaawtMediaEntry
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtTextComponent->javaawtComponent
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtTextComponent->javaxaccessibilityAccessible
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtTextComponent->javaawteventTextListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtTextComponent->javaawtColor
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtLayoutManager2->javaawtLayoutManager
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtPageAttributes->javaawtPageAttributesColorType
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtPageAttributes->javaawtPageAttributesOriginType
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtPageAttributes->javaawtPageAttributesOrientationRequestedType
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtPageAttributes->javaawtPageAttributesMediaType
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtPageAttributes->javaawtPageAttributesPrintQualityType
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtPageAttributes->javaawtPageAttributes
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtimageRaster->javaawtimageDataBuffer
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtimageRaster->javaawtimageSampleModel
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtimageRaster->javaawtimageRaster
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtimageRaster->javaawtPoint
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtimageRaster->javaawtRectangle
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawteventAWTEventListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtToolkit
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtpeerLightweightPeer
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtMenuItem
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtFrame
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtMenuBar
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtDimension
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtPageAttributes
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtChoice
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtButton
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtJobAttributes
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtCheckboxMenuItem
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtDesktop
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtPopupMenu
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtScrollbar
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtDialog
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtCheckbox
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javabeansPropertyChangeListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtTextField
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtFileDialog
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtTextArea
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtGraphicsConfiguration
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtList
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtImage
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtPoint
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtCanvas
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtWindow
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtAWTError
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtFont
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtPanel
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtimageImageObserver
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtScrollPane
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtMenu
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtInsets
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtimageImageProducer
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtComponent
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtCursor
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtLabel
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtDialogModalExclusionType
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtAWTEvent
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtToolkit->javaawtDialogModalityType
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtGradientPaintContext->javaawtPaintContext
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtGradientPaintContext->javaawtimageColorModel
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtGradientPaintContext->javaawtimageRaster
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGradientPaintContext->javaawtColor
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGradientPaintContext->javaawtgeomPoint2D
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGradientPaintContext->javaawtgeomAffineTransform
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGradientPaintContext->javaawtimageDirectColorModel
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtPoint->javaawtgeomPoint2D
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtPoint->javaawtPoint
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtFlowLayout->javaawtLayoutManager
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtFlowLayout->javaawtDimension
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtFlowLayout->javaawtFlowLayout
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtWindow->javaawtContainer
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtWindow->javaxaccessibilityAccessible
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtWindow->javautilconcurrentatomicAtomicBoolean
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtWindow->javaawtWindowWindowDisposerRecord
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtWindow->javaawteventWindowListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtWindow->javaawtFocusManager
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtWindow->javaawtImage
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtWindow->javaawtWindow
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtWindow->javaawtWindowType
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtWindow->javaawtimInputContext
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtWindow->javaawteventWindowStateListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtWindow->javaawteventWindowFocusListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtWindow->javaawtDialog
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtWindow->javaawtDialogModalExclusionType
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtWindow->javaawtShape
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtWindow->javaawtColor
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtWindow->javaawtFrame
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtWindow->javaawtIllegalComponentStateException
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtWindow->javaawtCursor
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtWindow->javaawtBorderLayout
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtWindow->javaawtBufferCapabilities
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtWindow->javaawtRectangle
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtgeomAffineTransform->javaawtgeomPoint2D
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtgeomAffineTransform->javaawtgeomAffineTransform
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtgeomAffineTransform->javaawtgeomPoint2DFloat
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtgeomAffineTransform->javaawtShape
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtimInputContext->javaawtComponent
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtimInputContext->javaawtAWTEvent
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtContainerOrderFocusTraversalPolicy->javaawtFocusTraversalPolicy
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtContainerOrderFocusTraversalPolicy->javaawtContainer
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtContainerOrderFocusTraversalPolicy->javaawtComponent
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtContainerOrderFocusTraversalPolicy->sunutilloggingPlatformLogger
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtContainerOrderFocusTraversalPolicy->javaawtFocusTraversalPolicy
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtTrayIcon->javaawteventActionListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtTrayIcon->javaawtPopupMenu
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtTrayIcon->javaawtImage
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtTrayIcon->javaawtpeerTrayIconPeer
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtTrayIcon->javaawteventMouseMotionListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtTrayIcon->javaawteventMouseListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtTrayIcon->javaawtHeadlessException
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtTrayIcon->javaawtTrayIcon
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtTrayIcon->javaawtAWTEvent
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtGridLayout->javaawtLayoutManager
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGridLayout->javaawtDimension
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGridLayout->javaawtGridLayout
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtMenuContainer->javaawtEvent
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtMenuContainer->javaawtMenuComponent
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtDialog->javaawtWindow
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<adapts, adapts, adapts\>\>"]javaawtDialog->javaawtSecondaryLoop
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<adapts, adapts, adapts\>\>"]javaawtDialog->javaawtModalEventFilter
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<adapts, adapts, adapts\>\>"]javaawtDialog->javaawtDialogModalityType
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtDialog->javaawtComponent
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtDialog->javaawtShape
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtWindowWindowDisposerRecord->javaawtWindow
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtFocusManager->javaawtContainer
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtFocusManager->javaawtComponent
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtComponentOrientation->javaawtComponentOrientation
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtCanvas->javaawtComponent
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtCanvas->javaxaccessibilityAccessible
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtCanvas->javaawtGraphicsConfiguration
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtCanvas->javaawtCanvas
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtMenu->javaawtMenuItem
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtMenu->javaawtMenuContainer
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtMenu->javaxaccessibilityAccessible
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtMenu->javaawtMenuComponent
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtMenu->javaawtMenuShortcut
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtMenu->javaawtMenu
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtimagePackedColorModel->javaawtimageColorModel
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtimagePackedColorModel->javaawtcolorColorSpace
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtimagePackedColorModel->javaawtimageColorModel
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtPolygon->javaawtShape
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtPolygon->javaawtRectangle
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtPolygon->javaawtPoint
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtGridBagLayout->javaawtLayoutManager2
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtGridBagLayout->javaawtComponent
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtGridBagLayout->javaawtGridBagLayoutInfo
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtGridBagLayout->javaawtGridBagConstraints
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGridBagLayout->javaawtDimension
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGridBagLayout->javaawtPoint
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGridBagLayout->javaawtRectangle
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawteventAdjustmentListener->javautilEventListener
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtLinearGradientPaintContext->javaawtMultipleGradientPaintContext
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtLinearGradientPaintContext->javaawtMultipleGradientPaintCycleMethod
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtLinearGradientPaintContext->javaawtMultipleGradientPaintContext
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtLinearGradientPaintContext->javaawtgeomPoint2D
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtLinearGradientPaintContext->javaawtMultipleGradientPaintColorSpaceType
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtLinearGradientPaintContext->javaawtLinearGradientPaint
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtLinearGradientPaintContext->javaawtimageColorModel
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javabeansPropertyChangeListener->javautilEventListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtEventDispatchThread->javaawtEventQueue
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtEventDispatchThread->sunutilloggingPlatformLogger
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtEventDispatchThread->javaawtEventFilter
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtEventDispatchThread->javaawtComponent
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtEventDispatchThread->javaawtConditional
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtList->javaawtComponent
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtList->javaawtItemSelectable
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtList->javaxaccessibilityAccessible
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtList->javaawteventItemListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtList->javaawteventActionListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtList->javaawtList
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawteventWindowListener->javautilEventListener
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawteventContainerListener->javautilEventListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtimageImageObserver->javaawtImage
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtCursor->javaawtCursorCursorDisposer
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtCursor->javaawtCursor
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtCursor->sunutilloggingPlatformLogger
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtCursor->javaawtAWTException
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtMultipleGradientPaintColorSpaceType->javaawtMultipleGradientPaintColorSpaceType
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtDisplayMode->javaawtDimension
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtDisplayMode->javaawtDisplayMode
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtScrollPaneAdjustable->javaawtAdjustable
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtScrollPaneAdjustable->javaawtScrollPane
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtScrollPaneAdjustable->javaawteventAdjustmentListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtScrollPaneAdjustable->javaawtScrollPaneAdjustable
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtScrollPaneAdjustable->javaawtAWTError
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtMultipleGradientPaintContext->javaawtPaintContext
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtMultipleGradientPaintContext->javaawtMultipleGradientPaintCycleMethod
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtMultipleGradientPaintContext->javaawtMultipleGradientPaintColorSpaceType
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtMultipleGradientPaintContext->javaawtimageColorModel
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtMultipleGradientPaintContext->javaawtimageRaster
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtMultipleGradientPaintContext->javaawtColor
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtMultipleGradientPaintContext->javaawtgeomAffineTransform
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtMultipleGradientPaintContext->javaawtRenderingHints
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtMultipleGradientPaintContext->javaawtimageDirectColorModel
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtMultipleGradientPaintContext->javalangrefSoftReference
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtMultipleGradientPaintContext->javaawtgeomRectangle2D
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtMultipleGradientPaintContext->javaawtMultipleGradientPaint
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtMultipleGradientPaintContext->javaawtRectangle
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtgeomPoint2D->javaawtgeomPoint2D
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtEventQueue->javaawtEventDispatchThread
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtEventQueue->javaawtEventQueue
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtEventQueue->sunutilloggingPlatformLogger
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtEventQueue->javalangRunnable
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtEventQueue->javaawtAWTEvent
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtEventQueue->javaawtWaitDispatchSupport
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtEventQueue->javaawtQueue
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtEventQueue->javaawtConditional
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtEventQueue->javaawtEventFilter
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtcolorColorSpace->javaawtcolorColorSpace
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtDialogModalityType->javaawtDialogModalityType
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtJobAttributesSidesType->javaawtAttributeValue
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtJobAttributesSidesType->javaawtJobAttributesSidesType
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtJobAttributesSidesType->javaawtAttributeValue
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGraphics->javaawtColor
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGraphics->javaawtPolygon
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGraphics->javaawtFont
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGraphics->javaawtimageImageObserver
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGraphics->javaawtImage
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGraphics->javaawtRectangle
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGraphics->javaawtShape
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtMenuItem->javaawtMenuComponent
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtMenuItem->javaxaccessibilityAccessible
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtMenuItem->javaawtMenuShortcut
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtMenuItem->javaawteventActionListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtMenuItem->javaawtMenuItem
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtimageWritableRenderedImage->javaawtimageRenderedImage
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtimageWritableRenderedImage->javaawtimageRaster
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtimageColorModel->javaawtTransparency
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtimageColorModel->javaawtcolorColorSpace
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtimageColorModel->javaawtimageColorModel
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtimageColorModel->javaawtimageDirectColorModel
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtimageColorModel->javaawtimageSampleModel
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtimageColorModel->javaawtimageRaster
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtimageColorModel->javaawtimageWritableRaster
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtTexturePaint->javaawtPaint
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<adapts, adapts, adapts\>\>"]javaawtTexturePaint->javaawtimageBufferedImage
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtPointerInfo->javaawtGraphicsDevice
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtPointerInfo->javaawtPoint
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtfontGraphicAttribute->javaawtGraphics2D
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtfontGraphicAttribute->javaawtgeomAffineTransform
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtGraphicsConfiguration->javaawtImageCapabilities
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtGraphicsConfiguration->javaawtBufferCapabilities
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGraphicsConfiguration->javaawtimageBufferedImage
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGraphicsConfiguration->javaawtAWTException
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtPageAttributesOrientationRequestedType->javaawtAttributeValue
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtPageAttributesOrientationRequestedType->javaawtPageAttributesOrientationRequestedType
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtPageAttributesOrientationRequestedType->javaawtAttributeValue
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtimageImageProducer->javaawtimageImageConsumer
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtLabel->javaawtComponent
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtLabel->javaxaccessibilityAccessible
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtLabel->javaawtLabel
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtAWTEvent->sunutilloggingPlatformLogger
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtAWTEvent->javaawtEvent
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtAWTEvent->javaawtpeerComponentPeer
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtAWTEvent->javaawtAWTEvent
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtDialogModalExclusionType->javaawtDialogModalExclusionType
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtimageWritableRaster->javaawtimageRaster
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtimageWritableRaster->javaawtimageDataBuffer
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtimageWritableRaster->javaawtimageSampleModel
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtimageWritableRaster->javaawtimageRaster
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtimageWritableRaster->javaawtimageWritableRaster
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javautilTimerTask->javalangRunnable
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtpeerLightweightPeer->javaawtpeerComponentPeer
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtEvent->javaawtEvent
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtCompositeContext->javaawtimageRaster
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtCompositeContext->javaawtimageWritableRaster
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawteventComponentListener->javautilEventListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtBufferCapabilities->javaawtImageCapabilities
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtBufferCapabilities->javaawtBufferCapabilitiesFlipContents
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtKeyboardFocusManager->javaawtKeyEventPostProcessor
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtKeyboardFocusManager->javaawtKeyEventDispatcher
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtKeyboardFocusManager->javaawtContainer
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtKeyboardFocusManager->javaawtAWTPermission
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtKeyboardFocusManager->javaawtpeerKeyboardFocusManagerPeer
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtKeyboardFocusManager->sunutilloggingPlatformLogger
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtKeyboardFocusManager->javaawtAWTKeyStroke
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtKeyboardFocusManager->javaawtFocusTraversalPolicy
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtKeyboardFocusManager->javaawtWindow
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtKeyboardFocusManager->javaawtSequencedEvent
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<decorates, decorates\>\>"]javaawtKeyboardFocusManager->javaawtKeyEventPostProcessor
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<decorates, decorates\>\>"]javaawtKeyboardFocusManager->javaawtKeyEventDispatcher
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<decorates, decorates\>\>"]javaawtKeyboardFocusManager->javaawtComponent
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtKeyboardFocusManager->javabeansPropertyChangeListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtKeyboardFocusManager->javaawtDefaultFocusTraversalPolicy
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtKeyboardFocusManager->javaawtDefaultKeyboardFocusManager
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtKeyboardFocusManager->javaawtKeyboardFocusManager
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtKeyboardFocusManager->javaawtAWTEvent
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtKeyboardFocusManager->javabeansVetoableChangeListener
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtTexturePaintContext->javaawtPaintContext
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtTexturePaintContext->javaawtimageColorModel
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtTexturePaintContext->javaawtimageRaster
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtTexturePaintContext->javaawtimageWritableRaster
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtTexturePaintContext->javaawtimageBufferedImage
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtTexturePaintContext->javaawtgeomAffineTransform
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtTexturePaintContext->javaawtRenderingHints
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtTexturePaintContext->javaawtimageDirectColorModel
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtTexturePaintContext->javaawtRectangle
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtJobAttributesMultipleDocumentHandlingType->javaawtAttributeValue
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtJobAttributesMultipleDocumentHandlingType->javaawtJobAttributesMultipleDocumentHandlingType
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtJobAttributesMultipleDocumentHandlingType->javaawtAttributeValue
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawteventFocusListener->javautilEventListener
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtPopupMenu->javaawtMenu
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtPopupMenu->javaawtEvent
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtPopupMenu->javaawtComponent
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtPopupMenu->javaawtPopupMenu
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtCheckboxGroup->javaawtCheckbox
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtdndDropTargetDropTargetAutoScroller->javaawteventActionListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtdndDropTargetDropTargetAutoScroller->javaawtdndAutoscroll
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtdndDropTargetDropTargetAutoScroller->javaawtComponent
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtdndDropTargetDropTargetAutoScroller->javaawtPoint
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtdndDropTargetDropTargetAutoScroller->javaawtRectangle
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtTextArea->javaawtTextComponent
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtTextArea->javaawtAWTKeyStroke
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtTextArea->javaawtTextArea
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtTextArea->javaawtTextComponent
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtGridBagConstraints->javaawtInsets
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtGridBagConstraints->javaawtComponentBaselineResizeBehavior
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtSequencedEvent->javaawtAWTEvent
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtSequencedEvent->javaawtActiveEvent
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtSequencedEvent->javaawtSequencedEvent
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtSequencedEvent->javaawtAWTEvent
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtSequencedEvent->javaawtSentEvent
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaniofilePath->javalangComparable
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaniofilePath->javalangIterable
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaniofilePath->javaniofilePath
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtAlphaComposite->javaawtComposite
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtAlphaComposite->javaawtAlphaComposite
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawteventTextListener->javautilEventListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtimageSampleModel->javaawtimageDataBuffer
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtMouseInfo->javaawtPointerInfo
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtMouseInfo->javaawtHeadlessException
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtMouseInfo->javaawtPoint
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtBufferCapabilitiesFlipContents->javaawtAttributeValue
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtBufferCapabilitiesFlipContents->javaawtBufferCapabilitiesFlipContents
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtBufferCapabilitiesFlipContents->javaawtAttributeValue
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtScrollbar->javaawtComponent
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtScrollbar->javaawtAdjustable
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtScrollbar->javaxaccessibilityAccessible
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtScrollbar->javaawteventAdjustmentListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtScrollbar->javaawtScrollbar
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtRenderingHintsKey->javaawtRenderingHintsKey
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtShape->javaawtgeomPoint2D
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtShape->javaawtgeomAffineTransform
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtShape->javaawtgeomRectangle2D
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtfontFontRenderContext->javaawtgeomAffineTransform
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtfontFontRenderContext->javaawtfontFontRenderContext
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtimageDataBuffer->javaawtimageDataBuffer
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtScrollPane->javaawtContainer
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtScrollPane->javaxaccessibilityAccessible
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<adapts, adapts, adapts\>\>"]javaawtScrollPane->javaawtScrollPaneAdjustable
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtScrollPane->javaawtAWTError
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtScrollPane->javaawtPanel
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtScrollPane->javaawtScrollPane
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtScrollPane->javaawtLayoutManager
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtScrollPane->javaawtComponent
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtScrollPane->javaawtBorderLayout
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtDefaultFocusTraversalPolicy->javaawtContainerOrderFocusTraversalPolicy
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtDefaultFocusTraversalPolicy->javaawtComponent
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtDefaultFocusTraversalPolicy->javaawtContainerOrderFocusTraversalPolicy
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtSentEvent->javaawtAWTEvent
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtSentEvent->javaawtActiveEvent
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtSentEvent->javaawtAWTEvent
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtSentEvent->javaawtSentEvent
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]sunutilloggingPlatformLogger->sunutilloggingPlatformLogger
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtBorderLayout->javaawtLayoutManager2
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtBorderLayout->javaawtComponent
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtBorderLayout->javaawtDimension
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtBorderLayout->javaawtBorderLayout
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtDesktop->javaawtpeerDesktopPeer
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtDesktop->javaawtAWTPermission
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtDesktop->javaawtHeadlessException
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtDesktop->javaawtDesktop
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtRobot->javaawtimageDirectColorModel
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtRobot->javaawtRobotRobotDisposer
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtRobot->javaawtpeerRobotPeer
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtRobot->javaawtimageBufferedImage
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtRobot->javaawtColor
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtRobot->javaawtGraphicsDevice
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtRobot->javaawtAWTException
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtRobot->javaawtRectangle
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtColor->javaawtPaint
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtColor->javaawtColor
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtColor->javaawtcolorColorSpace
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtColor->javaawtColorPaintContext
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtFileDialog->javaawtDialog
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<adapts, adapts, adapts\>\>"]javaawtFileDialog->javaioFilenameFilter
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtFileDialog->javaawtFileDialog
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtFileDialog->javaawtDialog
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtAWTKeyStroke->javaawtVKCollection
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtAWTKeyStroke->javaawtAWTKeyStroke
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtimageImageConsumer->javaawtimageColorModel
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtgeomPoint2DFloat->javaawtgeomPoint2D
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtimageBufferedImage->javaawtImage
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtimageBufferedImage->javaawtTransparency
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtimageBufferedImage->javaawtimageWritableRenderedImage
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtimageBufferedImage->javaawtimageColorModel
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtimageBufferedImage->javaawtimageWritableRaster
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtimageBufferedImage->javaawtimageBufferedImage
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtimageBufferedImage->javaawtimageDirectColorModel
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtimageBufferedImage->javaawtImage
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtimageBufferedImage->javaawtPoint
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtimageBufferedImage->javaawtRectangle
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javautilTimer->javautilTimer
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javautilTimer->javautilTimerTask
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtJobAttributesDefaultSelectionType->javaawtAttributeValue
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtJobAttributesDefaultSelectionType->javaawtJobAttributesDefaultSelectionType
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtJobAttributesDefaultSelectionType->javaawtAttributeValue
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtimageRenderedImage->javaawtimageWritableRaster
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtimageRenderedImage->javaawtRectangle
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtSplashScreen->javaawtimageBufferedImage
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtSplashScreen->sunutilloggingPlatformLogger
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtSplashScreen->javaawtSplashScreen
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtSplashScreen->javaawtHeadlessException
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtfontNumericShaperRange->javaawtfontNumericShaperRange
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtdndDropTarget->javaawtdndDropTargetListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtdndDropTarget->javaawtpeerComponentPeer
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtdndDropTarget->javaawtdndDropTargetDropTargetAutoScroller
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtdndDropTarget->javaawtdndDropTargetContext
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtdndDropTarget->javaawtComponent
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtdndDropTarget->javaawtdatatransferFlavorMap
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtdndDropTarget->javaawtdndDropTargetListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtdndDropTarget->javaawtdndDropTarget
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtdndDropTarget->javaawtHeadlessException
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtdndDropTarget->javaawtPoint
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtJobAttributesDestinationType->javaawtAttributeValue
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtJobAttributesDestinationType->javaawtJobAttributesDestinationType
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtJobAttributesDestinationType->javaawtAttributeValue
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtLightweightDispatcher->javaawteventAWTEventListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtLightweightDispatcher->javaawtContainer
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtLightweightDispatcher->javaawtCursor
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtLightweightDispatcher->javaawtComponent
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtLightweightDispatcher->sunutilloggingPlatformLogger
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtLightweightDispatcher->javaawtLightweightDispatcher
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtgeomRectangularShape->javaawtShape
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtgeomRectangularShape->javaawtgeomDimension2D
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtgeomRectangularShape->javaawtRectangle
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtCheckbox->javaawtComponent
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtCheckbox->javaawtItemSelectable
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtCheckbox->javaxaccessibilityAccessible
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtCheckbox->javaawteventItemListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtCheckbox->javaawtCheckboxGroup
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtCheckbox->javaawtCheckbox
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtimageDirectColorModel->javaawtimagePackedColorModel
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtimageDirectColorModel->javaawtimageDirectColorModel
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtimageDirectColorModel->javaawtimagePackedColorModel
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtimageDirectColorModel->javaawtimageRaster
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtgeomDimension2D->javaawtgeomDimension2D
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtGraphicsDevice->javaawtWindow
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtGraphicsDevice->javaawtRectangle
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGraphicsDevice->javaawtColor
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGraphicsDevice->javaawtDisplayMode
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGraphicsDevice->javaawtGraphicsConfigTemplate
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtPageAttributesColorType->javaawtAttributeValue
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtPageAttributesColorType->javaawtPageAttributesColorType
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtPageAttributesColorType->javaawtAttributeValue
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtRenderingHints->javaawtRenderingHintsKey
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtRenderingHints->javaawtRenderingHints
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtdndDropTargetContext->javaawtdndDropTarget
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtdndDropTargetContext->javaawtdatatransferTransferable
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtdndDropTargetContext->javaawtdndpeerDropTargetContextPeer
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawteventHierarchyListener->javautilEventListener
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtPageAttributesMediaType->javaawtAttributeValue
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtPageAttributesMediaType->javaawtPageAttributesMediaType
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtPageAttributesMediaType->javaawtAttributeValue
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtCardLayout->javaawtLayoutManager2
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtCardLayout->javaawtCardLayout
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtCardLayout->javaawtDimension
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtWindowType->javaawtWindowType
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawteventHierarchyBoundsListener->javautilEventListener
	edge [style = "solid"] [arrowhead = "empty"]
	[label = ""]javaawtTextField->javaawtTextComponent
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtTextField->javaawteventActionListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtTextField->javaawtTextField
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtTextField->javaawtTextComponent
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawteventKeyListener->javautilEventListener
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtAWTEventMulticaster->javaawteventItemListener
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtAWTEventMulticaster->javaawteventTextListener
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtAWTEventMulticaster->javaawteventKeyListener
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtAWTEventMulticaster->javaawteventComponentListener
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtAWTEventMulticaster->javaawteventHierarchyListener
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtAWTEventMulticaster->javaawteventWindowListener
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtAWTEventMulticaster->javaawteventMouseMotionListener
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtAWTEventMulticaster->javaawteventFocusListener
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtAWTEventMulticaster->javaawteventMouseListener
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtAWTEventMulticaster->javaawteventInputMethodListener
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtAWTEventMulticaster->javaawteventContainerListener
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtAWTEventMulticaster->javaawteventMouseWheelListener
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtAWTEventMulticaster->javaawteventHierarchyBoundsListener
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtAWTEventMulticaster->javaawteventActionListener
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtAWTEventMulticaster->javaawteventWindowStateListener
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtAWTEventMulticaster->javaawteventWindowFocusListener
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtAWTEventMulticaster->javaawteventAdjustmentListener
	edge [style = "solid"] [arrowhead = "open"]
	[label = "\<\<adapts, decorates, decorates, adapts, adapts\>\>"]javaawtAWTEventMulticaster->javautilEventListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtAWTEventMulticaster->javaawteventItemListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtAWTEventMulticaster->javaawteventTextListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtAWTEventMulticaster->javaawteventKeyListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtAWTEventMulticaster->javaawtAWTEventMulticaster
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtAWTEventMulticaster->javaawteventComponentListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtAWTEventMulticaster->javaawteventHierarchyListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtAWTEventMulticaster->javaawteventWindowListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtAWTEventMulticaster->javaawteventMouseMotionListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtAWTEventMulticaster->javaawteventFocusListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtAWTEventMulticaster->javaawteventMouseListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtAWTEventMulticaster->javaawteventInputMethodListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtAWTEventMulticaster->javaawteventContainerListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtAWTEventMulticaster->javaawteventMouseWheelListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtAWTEventMulticaster->javaawteventHierarchyBoundsListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtAWTEventMulticaster->javaawteventActionListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtAWTEventMulticaster->javaawteventWindowStateListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtAWTEventMulticaster->javaawteventWindowFocusListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtAWTEventMulticaster->javaawteventAdjustmentListener
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtpeerKeyboardFocusManagerPeer->javaawtWindow
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtpeerKeyboardFocusManagerPeer->javaawtComponent
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtGraphicsConfigTemplate->javaawtGraphicsConfiguration
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtImage->javaawtImageCapabilities
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtImage->javaawtimageImageObserver
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtImage->javaawtGraphicsConfiguration
	edge [style = "dashed"] [arrowhead = "empty"]
	[label = ""]javaawtColorPaintContext->javaawtPaintContext
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtColorPaintContext->javaawtimageWritableRaster
	edge [style = "dashed"] [arrowhead = "open"]
	[label = ""]javaawtColorPaintContext->javaawtimageColorModel
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtRobotRobotDisposer->javaawtpeerRobotPeer
	edge [style = "solid"] [arrowhead = "open"]
	[label = ""]javaawtAttributeValue->sunutilloggingPlatformLogger
}